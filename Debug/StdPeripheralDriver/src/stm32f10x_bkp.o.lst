   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_bkp.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_bkp.c"
 17706              		.align	2
 17707              		.global	BKP_DeInit
 17708              		.thumb
 17709              		.thumb_func
 17711              	BKP_DeInit:
 17712              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @file    stm32f10x_bkp.c
   4:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief   This file provides all the BKP firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #include "stm32f10x_bkp.h"
  24:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP 
  31:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief BKP driver modules
  32:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  34:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  38:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
  41:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  42:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Defines
  44:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  45:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  46:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* ------------ BKP registers bit address in the alias region --------------- */
  48:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define BKP_OFFSET        (BKP_BASE - PERIPH_BASE)
  49:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  50:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* --- CR Register ----*/
  51:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  52:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TPAL bit */
  53:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CR_OFFSET         (BKP_OFFSET + 0x30)
  54:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TPAL_BitNumber    0x01
  55:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CR_TPAL_BB        (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPAL_BitNumber * 4))
  56:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  57:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TPE bit */
  58:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TPE_BitNumber     0x00
  59:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CR_TPE_BB         (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPE_BitNumber * 4))
  60:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  61:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* --- CSR Register ---*/
  62:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TPIE bit */
  64:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_OFFSET        (BKP_OFFSET + 0x34)
  65:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TPIE_BitNumber    0x02
  66:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_TPIE_BB       (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TPIE_BitNumber * 4))
  67:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  68:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TIF bit */
  69:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TIF_BitNumber     0x09
  70:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_TIF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TIF_BitNumber * 4))
  71:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  72:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TEF bit */
  73:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TEF_BitNumber     0x08
  74:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_TEF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEF_BitNumber * 4))
  75:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  76:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* ---------------------- BKP registers bit mask ------------------------ */
  77:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  78:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* RTCCR register bit mask */
  79:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define RTCCR_CAL_MASK    ((uint16_t)0xFF80)
  80:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define RTCCR_MASK        ((uint16_t)0xFC7F)
  81:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  82:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
  83:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
  84:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */ 
  85:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  86:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  87:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Macros
  88:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  89:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  90:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  91:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
  92:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
  93:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  94:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  95:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Variables
  96:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  97:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  98:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  99:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 100:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
 101:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 102:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 103:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_FunctionPrototypes
 104:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
 105:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 106:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 107:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 108:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
 109:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 110:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 111:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Functions
 112:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
 113:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 114:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 115:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 116:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Deinitializes the BKP peripheral registers to their default reset values.
 117:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 118:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 119:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 120:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_DeInit(void)
 121:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17713              		.loc 1 121 0
 17714              		.cfi_startproc
 17715              		@ args = 0, pretend = 0, frame = 0
 17716              		@ frame_needed = 1, uses_anonymous_args = 0
 17717 0000 80B5     		push	{r7, lr}
 17718              	.LCFI0:
 17719              		.cfi_def_cfa_offset 8
 17720 0002 00AF     		add	r7, sp, #0
 17721              		.cfi_offset 14, -4
 17722              		.cfi_offset 7, -8
 17723              	.LCFI1:
 17724              		.cfi_def_cfa_register 7
 122:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
 17725              		.loc 1 122 0
 17726 0004 4FF00100 		mov	r0, #1
 17727 0008 FFF7FEFF 		bl	RCC_BackupResetCmd
 123:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
 17728              		.loc 1 123 0
 17729 000c 4FF00000 		mov	r0, #0
 17730 0010 FFF7FEFF 		bl	RCC_BackupResetCmd
 124:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 17731              		.loc 1 124 0
 17732 0014 80BD     		pop	{r7, pc}
 17733              		.cfi_endproc
 17734              	.LFE29:
 17736 0016 00BF     		.section	.text.BKP_TamperPinLevelConfig,"ax",%progbits
 17737              		.align	2
 17738              		.global	BKP_TamperPinLevelConfig
 17739              		.thumb
 17740              		.thumb_func
 17742              	BKP_TamperPinLevelConfig:
 17743              	.LFB30:
 125:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 126:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 127:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Configures the Tamper Pin active level.
 128:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_TamperPinLevel: specifies the Tamper Pin active level.
 129:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 130:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_High: Tamper pin active on high level
 131:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_Low: Tamper pin active on low level
 132:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 133:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 134:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel)
 135:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17744              		.loc 1 135 0
 17745              		.cfi_startproc
 17746              		@ args = 0, pretend = 0, frame = 8
 17747              		@ frame_needed = 1, uses_anonymous_args = 0
 17748              		@ link register save eliminated.
 17749 0000 80B4     		push	{r7}
 17750              	.LCFI2:
 17751              		.cfi_def_cfa_offset 4
 17752 0002 83B0     		sub	sp, sp, #12
 17753              	.LCFI3:
 17754              		.cfi_def_cfa_offset 16
 17755 0004 00AF     		add	r7, sp, #0
 17756              		.cfi_offset 7, -4
 17757              	.LCFI4:
 17758              		.cfi_def_cfa_register 7
 17759 0006 0346     		mov	r3, r0
 17760 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 136:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 137:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_TAMPER_PIN_LEVEL(BKP_TamperPinLevel));
 138:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPAL_BB = BKP_TamperPinLevel;
 17761              		.loc 1 138 0
 17762 000a 044B     		ldr	r3, .L3
 17763 000c FA88     		ldrh	r2, [r7, #6]
 17764 000e 1A60     		str	r2, [r3, #0]
 139:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 17765              		.loc 1 139 0
 17766 0010 07F10C07 		add	r7, r7, #12
 17767 0014 BD46     		mov	sp, r7
 17768 0016 80BC     		pop	{r7}
 17769 0018 7047     		bx	lr
 17770              	.L4:
 17771 001a 00BF     		.align	2
 17772              	.L3:
 17773 001c 04860D42 		.word	1108182532
 17774              		.cfi_endproc
 17775              	.LFE30:
 17777              		.section	.text.BKP_TamperPinCmd,"ax",%progbits
 17778              		.align	2
 17779              		.global	BKP_TamperPinCmd
 17780              		.thumb
 17781              		.thumb_func
 17783              	BKP_TamperPinCmd:
 17784              	.LFB31:
 140:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 141:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 142:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin activation.
 143:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin activation.
 144:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 145:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 146:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 147:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_TamperPinCmd(FunctionalState NewState)
 148:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17785              		.loc 1 148 0
 17786              		.cfi_startproc
 17787              		@ args = 0, pretend = 0, frame = 8
 17788              		@ frame_needed = 1, uses_anonymous_args = 0
 17789              		@ link register save eliminated.
 17790 0000 80B4     		push	{r7}
 17791              	.LCFI5:
 17792              		.cfi_def_cfa_offset 4
 17793 0002 83B0     		sub	sp, sp, #12
 17794              	.LCFI6:
 17795              		.cfi_def_cfa_offset 16
 17796 0004 00AF     		add	r7, sp, #0
 17797              		.cfi_offset 7, -4
 17798              	.LCFI7:
 17799              		.cfi_def_cfa_register 7
 17800 0006 0346     		mov	r3, r0
 17801 0008 FB71     		strb	r3, [r7, #7]
 149:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 150:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 151:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPE_BB = (uint32_t)NewState;
 17802              		.loc 1 151 0
 17803 000a 044B     		ldr	r3, .L6
 17804 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 17805 000e 1A60     		str	r2, [r3, #0]
 152:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 17806              		.loc 1 152 0
 17807 0010 07F10C07 		add	r7, r7, #12
 17808 0014 BD46     		mov	sp, r7
 17809 0016 80BC     		pop	{r7}
 17810 0018 7047     		bx	lr
 17811              	.L7:
 17812 001a 00BF     		.align	2
 17813              	.L6:
 17814 001c 00860D42 		.word	1108182528
 17815              		.cfi_endproc
 17816              	.LFE31:
 17818              		.section	.text.BKP_ITConfig,"ax",%progbits
 17819              		.align	2
 17820              		.global	BKP_ITConfig
 17821              		.thumb
 17822              		.thumb_func
 17824              	BKP_ITConfig:
 17825              	.LFB32:
 153:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 154:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 155:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin Interrupt.
 156:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin Interrupt.
 157:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 158:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 159:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 160:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_ITConfig(FunctionalState NewState)
 161:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17826              		.loc 1 161 0
 17827              		.cfi_startproc
 17828              		@ args = 0, pretend = 0, frame = 8
 17829              		@ frame_needed = 1, uses_anonymous_args = 0
 17830              		@ link register save eliminated.
 17831 0000 80B4     		push	{r7}
 17832              	.LCFI8:
 17833              		.cfi_def_cfa_offset 4
 17834 0002 83B0     		sub	sp, sp, #12
 17835              	.LCFI9:
 17836              		.cfi_def_cfa_offset 16
 17837 0004 00AF     		add	r7, sp, #0
 17838              		.cfi_offset 7, -4
 17839              	.LCFI10:
 17840              		.cfi_def_cfa_register 7
 17841 0006 0346     		mov	r3, r0
 17842 0008 FB71     		strb	r3, [r7, #7]
 162:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 163:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 164:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CSR_TPIE_BB = (uint32_t)NewState;
 17843              		.loc 1 164 0
 17844 000a 044B     		ldr	r3, .L9
 17845 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 17846 000e 1A60     		str	r2, [r3, #0]
 165:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 17847              		.loc 1 165 0
 17848 0010 07F10C07 		add	r7, r7, #12
 17849 0014 BD46     		mov	sp, r7
 17850 0016 80BC     		pop	{r7}
 17851 0018 7047     		bx	lr
 17852              	.L10:
 17853 001a 00BF     		.align	2
 17854              	.L9:
 17855 001c 88860D42 		.word	1108182664
 17856              		.cfi_endproc
 17857              	.LFE32:
 17859              		.section	.text.BKP_RTCOutputConfig,"ax",%progbits
 17860              		.align	2
 17861              		.global	BKP_RTCOutputConfig
 17862              		.thumb
 17863              		.thumb_func
 17865              	BKP_RTCOutputConfig:
 17866              	.LFB33:
 166:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 167:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 168:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Select the RTC output source to output on the Tamper pin.
 169:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_RTCOutputSource: specifies the RTC output source.
 170:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 171:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_None: no RTC output on the Tamper pin.
 172:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_CalibClock: output the RTC clock with frequency
 173:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *                                          divided by 64 on the Tamper pin.
 174:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse signal on
 175:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *                                     the Tamper pin.
 176:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Second: output the RTC Second pulse signal on
 177:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *                                      the Tamper pin.  
 178:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 179:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 180:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource)
 181:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17867              		.loc 1 181 0
 17868              		.cfi_startproc
 17869              		@ args = 0, pretend = 0, frame = 16
 17870              		@ frame_needed = 1, uses_anonymous_args = 0
 17871              		@ link register save eliminated.
 17872 0000 80B4     		push	{r7}
 17873              	.LCFI11:
 17874              		.cfi_def_cfa_offset 4
 17875 0002 85B0     		sub	sp, sp, #20
 17876              	.LCFI12:
 17877              		.cfi_def_cfa_offset 24
 17878 0004 00AF     		add	r7, sp, #0
 17879              		.cfi_offset 7, -4
 17880              	.LCFI13:
 17881              		.cfi_def_cfa_register 7
 17882 0006 0346     		mov	r3, r0
 17883 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 182:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 17884              		.loc 1 182 0
 17885 000a 4FF00003 		mov	r3, #0
 17886 000e FB81     		strh	r3, [r7, #14]	@ movhi
 183:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 184:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_RTC_OUTPUT_SOURCE(BKP_RTCOutputSource));
 185:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 17887              		.loc 1 185 0
 17888 0010 094B     		ldr	r3, .L12
 17889 0012 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 17890 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 186:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Clear CCO, ASOE and ASOS bits */
 187:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_MASK;
 17891              		.loc 1 187 0
 17892 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 17893 0018 23F46073 		bic	r3, r3, #896
 17894 001c FB81     		strh	r3, [r7, #14]	@ movhi
 188:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   
 189:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CCO, ASOE and ASOS bits according to BKP_RTCOutputSource value */
 190:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg |= BKP_RTCOutputSource;
 17895              		.loc 1 190 0
 17896 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 17897 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 17898 0022 42EA0303 		orr	r3, r2, r3
 17899 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 191:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Store the new value */
 192:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 17900              		.loc 1 192 0
 17901 0028 034B     		ldr	r3, .L12
 17902 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 17903 002c 9A85     		strh	r2, [r3, #44]	@ movhi
 193:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 17904              		.loc 1 193 0
 17905 002e 07F11407 		add	r7, r7, #20
 17906 0032 BD46     		mov	sp, r7
 17907 0034 80BC     		pop	{r7}
 17908 0036 7047     		bx	lr
 17909              	.L13:
 17910              		.align	2
 17911              	.L12:
 17912 0038 006C0040 		.word	1073769472
 17913              		.cfi_endproc
 17914              	.LFE33:
 17916              		.section	.text.BKP_SetRTCCalibrationValue,"ax",%progbits
 17917              		.align	2
 17918              		.global	BKP_SetRTCCalibrationValue
 17919              		.thumb
 17920              		.thumb_func
 17922              	BKP_SetRTCCalibrationValue:
 17923              	.LFB34:
 194:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 195:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 196:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Sets RTC Clock Calibration value.
 197:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  CalibrationValue: specifies the RTC Clock Calibration value.
 198:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter must be a number between 0 and 0x7F.
 199:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 200:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 201:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue)
 202:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17924              		.loc 1 202 0
 17925              		.cfi_startproc
 17926              		@ args = 0, pretend = 0, frame = 16
 17927              		@ frame_needed = 1, uses_anonymous_args = 0
 17928              		@ link register save eliminated.
 17929 0000 80B4     		push	{r7}
 17930              	.LCFI14:
 17931              		.cfi_def_cfa_offset 4
 17932 0002 85B0     		sub	sp, sp, #20
 17933              	.LCFI15:
 17934              		.cfi_def_cfa_offset 24
 17935 0004 00AF     		add	r7, sp, #0
 17936              		.cfi_offset 7, -4
 17937              	.LCFI16:
 17938              		.cfi_def_cfa_register 7
 17939 0006 0346     		mov	r3, r0
 17940 0008 FB71     		strb	r3, [r7, #7]
 203:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 17941              		.loc 1 203 0
 17942 000a 4FF00003 		mov	r3, #0
 17943 000e FB81     		strh	r3, [r7, #14]	@ movhi
 204:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 205:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_CALIBRATION_VALUE(CalibrationValue));
 206:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 17944              		.loc 1 206 0
 17945 0010 0A4B     		ldr	r3, .L15
 17946 0012 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 17947 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 207:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Clear CAL[6:0] bits */
 208:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_CAL_MASK;
 17948              		.loc 1 208 0
 17949 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 17950 0018 23F07F03 		bic	r3, r3, #127
 17951 001c FB81     		strh	r3, [r7, #14]	@ movhi
 209:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CAL[6:0] bits according to CalibrationValue value */
 210:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg |= CalibrationValue;
 17952              		.loc 1 210 0
 17953 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 17954 0020 9AB2     		uxth	r2, r3
 17955 0022 FB89     		ldrh	r3, [r7, #14]	@ movhi
 17956 0024 42EA0303 		orr	r3, r2, r3
 17957 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 211:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Store the new value */
 212:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 17958              		.loc 1 212 0
 17959 002a 044B     		ldr	r3, .L15
 17960 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 17961 002e 9A85     		strh	r2, [r3, #44]	@ movhi
 213:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 17962              		.loc 1 213 0
 17963 0030 07F11407 		add	r7, r7, #20
 17964 0034 BD46     		mov	sp, r7
 17965 0036 80BC     		pop	{r7}
 17966 0038 7047     		bx	lr
 17967              	.L16:
 17968 003a 00BF     		.align	2
 17969              	.L15:
 17970 003c 006C0040 		.word	1073769472
 17971              		.cfi_endproc
 17972              	.LFE34:
 17974              		.section	.text.BKP_WriteBackupRegister,"ax",%progbits
 17975              		.align	2
 17976              		.global	BKP_WriteBackupRegister
 17977              		.thumb
 17978              		.thumb_func
 17980              	BKP_WriteBackupRegister:
 17981              	.LFB35:
 214:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 215:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 216:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Writes user data to the specified Data Backup Register.
 217:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 218:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 219:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  Data: data to write
 220:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 221:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 222:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data)
 223:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 17982              		.loc 1 223 0
 17983              		.cfi_startproc
 17984              		@ args = 0, pretend = 0, frame = 16
 17985              		@ frame_needed = 1, uses_anonymous_args = 0
 17986              		@ link register save eliminated.
 17987 0000 80B4     		push	{r7}
 17988              	.LCFI17:
 17989              		.cfi_def_cfa_offset 4
 17990 0002 85B0     		sub	sp, sp, #20
 17991              	.LCFI18:
 17992              		.cfi_def_cfa_offset 24
 17993 0004 00AF     		add	r7, sp, #0
 17994              		.cfi_offset 7, -4
 17995              	.LCFI19:
 17996              		.cfi_def_cfa_register 7
 17997 0006 0246     		mov	r2, r0
 17998 0008 0B46     		mov	r3, r1
 17999 000a FA80     		strh	r2, [r7, #6]	@ movhi
 18000 000c BB80     		strh	r3, [r7, #4]	@ movhi
 224:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 18001              		.loc 1 224 0
 18002 000e 4FF00003 		mov	r3, #0
 18003 0012 FB60     		str	r3, [r7, #12]
 225:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 226:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 227:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 228:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 229:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 18004              		.loc 1 229 0
 18005 0014 064B     		ldr	r3, .L18
 18006 0016 FB60     		str	r3, [r7, #12]
 230:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 18007              		.loc 1 230 0
 18008 0018 FA88     		ldrh	r2, [r7, #6]
 18009 001a FB68     		ldr	r3, [r7, #12]
 18010 001c D318     		adds	r3, r2, r3
 18011 001e FB60     		str	r3, [r7, #12]
 231:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 232:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) tmp = Data;
 18012              		.loc 1 232 0
 18013 0020 FB68     		ldr	r3, [r7, #12]
 18014 0022 BA88     		ldrh	r2, [r7, #4]
 18015 0024 1A60     		str	r2, [r3, #0]
 233:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 18016              		.loc 1 233 0
 18017 0026 07F11407 		add	r7, r7, #20
 18018 002a BD46     		mov	sp, r7
 18019 002c 80BC     		pop	{r7}
 18020 002e 7047     		bx	lr
 18021              	.L19:
 18022              		.align	2
 18023              	.L18:
 18024 0030 006C0040 		.word	1073769472
 18025              		.cfi_endproc
 18026              	.LFE35:
 18028              		.section	.text.BKP_ReadBackupRegister,"ax",%progbits
 18029              		.align	2
 18030              		.global	BKP_ReadBackupRegister
 18031              		.thumb
 18032              		.thumb_func
 18034              	BKP_ReadBackupRegister:
 18035              	.LFB36:
 234:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 235:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 236:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Reads data from the specified Data Backup Register.
 237:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 238:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 239:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval The content of the specified Data Backup Register
 240:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 241:../StdPeripheralDriver/src/stm32f10x_bkp.c **** uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR)
 242:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 18036              		.loc 1 242 0
 18037              		.cfi_startproc
 18038              		@ args = 0, pretend = 0, frame = 16
 18039              		@ frame_needed = 1, uses_anonymous_args = 0
 18040              		@ link register save eliminated.
 18041 0000 80B4     		push	{r7}
 18042              	.LCFI20:
 18043              		.cfi_def_cfa_offset 4
 18044 0002 85B0     		sub	sp, sp, #20
 18045              	.LCFI21:
 18046              		.cfi_def_cfa_offset 24
 18047 0004 00AF     		add	r7, sp, #0
 18048              		.cfi_offset 7, -4
 18049              	.LCFI22:
 18050              		.cfi_def_cfa_register 7
 18051 0006 0346     		mov	r3, r0
 18052 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 243:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 18053              		.loc 1 243 0
 18054 000a 4FF00003 		mov	r3, #0
 18055 000e FB60     		str	r3, [r7, #12]
 244:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 245:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 246:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 247:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 248:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 18056              		.loc 1 248 0
 18057 0010 074B     		ldr	r3, .L21
 18058 0012 FB60     		str	r3, [r7, #12]
 249:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 18059              		.loc 1 249 0
 18060 0014 FA88     		ldrh	r2, [r7, #6]
 18061 0016 FB68     		ldr	r3, [r7, #12]
 18062 0018 D318     		adds	r3, r2, r3
 18063 001a FB60     		str	r3, [r7, #12]
 250:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 251:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   return (*(__IO uint16_t *) tmp);
 18064              		.loc 1 251 0
 18065 001c FB68     		ldr	r3, [r7, #12]
 18066 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18067 0020 9BB2     		uxth	r3, r3
 252:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 18068              		.loc 1 252 0
 18069 0022 1846     		mov	r0, r3
 18070 0024 07F11407 		add	r7, r7, #20
 18071 0028 BD46     		mov	sp, r7
 18072 002a 80BC     		pop	{r7}
 18073 002c 7047     		bx	lr
 18074              	.L22:
 18075 002e 00BF     		.align	2
 18076              	.L21:
 18077 0030 006C0040 		.word	1073769472
 18078              		.cfi_endproc
 18079              	.LFE36:
 18081              		.section	.text.BKP_GetFlagStatus,"ax",%progbits
 18082              		.align	2
 18083              		.global	BKP_GetFlagStatus
 18084              		.thumb
 18085              		.thumb_func
 18087              	BKP_GetFlagStatus:
 18088              	.LFB37:
 253:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 254:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 255:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Event flag is set or not.
 256:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 257:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Event flag (SET or RESET).
 258:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 259:../StdPeripheralDriver/src/stm32f10x_bkp.c **** FlagStatus BKP_GetFlagStatus(void)
 260:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 18089              		.loc 1 260 0
 18090              		.cfi_startproc
 18091              		@ args = 0, pretend = 0, frame = 0
 18092              		@ frame_needed = 1, uses_anonymous_args = 0
 18093              		@ link register save eliminated.
 18094 0000 80B4     		push	{r7}
 18095              	.LCFI23:
 18096              		.cfi_def_cfa_offset 4
 18097 0002 00AF     		add	r7, sp, #0
 18098              		.cfi_offset 7, -4
 18099              	.LCFI24:
 18100              		.cfi_def_cfa_register 7
 261:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   return (FlagStatus)(*(__IO uint32_t *) CSR_TEF_BB);
 18101              		.loc 1 261 0
 18102 0004 034B     		ldr	r3, .L24
 18103 0006 1B68     		ldr	r3, [r3, #0]
 18104 0008 DBB2     		uxtb	r3, r3
 262:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 18105              		.loc 1 262 0
 18106 000a 1846     		mov	r0, r3
 18107 000c BD46     		mov	sp, r7
 18108 000e 80BC     		pop	{r7}
 18109 0010 7047     		bx	lr
 18110              	.L25:
 18111 0012 00BF     		.align	2
 18112              	.L24:
 18113 0014 A0860D42 		.word	1108182688
 18114              		.cfi_endproc
 18115              	.LFE37:
 18117              		.section	.text.BKP_ClearFlag,"ax",%progbits
 18118              		.align	2
 18119              		.global	BKP_ClearFlag
 18120              		.thumb
 18121              		.thumb_func
 18123              	BKP_ClearFlag:
 18124              	.LFB38:
 263:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 264:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 265:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Event pending flag.
 266:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 267:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 268:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 269:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_ClearFlag(void)
 270:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 18125              		.loc 1 270 0
 18126              		.cfi_startproc
 18127              		@ args = 0, pretend = 0, frame = 0
 18128              		@ frame_needed = 1, uses_anonymous_args = 0
 18129              		@ link register save eliminated.
 18130 0000 80B4     		push	{r7}
 18131              	.LCFI25:
 18132              		.cfi_def_cfa_offset 4
 18133 0002 00AF     		add	r7, sp, #0
 18134              		.cfi_offset 7, -4
 18135              	.LCFI26:
 18136              		.cfi_def_cfa_register 7
 271:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CTE bit to clear Tamper Pin Event flag */
 272:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTE;
 18137              		.loc 1 272 0
 18138 0004 054B     		ldr	r3, .L27
 18139 0006 054A     		ldr	r2, .L27
 18140 0008 928E     		ldrh	r2, [r2, #52]	@ movhi
 18141 000a 92B2     		uxth	r2, r2
 18142 000c 42F00102 		orr	r2, r2, #1
 18143 0010 92B2     		uxth	r2, r2
 18144 0012 9A86     		strh	r2, [r3, #52]	@ movhi
 273:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 18145              		.loc 1 273 0
 18146 0014 BD46     		mov	sp, r7
 18147 0016 80BC     		pop	{r7}
 18148 0018 7047     		bx	lr
 18149              	.L28:
 18150 001a 00BF     		.align	2
 18151              	.L27:
 18152 001c 006C0040 		.word	1073769472
 18153              		.cfi_endproc
 18154              	.LFE38:
 18156              		.section	.text.BKP_GetITStatus,"ax",%progbits
 18157              		.align	2
 18158              		.global	BKP_GetITStatus
 18159              		.thumb
 18160              		.thumb_func
 18162              	BKP_GetITStatus:
 18163              	.LFB39:
 274:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 275:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 276:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Interrupt has occurred or not.
 277:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 278:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Interrupt (SET or RESET).
 279:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 280:../StdPeripheralDriver/src/stm32f10x_bkp.c **** ITStatus BKP_GetITStatus(void)
 281:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 18164              		.loc 1 281 0
 18165              		.cfi_startproc
 18166              		@ args = 0, pretend = 0, frame = 0
 18167              		@ frame_needed = 1, uses_anonymous_args = 0
 18168              		@ link register save eliminated.
 18169 0000 80B4     		push	{r7}
 18170              	.LCFI27:
 18171              		.cfi_def_cfa_offset 4
 18172 0002 00AF     		add	r7, sp, #0
 18173              		.cfi_offset 7, -4
 18174              	.LCFI28:
 18175              		.cfi_def_cfa_register 7
 282:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   return (ITStatus)(*(__IO uint32_t *) CSR_TIF_BB);
 18176              		.loc 1 282 0
 18177 0004 034B     		ldr	r3, .L30
 18178 0006 1B68     		ldr	r3, [r3, #0]
 18179 0008 DBB2     		uxtb	r3, r3
 283:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 18180              		.loc 1 283 0
 18181 000a 1846     		mov	r0, r3
 18182 000c BD46     		mov	sp, r7
 18183 000e 80BC     		pop	{r7}
 18184 0010 7047     		bx	lr
 18185              	.L31:
 18186 0012 00BF     		.align	2
 18187              	.L30:
 18188 0014 A4860D42 		.word	1108182692
 18189              		.cfi_endproc
 18190              	.LFE39:
 18192              		.section	.text.BKP_ClearITPendingBit,"ax",%progbits
 18193              		.align	2
 18194              		.global	BKP_ClearITPendingBit
 18195              		.thumb
 18196              		.thumb_func
 18198              	BKP_ClearITPendingBit:
 18199              	.LFB40:
 284:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 285:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 286:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Interrupt pending bit.
 287:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 288:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 289:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 290:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_ClearITPendingBit(void)
 291:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 18200              		.loc 1 291 0
 18201              		.cfi_startproc
 18202              		@ args = 0, pretend = 0, frame = 0
 18203              		@ frame_needed = 1, uses_anonymous_args = 0
 18204              		@ link register save eliminated.
 18205 0000 80B4     		push	{r7}
 18206              	.LCFI29:
 18207              		.cfi_def_cfa_offset 4
 18208 0002 00AF     		add	r7, sp, #0
 18209              		.cfi_offset 7, -4
 18210              	.LCFI30:
 18211              		.cfi_def_cfa_register 7
 292:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CTI bit to clear Tamper Pin Interrupt pending bit */
 293:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTI;
 18212              		.loc 1 293 0
 18213 0004 054B     		ldr	r3, .L33
 18214 0006 054A     		ldr	r2, .L33
 18215 0008 928E     		ldrh	r2, [r2, #52]	@ movhi
 18216 000a 92B2     		uxth	r2, r2
 18217 000c 42F00202 		orr	r2, r2, #2
 18218 0010 92B2     		uxth	r2, r2
 18219 0012 9A86     		strh	r2, [r3, #52]	@ movhi
 294:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 18220              		.loc 1 294 0
 18221 0014 BD46     		mov	sp, r7
 18222 0016 80BC     		pop	{r7}
 18223 0018 7047     		bx	lr
 18224              	.L34:
 18225 001a 00BF     		.align	2
 18226              	.L33:
 18227 001c 006C0040 		.word	1073769472
 18228              		.cfi_endproc
 18229              	.LFE40:
 18231              		.text
 18232              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_bkp.c
     /tmp/ccjmM01f.s:17706  .text.BKP_DeInit:00000000 $t
     /tmp/ccjmM01f.s:17711  .text.BKP_DeInit:00000000 BKP_DeInit
     /tmp/ccjmM01f.s:17737  .text.BKP_TamperPinLevelConfig:00000000 $t
     /tmp/ccjmM01f.s:17742  .text.BKP_TamperPinLevelConfig:00000000 BKP_TamperPinLevelConfig
     /tmp/ccjmM01f.s:17773  .text.BKP_TamperPinLevelConfig:0000001c $d
     /tmp/ccjmM01f.s:17778  .text.BKP_TamperPinCmd:00000000 $t
     /tmp/ccjmM01f.s:17783  .text.BKP_TamperPinCmd:00000000 BKP_TamperPinCmd
     /tmp/ccjmM01f.s:17814  .text.BKP_TamperPinCmd:0000001c $d
     /tmp/ccjmM01f.s:17819  .text.BKP_ITConfig:00000000 $t
     /tmp/ccjmM01f.s:17824  .text.BKP_ITConfig:00000000 BKP_ITConfig
     /tmp/ccjmM01f.s:17855  .text.BKP_ITConfig:0000001c $d
     /tmp/ccjmM01f.s:17860  .text.BKP_RTCOutputConfig:00000000 $t
     /tmp/ccjmM01f.s:17865  .text.BKP_RTCOutputConfig:00000000 BKP_RTCOutputConfig
     /tmp/ccjmM01f.s:17912  .text.BKP_RTCOutputConfig:00000038 $d
     /tmp/ccjmM01f.s:17917  .text.BKP_SetRTCCalibrationValue:00000000 $t
     /tmp/ccjmM01f.s:17922  .text.BKP_SetRTCCalibrationValue:00000000 BKP_SetRTCCalibrationValue
     /tmp/ccjmM01f.s:17970  .text.BKP_SetRTCCalibrationValue:0000003c $d
     /tmp/ccjmM01f.s:17975  .text.BKP_WriteBackupRegister:00000000 $t
     /tmp/ccjmM01f.s:17980  .text.BKP_WriteBackupRegister:00000000 BKP_WriteBackupRegister
     /tmp/ccjmM01f.s:18024  .text.BKP_WriteBackupRegister:00000030 $d
     /tmp/ccjmM01f.s:18029  .text.BKP_ReadBackupRegister:00000000 $t
     /tmp/ccjmM01f.s:18034  .text.BKP_ReadBackupRegister:00000000 BKP_ReadBackupRegister
     /tmp/ccjmM01f.s:18077  .text.BKP_ReadBackupRegister:00000030 $d
     /tmp/ccjmM01f.s:18082  .text.BKP_GetFlagStatus:00000000 $t
     /tmp/ccjmM01f.s:18087  .text.BKP_GetFlagStatus:00000000 BKP_GetFlagStatus
     /tmp/ccjmM01f.s:18113  .text.BKP_GetFlagStatus:00000014 $d
     /tmp/ccjmM01f.s:18118  .text.BKP_ClearFlag:00000000 $t
     /tmp/ccjmM01f.s:18123  .text.BKP_ClearFlag:00000000 BKP_ClearFlag
     /tmp/ccjmM01f.s:18152  .text.BKP_ClearFlag:0000001c $d
     /tmp/ccjmM01f.s:18157  .text.BKP_GetITStatus:00000000 $t
     /tmp/ccjmM01f.s:18162  .text.BKP_GetITStatus:00000000 BKP_GetITStatus
     /tmp/ccjmM01f.s:18188  .text.BKP_GetITStatus:00000014 $d
     /tmp/ccjmM01f.s:18193  .text.BKP_ClearITPendingBit:00000000 $t
     /tmp/ccjmM01f.s:18198  .text.BKP_ClearITPendingBit:00000000 BKP_ClearITPendingBit
     /tmp/ccjmM01f.s:18227  .text.BKP_ClearITPendingBit:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_BackupResetCmd
