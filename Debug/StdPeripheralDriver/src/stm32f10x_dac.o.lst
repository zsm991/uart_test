   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_dac.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_dac.c"
 17708              		.align	2
 17709              		.global	DAC_DeInit
 17710              		.thumb
 17711              		.thumb_func
 17713              	DAC_DeInit:
 17714              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_dac.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @file    stm32f10x_dac.c
   4:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief   This file provides all the DAC firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_dac.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_dac.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_dac.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_dac.c **** #include "stm32f10x_dac.h"
  24:../StdPeripheralDriver/src/stm32f10x_dac.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC 
  31:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief DAC driver modules
  32:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */ 
  34:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  38:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @}
  41:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  42:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Defines
  44:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  45:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  46:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_dac.c **** /* CR register Mask */
  48:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
  49:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  50:../StdPeripheralDriver/src/stm32f10x_dac.c **** /* DAC Dual Channels SWTRIG masks */
  51:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
  52:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
  53:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  54:../StdPeripheralDriver/src/stm32f10x_dac.c **** /* DHR registers offsets */
  55:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
  56:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
  57:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
  58:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  59:../StdPeripheralDriver/src/stm32f10x_dac.c **** /* DOR register offset */
  60:../StdPeripheralDriver/src/stm32f10x_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
  61:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
  62:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @}
  63:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  64:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  65:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Macros
  66:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  67:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  68:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  69:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
  70:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @}
  71:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  72:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Variables
  74:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  75:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  76:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
  78:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @}
  79:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  80:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_FunctionPrototypes
  82:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  83:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
  86:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @}
  87:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Functions
  90:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @{
  91:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
  94:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
  95:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  None
  96:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
  97:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
  98:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_DeInit(void)
  99:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 17715              		.loc 1 99 0
 17716              		.cfi_startproc
 17717              		@ args = 0, pretend = 0, frame = 0
 17718              		@ frame_needed = 1, uses_anonymous_args = 0
 17719 0000 80B5     		push	{r7, lr}
 17720              	.LCFI0:
 17721              		.cfi_def_cfa_offset 8
 17722 0002 00AF     		add	r7, sp, #0
 17723              		.cfi_offset 14, -4
 17724              		.cfi_offset 7, -8
 17725              	.LCFI1:
 17726              		.cfi_def_cfa_register 7
 100:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Enable DAC reset state */
 101:../StdPeripheralDriver/src/stm32f10x_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
 17727              		.loc 1 101 0
 17728 0004 4FF00050 		mov	r0, #536870912
 17729 0008 4FF00101 		mov	r1, #1
 17730 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 102:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Release DAC from reset state */
 103:../StdPeripheralDriver/src/stm32f10x_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
 17731              		.loc 1 103 0
 17732 0010 4FF00050 		mov	r0, #536870912
 17733 0014 4FF00001 		mov	r1, #0
 17734 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 104:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 17735              		.loc 1 104 0
 17736 001c 80BD     		pop	{r7, pc}
 17737              		.cfi_endproc
 17738              	.LFE29:
 17740 001e 00BF     		.section	.text.DAC_Init,"ax",%progbits
 17741              		.align	2
 17742              		.global	DAC_Init
 17743              		.thumb
 17744              		.thumb_func
 17746              	DAC_Init:
 17747              	.LFB30:
 105:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 106:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 107:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified 
 108:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *         parameters in the DAC_InitStruct.
 109:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 110:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 111:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 112:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 113:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that
 114:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *        contains the configuration information for the specified DAC channel.
 115:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 116:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 117:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 118:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 17748              		.loc 1 118 0
 17749              		.cfi_startproc
 17750              		@ args = 0, pretend = 0, frame = 16
 17751              		@ frame_needed = 1, uses_anonymous_args = 0
 17752              		@ link register save eliminated.
 17753 0000 80B4     		push	{r7}
 17754              	.LCFI2:
 17755              		.cfi_def_cfa_offset 4
 17756 0002 85B0     		sub	sp, sp, #20
 17757              	.LCFI3:
 17758              		.cfi_def_cfa_offset 24
 17759 0004 00AF     		add	r7, sp, #0
 17760              		.cfi_offset 7, -4
 17761              	.LCFI4:
 17762              		.cfi_def_cfa_register 7
 17763 0006 7860     		str	r0, [r7, #4]
 17764 0008 3960     		str	r1, [r7, #0]
 119:../StdPeripheralDriver/src/stm32f10x_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 17765              		.loc 1 119 0
 17766 000a 4FF00003 		mov	r3, #0
 17767 000e FB60     		str	r3, [r7, #12]
 17768 0010 4FF00003 		mov	r3, #0
 17769 0014 BB60     		str	r3, [r7, #8]
 120:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the DAC parameters */
 121:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 122:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 123:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 124:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 125:../StdPeripheralDriver/src/stm32f10x_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 126:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Get the DAC CR value */
 127:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmpreg1 = DAC->CR;
 17770              		.loc 1 127 0
 17771 0016 154B     		ldr	r3, .L3
 17772 0018 1B68     		ldr	r3, [r3, #0]
 17773 001a FB60     		str	r3, [r7, #12]
 128:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 129:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
 17774              		.loc 1 129 0
 17775 001c 7B68     		ldr	r3, [r7, #4]
 17776 001e 40F6FE72 		movw	r2, #4094
 17777 0022 02FA03F3 		lsl	r3, r2, r3
 17778 0026 6FEA0303 		mvn	r3, r3
 17779 002a FA68     		ldr	r2, [r7, #12]
 17780 002c 02EA0303 		and	r3, r2, r3
 17781 0030 FB60     		str	r3, [r7, #12]
 130:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, wave generation,
 131:../StdPeripheralDriver/src/stm32f10x_dac.c ****      mask/amplitude for wave generation */
 132:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 133:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 134:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 135:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 136:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 17782              		.loc 1 136 0
 17783 0032 3B68     		ldr	r3, [r7, #0]
 17784 0034 1A68     		ldr	r2, [r3, #0]
 17785 0036 3B68     		ldr	r3, [r7, #0]
 17786 0038 5B68     		ldr	r3, [r3, #4]
 17787 003a 1A43     		orrs	r2, r2, r3
 137:../StdPeripheralDriver/src/stm32f10x_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | DAC_InitStruct->DAC_OutputBuffer);
 17788              		.loc 1 137 0
 17789 003c 3B68     		ldr	r3, [r7, #0]
 17790 003e 9B68     		ldr	r3, [r3, #8]
 136:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 17791              		.loc 1 136 0
 17792 0040 1A43     		orrs	r2, r2, r3
 17793              		.loc 1 137 0
 17794 0042 3B68     		ldr	r3, [r7, #0]
 17795 0044 DB68     		ldr	r3, [r3, #12]
 136:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 17796              		.loc 1 136 0
 17797 0046 42EA0303 		orr	r3, r2, r3
 17798 004a BB60     		str	r3, [r7, #8]
 138:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 139:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 17799              		.loc 1 139 0
 17800 004c 7B68     		ldr	r3, [r7, #4]
 17801 004e BA68     		ldr	r2, [r7, #8]
 17802 0050 02FA03F3 		lsl	r3, r2, r3
 17803 0054 FA68     		ldr	r2, [r7, #12]
 17804 0056 42EA0303 		orr	r3, r2, r3
 17805 005a FB60     		str	r3, [r7, #12]
 140:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Write to DAC CR */
 141:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC->CR = tmpreg1;
 17806              		.loc 1 141 0
 17807 005c 034B     		ldr	r3, .L3
 17808 005e FA68     		ldr	r2, [r7, #12]
 17809 0060 1A60     		str	r2, [r3, #0]
 142:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 17810              		.loc 1 142 0
 17811 0062 07F11407 		add	r7, r7, #20
 17812 0066 BD46     		mov	sp, r7
 17813 0068 80BC     		pop	{r7}
 17814 006a 7047     		bx	lr
 17815              	.L4:
 17816              		.align	2
 17817              	.L3:
 17818 006c 00740040 		.word	1073771520
 17819              		.cfi_endproc
 17820              	.LFE30:
 17822              		.section	.text.DAC_StructInit,"ax",%progbits
 17823              		.align	2
 17824              		.global	DAC_StructInit
 17825              		.thumb
 17826              		.thumb_func
 17828              	DAC_StructInit:
 17829              	.LFB31:
 143:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 144:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 145:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 146:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_InitStruct : pointer to a DAC_InitTypeDef structure which will
 147:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *         be initialized.
 148:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 149:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 150:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 151:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 17830              		.loc 1 151 0
 17831              		.cfi_startproc
 17832              		@ args = 0, pretend = 0, frame = 8
 17833              		@ frame_needed = 1, uses_anonymous_args = 0
 17834              		@ link register save eliminated.
 17835 0000 80B4     		push	{r7}
 17836              	.LCFI5:
 17837              		.cfi_def_cfa_offset 4
 17838 0002 83B0     		sub	sp, sp, #12
 17839              	.LCFI6:
 17840              		.cfi_def_cfa_offset 16
 17841 0004 00AF     		add	r7, sp, #0
 17842              		.cfi_offset 7, -4
 17843              	.LCFI7:
 17844              		.cfi_def_cfa_register 7
 17845 0006 7860     		str	r0, [r7, #4]
 152:../StdPeripheralDriver/src/stm32f10x_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 153:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Initialize the DAC_Trigger member */
 154:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 17846              		.loc 1 154 0
 17847 0008 7B68     		ldr	r3, [r7, #4]
 17848 000a 4FF00002 		mov	r2, #0
 17849 000e 1A60     		str	r2, [r3, #0]
 155:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 156:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 17850              		.loc 1 156 0
 17851 0010 7B68     		ldr	r3, [r7, #4]
 17852 0012 4FF00002 		mov	r2, #0
 17853 0016 5A60     		str	r2, [r3, #4]
 157:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 158:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 17854              		.loc 1 158 0
 17855 0018 7B68     		ldr	r3, [r7, #4]
 17856 001a 4FF00002 		mov	r2, #0
 17857 001e 9A60     		str	r2, [r3, #8]
 159:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 160:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 17858              		.loc 1 160 0
 17859 0020 7B68     		ldr	r3, [r7, #4]
 17860 0022 4FF00002 		mov	r2, #0
 17861 0026 DA60     		str	r2, [r3, #12]
 161:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 17862              		.loc 1 161 0
 17863 0028 07F10C07 		add	r7, r7, #12
 17864 002c BD46     		mov	sp, r7
 17865 002e 80BC     		pop	{r7}
 17866 0030 7047     		bx	lr
 17867              		.cfi_endproc
 17868              	.LFE31:
 17870 0032 00BF     		.section	.text.DAC_Cmd,"ax",%progbits
 17871              		.align	2
 17872              		.global	DAC_Cmd
 17873              		.thumb
 17874              		.thumb_func
 17876              	DAC_Cmd:
 17877              	.LFB32:
 162:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 163:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 164:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 165:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 166:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 167:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 168:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 169:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  NewState: new state of the DAC channel. 
 170:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 171:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 172:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 173:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 174:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 17878              		.loc 1 174 0
 17879              		.cfi_startproc
 17880              		@ args = 0, pretend = 0, frame = 8
 17881              		@ frame_needed = 1, uses_anonymous_args = 0
 17882              		@ link register save eliminated.
 17883 0000 80B4     		push	{r7}
 17884              	.LCFI8:
 17885              		.cfi_def_cfa_offset 4
 17886 0002 83B0     		sub	sp, sp, #12
 17887              	.LCFI9:
 17888              		.cfi_def_cfa_offset 16
 17889 0004 00AF     		add	r7, sp, #0
 17890              		.cfi_offset 7, -4
 17891              	.LCFI10:
 17892              		.cfi_def_cfa_register 7
 17893 0006 7860     		str	r0, [r7, #4]
 17894 0008 0B46     		mov	r3, r1
 17895 000a FB70     		strb	r3, [r7, #3]
 175:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 176:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 177:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 178:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 17896              		.loc 1 178 0
 17897 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 17898 000e 002B     		cmp	r3, #0
 17899 0010 0BD0     		beq	.L7
 179:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 180:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Enable the selected DAC channel */
 181:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 17900              		.loc 1 181 0
 17901 0012 0F4B     		ldr	r3, .L9
 17902 0014 0E4A     		ldr	r2, .L9
 17903 0016 1168     		ldr	r1, [r2, #0]
 17904 0018 7A68     		ldr	r2, [r7, #4]
 17905 001a 4FF00100 		mov	r0, #1
 17906 001e 00FA02F2 		lsl	r2, r0, r2
 17907 0022 41EA0202 		orr	r2, r1, r2
 17908 0026 1A60     		str	r2, [r3, #0]
 17909 0028 0CE0     		b	.L6
 17910              	.L7:
 182:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 183:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 184:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 185:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Disable the selected DAC channel */
 186:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR &= ~(DAC_CR_EN1 << DAC_Channel);
 17911              		.loc 1 186 0
 17912 002a 094B     		ldr	r3, .L9
 17913 002c 084A     		ldr	r2, .L9
 17914 002e 1168     		ldr	r1, [r2, #0]
 17915 0030 7A68     		ldr	r2, [r7, #4]
 17916 0032 4FF00100 		mov	r0, #1
 17917 0036 00FA02F2 		lsl	r2, r0, r2
 17918 003a 6FEA0202 		mvn	r2, r2
 17919 003e 01EA0202 		and	r2, r1, r2
 17920 0042 1A60     		str	r2, [r3, #0]
 17921              	.L6:
 187:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 188:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 17922              		.loc 1 188 0
 17923 0044 07F10C07 		add	r7, r7, #12
 17924 0048 BD46     		mov	sp, r7
 17925 004a 80BC     		pop	{r7}
 17926 004c 7047     		bx	lr
 17927              	.L10:
 17928 004e 00BF     		.align	2
 17929              	.L9:
 17930 0050 00740040 		.word	1073771520
 17931              		.cfi_endproc
 17932              	.LFE32:
 17934              		.section	.text.DAC_ITConfig,"ax",%progbits
 17935              		.align	2
 17936              		.global	DAC_ITConfig
 17937              		.thumb
 17938              		.thumb_func
 17940              	DAC_ITConfig:
 17941              	.LFB33:
 189:../StdPeripheralDriver/src/stm32f10x_dac.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 190:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 191:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 192:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 193:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 194:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 195:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 196:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 197:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be the following values:
 198:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                      
 199:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 200:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 201:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 202:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */ 
 203:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 204:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 17942              		.loc 1 204 0
 17943              		.cfi_startproc
 17944              		@ args = 0, pretend = 0, frame = 16
 17945              		@ frame_needed = 1, uses_anonymous_args = 0
 17946              		@ link register save eliminated.
 17947 0000 80B4     		push	{r7}
 17948              	.LCFI11:
 17949              		.cfi_def_cfa_offset 4
 17950 0002 85B0     		sub	sp, sp, #20
 17951              	.LCFI12:
 17952              		.cfi_def_cfa_offset 24
 17953 0004 00AF     		add	r7, sp, #0
 17954              		.cfi_offset 7, -4
 17955              	.LCFI13:
 17956              		.cfi_def_cfa_register 7
 17957 0006 F860     		str	r0, [r7, #12]
 17958 0008 B960     		str	r1, [r7, #8]
 17959 000a 1346     		mov	r3, r2
 17960 000c FB71     		strb	r3, [r7, #7]
 205:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 206:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 207:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 208:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 209:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 210:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 17961              		.loc 1 210 0
 17962 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 17963 0010 002B     		cmp	r3, #0
 17964 0012 0AD0     		beq	.L12
 211:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 212:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Enable the selected DAC interrupts */
 213:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 17965              		.loc 1 213 0
 17966 0014 0D4B     		ldr	r3, .L14
 17967 0016 0D4A     		ldr	r2, .L14
 17968 0018 1168     		ldr	r1, [r2, #0]
 17969 001a FA68     		ldr	r2, [r7, #12]
 17970 001c B868     		ldr	r0, [r7, #8]
 17971 001e 00FA02F2 		lsl	r2, r0, r2
 17972 0022 41EA0202 		orr	r2, r1, r2
 17973 0026 1A60     		str	r2, [r3, #0]
 17974 0028 0BE0     		b	.L11
 17975              	.L12:
 214:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 215:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 216:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 217:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Disable the selected DAC interrupts */
 218:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 17976              		.loc 1 218 0
 17977 002a 084B     		ldr	r3, .L14
 17978 002c 074A     		ldr	r2, .L14
 17979 002e 1168     		ldr	r1, [r2, #0]
 17980 0030 FA68     		ldr	r2, [r7, #12]
 17981 0032 B868     		ldr	r0, [r7, #8]
 17982 0034 00FA02F2 		lsl	r2, r0, r2
 17983 0038 6FEA0202 		mvn	r2, r2
 17984 003c 01EA0202 		and	r2, r1, r2
 17985 0040 1A60     		str	r2, [r3, #0]
 17986              	.L11:
 219:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 220:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 17987              		.loc 1 220 0
 17988 0042 07F11407 		add	r7, r7, #20
 17989 0046 BD46     		mov	sp, r7
 17990 0048 80BC     		pop	{r7}
 17991 004a 7047     		bx	lr
 17992              	.L15:
 17993              		.align	2
 17994              	.L14:
 17995 004c 00740040 		.word	1073771520
 17996              		.cfi_endproc
 17997              	.LFE33:
 17999              		.section	.text.DAC_DMACmd,"ax",%progbits
 18000              		.align	2
 18001              		.global	DAC_DMACmd
 18002              		.thumb
 18003              		.thumb_func
 18005              	DAC_DMACmd:
 18006              	.LFB34:
 221:../StdPeripheralDriver/src/stm32f10x_dac.c **** #endif
 222:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 223:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 224:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 225:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 226:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 227:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 228:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 229:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 230:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 231:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 232:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 233:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 234:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18007              		.loc 1 234 0
 18008              		.cfi_startproc
 18009              		@ args = 0, pretend = 0, frame = 8
 18010              		@ frame_needed = 1, uses_anonymous_args = 0
 18011              		@ link register save eliminated.
 18012 0000 80B4     		push	{r7}
 18013              	.LCFI14:
 18014              		.cfi_def_cfa_offset 4
 18015 0002 83B0     		sub	sp, sp, #12
 18016              	.LCFI15:
 18017              		.cfi_def_cfa_offset 16
 18018 0004 00AF     		add	r7, sp, #0
 18019              		.cfi_offset 7, -4
 18020              	.LCFI16:
 18021              		.cfi_def_cfa_register 7
 18022 0006 7860     		str	r0, [r7, #4]
 18023 0008 0B46     		mov	r3, r1
 18024 000a FB70     		strb	r3, [r7, #3]
 235:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 236:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 237:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 238:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 18025              		.loc 1 238 0
 18026 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18027 000e 002B     		cmp	r3, #0
 18028 0010 0BD0     		beq	.L17
 239:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 240:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Enable the selected DAC channel DMA request */
 241:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 18029              		.loc 1 241 0
 18030 0012 0F4B     		ldr	r3, .L19
 18031 0014 0E4A     		ldr	r2, .L19
 18032 0016 1168     		ldr	r1, [r2, #0]
 18033 0018 7A68     		ldr	r2, [r7, #4]
 18034 001a 4FF48050 		mov	r0, #4096
 18035 001e 00FA02F2 		lsl	r2, r0, r2
 18036 0022 41EA0202 		orr	r2, r1, r2
 18037 0026 1A60     		str	r2, [r3, #0]
 18038 0028 0CE0     		b	.L16
 18039              	.L17:
 242:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 243:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 244:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 245:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Disable the selected DAC channel DMA request */
 246:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR &= ~(DAC_CR_DMAEN1 << DAC_Channel);
 18040              		.loc 1 246 0
 18041 002a 094B     		ldr	r3, .L19
 18042 002c 084A     		ldr	r2, .L19
 18043 002e 1168     		ldr	r1, [r2, #0]
 18044 0030 7A68     		ldr	r2, [r7, #4]
 18045 0032 4FF48050 		mov	r0, #4096
 18046 0036 00FA02F2 		lsl	r2, r0, r2
 18047 003a 6FEA0202 		mvn	r2, r2
 18048 003e 01EA0202 		and	r2, r1, r2
 18049 0042 1A60     		str	r2, [r3, #0]
 18050              	.L16:
 247:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 248:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18051              		.loc 1 248 0
 18052 0044 07F10C07 		add	r7, r7, #12
 18053 0048 BD46     		mov	sp, r7
 18054 004a 80BC     		pop	{r7}
 18055 004c 7047     		bx	lr
 18056              	.L20:
 18057 004e 00BF     		.align	2
 18058              	.L19:
 18059 0050 00740040 		.word	1073771520
 18060              		.cfi_endproc
 18061              	.LFE34:
 18063              		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 18064              		.align	2
 18065              		.global	DAC_SoftwareTriggerCmd
 18066              		.thumb
 18067              		.thumb_func
 18069              	DAC_SoftwareTriggerCmd:
 18070              	.LFB35:
 249:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 250:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 251:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 252:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 253:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 254:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 255:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 256:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 257:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 258:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 259:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 260:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 261:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18071              		.loc 1 261 0
 18072              		.cfi_startproc
 18073              		@ args = 0, pretend = 0, frame = 8
 18074              		@ frame_needed = 1, uses_anonymous_args = 0
 18075              		@ link register save eliminated.
 18076 0000 80B4     		push	{r7}
 18077              	.LCFI17:
 18078              		.cfi_def_cfa_offset 4
 18079 0002 83B0     		sub	sp, sp, #12
 18080              	.LCFI18:
 18081              		.cfi_def_cfa_offset 16
 18082 0004 00AF     		add	r7, sp, #0
 18083              		.cfi_offset 7, -4
 18084              	.LCFI19:
 18085              		.cfi_def_cfa_register 7
 18086 0006 7860     		str	r0, [r7, #4]
 18087 0008 0B46     		mov	r3, r1
 18088 000a FB70     		strb	r3, [r7, #3]
 262:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 263:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 264:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 265:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 18089              		.loc 1 265 0
 18090 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18091 000e 002B     		cmp	r3, #0
 18092 0010 0DD0     		beq	.L22
 266:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 267:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Enable software trigger for the selected DAC channel */
 268:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 18093              		.loc 1 268 0
 18094 0012 114B     		ldr	r3, .L24
 18095 0014 104A     		ldr	r2, .L24
 18096 0016 5168     		ldr	r1, [r2, #4]
 18097 0018 7A68     		ldr	r2, [r7, #4]
 18098 001a 4FEA1212 		lsr	r2, r2, #4
 18099 001e 4FF00100 		mov	r0, #1
 18100 0022 00FA02F2 		lsl	r2, r0, r2
 18101 0026 41EA0202 		orr	r2, r1, r2
 18102 002a 5A60     		str	r2, [r3, #4]
 18103 002c 0EE0     		b	.L21
 18104              	.L22:
 269:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 270:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 271:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 272:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Disable software trigger for the selected DAC channel */
 273:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 18105              		.loc 1 273 0
 18106 002e 0A4B     		ldr	r3, .L24
 18107 0030 094A     		ldr	r2, .L24
 18108 0032 5168     		ldr	r1, [r2, #4]
 18109 0034 7A68     		ldr	r2, [r7, #4]
 18110 0036 4FEA1212 		lsr	r2, r2, #4
 18111 003a 4FF00100 		mov	r0, #1
 18112 003e 00FA02F2 		lsl	r2, r0, r2
 18113 0042 6FEA0202 		mvn	r2, r2
 18114 0046 01EA0202 		and	r2, r1, r2
 18115 004a 5A60     		str	r2, [r3, #4]
 18116              	.L21:
 274:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 275:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18117              		.loc 1 275 0
 18118 004c 07F10C07 		add	r7, r7, #12
 18119 0050 BD46     		mov	sp, r7
 18120 0052 80BC     		pop	{r7}
 18121 0054 7047     		bx	lr
 18122              	.L25:
 18123 0056 00BF     		.align	2
 18124              	.L24:
 18125 0058 00740040 		.word	1073771520
 18126              		.cfi_endproc
 18127              	.LFE35:
 18129              		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 18130              		.align	2
 18131              		.global	DAC_DualSoftwareTriggerCmd
 18132              		.thumb
 18133              		.thumb_func
 18135              	DAC_DualSoftwareTriggerCmd:
 18136              	.LFB36:
 276:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 277:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 278:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software
 279:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   triggers.
 280:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 281:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 282:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 283:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 284:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 285:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18137              		.loc 1 285 0
 18138              		.cfi_startproc
 18139              		@ args = 0, pretend = 0, frame = 8
 18140              		@ frame_needed = 1, uses_anonymous_args = 0
 18141              		@ link register save eliminated.
 18142 0000 80B4     		push	{r7}
 18143              	.LCFI20:
 18144              		.cfi_def_cfa_offset 4
 18145 0002 83B0     		sub	sp, sp, #12
 18146              	.LCFI21:
 18147              		.cfi_def_cfa_offset 16
 18148 0004 00AF     		add	r7, sp, #0
 18149              		.cfi_offset 7, -4
 18150              	.LCFI22:
 18151              		.cfi_def_cfa_register 7
 18152 0006 0346     		mov	r3, r0
 18153 0008 FB71     		strb	r3, [r7, #7]
 286:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 287:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 288:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 18154              		.loc 1 288 0
 18155 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18156 000c 002B     		cmp	r3, #0
 18157 000e 06D0     		beq	.L27
 289:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 290:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Enable software trigger for both DAC channels */
 291:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET ;
 18158              		.loc 1 291 0
 18159 0010 084B     		ldr	r3, .L29
 18160 0012 084A     		ldr	r2, .L29
 18161 0014 5268     		ldr	r2, [r2, #4]
 18162 0016 42F00302 		orr	r2, r2, #3
 18163 001a 5A60     		str	r2, [r3, #4]
 18164 001c 05E0     		b	.L26
 18165              	.L27:
 292:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 293:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 294:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 295:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Disable software trigger for both DAC channels */
 296:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 18166              		.loc 1 296 0
 18167 001e 054B     		ldr	r3, .L29
 18168 0020 044A     		ldr	r2, .L29
 18169 0022 5268     		ldr	r2, [r2, #4]
 18170 0024 22F00302 		bic	r2, r2, #3
 18171 0028 5A60     		str	r2, [r3, #4]
 18172              	.L26:
 297:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 298:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18173              		.loc 1 298 0
 18174 002a 07F10C07 		add	r7, r7, #12
 18175 002e BD46     		mov	sp, r7
 18176 0030 80BC     		pop	{r7}
 18177 0032 7047     		bx	lr
 18178              	.L30:
 18179              		.align	2
 18180              	.L29:
 18181 0034 00740040 		.word	1073771520
 18182              		.cfi_endproc
 18183              	.LFE36:
 18185              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 18186              		.align	2
 18187              		.global	DAC_WaveGenerationCmd
 18188              		.thumb
 18189              		.thumb_func
 18191              	DAC_WaveGenerationCmd:
 18192              	.LFB37:
 299:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 300:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 301:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 302:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 303:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 304:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 305:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 306:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Wave: Specifies the wave type to enable or disable.
 307:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 308:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Wave_Noise: noise wave generation
 309:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Wave_Triangle: triangle wave generation
 310:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 311:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 312:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 313:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 314:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 315:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18193              		.loc 1 315 0
 18194              		.cfi_startproc
 18195              		@ args = 0, pretend = 0, frame = 16
 18196              		@ frame_needed = 1, uses_anonymous_args = 0
 18197              		@ link register save eliminated.
 18198 0000 80B4     		push	{r7}
 18199              	.LCFI23:
 18200              		.cfi_def_cfa_offset 4
 18201 0002 85B0     		sub	sp, sp, #20
 18202              	.LCFI24:
 18203              		.cfi_def_cfa_offset 24
 18204 0004 00AF     		add	r7, sp, #0
 18205              		.cfi_offset 7, -4
 18206              	.LCFI25:
 18207              		.cfi_def_cfa_register 7
 18208 0006 F860     		str	r0, [r7, #12]
 18209 0008 B960     		str	r1, [r7, #8]
 18210 000a 1346     		mov	r3, r2
 18211 000c FB71     		strb	r3, [r7, #7]
 316:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 317:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 318:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 319:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 320:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 18212              		.loc 1 320 0
 18213 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18214 0010 002B     		cmp	r3, #0
 18215 0012 0AD0     		beq	.L32
 321:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 322:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 323:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 18216              		.loc 1 323 0
 18217 0014 0D4B     		ldr	r3, .L34
 18218 0016 0D4A     		ldr	r2, .L34
 18219 0018 1168     		ldr	r1, [r2, #0]
 18220 001a FA68     		ldr	r2, [r7, #12]
 18221 001c B868     		ldr	r0, [r7, #8]
 18222 001e 00FA02F2 		lsl	r2, r0, r2
 18223 0022 41EA0202 		orr	r2, r1, r2
 18224 0026 1A60     		str	r2, [r3, #0]
 18225 0028 0BE0     		b	.L31
 18226              	.L32:
 324:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 325:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 326:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 327:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 328:../StdPeripheralDriver/src/stm32f10x_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 18227              		.loc 1 328 0
 18228 002a 084B     		ldr	r3, .L34
 18229 002c 074A     		ldr	r2, .L34
 18230 002e 1168     		ldr	r1, [r2, #0]
 18231 0030 FA68     		ldr	r2, [r7, #12]
 18232 0032 B868     		ldr	r0, [r7, #8]
 18233 0034 00FA02F2 		lsl	r2, r0, r2
 18234 0038 6FEA0202 		mvn	r2, r2
 18235 003c 01EA0202 		and	r2, r1, r2
 18236 0040 1A60     		str	r2, [r3, #0]
 18237              	.L31:
 329:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 330:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18238              		.loc 1 330 0
 18239 0042 07F11407 		add	r7, r7, #20
 18240 0046 BD46     		mov	sp, r7
 18241 0048 80BC     		pop	{r7}
 18242 004a 7047     		bx	lr
 18243              	.L35:
 18244              		.align	2
 18245              	.L34:
 18246 004c 00740040 		.word	1073771520
 18247              		.cfi_endproc
 18248              	.LFE37:
 18250              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 18251              		.align	2
 18252              		.global	DAC_SetChannel1Data
 18253              		.thumb
 18254              		.thumb_func
 18256              	DAC_SetChannel1Data:
 18257              	.LFB38:
 331:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 332:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 333:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 334:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 335:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 336:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_8b_R: 8bit right data alignment selected
 337:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_L: 12bit left data alignment selected
 338:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_R: 12bit right data alignment selected
 339:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  Data : Data to be loaded in the selected data holding register.
 340:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 341:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 342:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 343:../StdPeripheralDriver/src/stm32f10x_dac.c **** {  
 18258              		.loc 1 343 0
 18259              		.cfi_startproc
 18260              		@ args = 0, pretend = 0, frame = 16
 18261              		@ frame_needed = 1, uses_anonymous_args = 0
 18262              		@ link register save eliminated.
 18263 0000 80B4     		push	{r7}
 18264              	.LCFI26:
 18265              		.cfi_def_cfa_offset 4
 18266 0002 85B0     		sub	sp, sp, #20
 18267              	.LCFI27:
 18268              		.cfi_def_cfa_offset 24
 18269 0004 00AF     		add	r7, sp, #0
 18270              		.cfi_offset 7, -4
 18271              	.LCFI28:
 18272              		.cfi_def_cfa_register 7
 18273 0006 7860     		str	r0, [r7, #4]
 18274 0008 0B46     		mov	r3, r1
 18275 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 344:../StdPeripheralDriver/src/stm32f10x_dac.c ****   __IO uint32_t tmp = 0;
 18276              		.loc 1 344 0
 18277 000c 4FF00003 		mov	r3, #0
 18278 0010 FB60     		str	r3, [r7, #12]
 345:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 346:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 347:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 348:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data));
 349:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 350:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 18279              		.loc 1 350 0
 18280 0012 084B     		ldr	r3, .L37
 18281 0014 FB60     		str	r3, [r7, #12]
 351:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 18282              		.loc 1 351 0
 18283 0016 FA68     		ldr	r2, [r7, #12]
 18284 0018 7B68     		ldr	r3, [r7, #4]
 18285 001a D318     		adds	r3, r2, r3
 18286 001c 03F10803 		add	r3, r3, #8
 18287 0020 FB60     		str	r3, [r7, #12]
 352:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 353:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set the DAC channel1 selected data holding register */
 354:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *(__IO uint32_t *) tmp = Data;
 18288              		.loc 1 354 0
 18289 0022 FB68     		ldr	r3, [r7, #12]
 18290 0024 7A88     		ldrh	r2, [r7, #2]
 18291 0026 1A60     		str	r2, [r3, #0]
 355:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18292              		.loc 1 355 0
 18293 0028 07F11407 		add	r7, r7, #20
 18294 002c BD46     		mov	sp, r7
 18295 002e 80BC     		pop	{r7}
 18296 0030 7047     		bx	lr
 18297              	.L38:
 18298 0032 00BF     		.align	2
 18299              	.L37:
 18300 0034 00740040 		.word	1073771520
 18301              		.cfi_endproc
 18302              	.LFE38:
 18304              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 18305              		.align	2
 18306              		.global	DAC_SetChannel2Data
 18307              		.thumb
 18308              		.thumb_func
 18310              	DAC_SetChannel2Data:
 18311              	.LFB39:
 356:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 357:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 358:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 359:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 360:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 361:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_8b_R: 8bit right data alignment selected
 362:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_L: 12bit left data alignment selected
 363:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_R: 12bit right data alignment selected
 364:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  Data : Data to be loaded in the selected data holding register.
 365:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 366:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 367:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 368:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18312              		.loc 1 368 0
 18313              		.cfi_startproc
 18314              		@ args = 0, pretend = 0, frame = 16
 18315              		@ frame_needed = 1, uses_anonymous_args = 0
 18316              		@ link register save eliminated.
 18317 0000 80B4     		push	{r7}
 18318              	.LCFI29:
 18319              		.cfi_def_cfa_offset 4
 18320 0002 85B0     		sub	sp, sp, #20
 18321              	.LCFI30:
 18322              		.cfi_def_cfa_offset 24
 18323 0004 00AF     		add	r7, sp, #0
 18324              		.cfi_offset 7, -4
 18325              	.LCFI31:
 18326              		.cfi_def_cfa_register 7
 18327 0006 7860     		str	r0, [r7, #4]
 18328 0008 0B46     		mov	r3, r1
 18329 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 369:../StdPeripheralDriver/src/stm32f10x_dac.c ****   __IO uint32_t tmp = 0;
 18330              		.loc 1 369 0
 18331 000c 4FF00003 		mov	r3, #0
 18332 0010 FB60     		str	r3, [r7, #12]
 370:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 371:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 372:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 373:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data));
 374:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 375:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp = (uint32_t)DAC_BASE;
 18333              		.loc 1 375 0
 18334 0012 084B     		ldr	r3, .L40
 18335 0014 FB60     		str	r3, [r7, #12]
 376:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 18336              		.loc 1 376 0
 18337 0016 FA68     		ldr	r2, [r7, #12]
 18338 0018 7B68     		ldr	r3, [r7, #4]
 18339 001a D318     		adds	r3, r2, r3
 18340 001c 03F11403 		add	r3, r3, #20
 18341 0020 FB60     		str	r3, [r7, #12]
 377:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 378:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set the DAC channel2 selected data holding register */
 379:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *(__IO uint32_t *)tmp = Data;
 18342              		.loc 1 379 0
 18343 0022 FB68     		ldr	r3, [r7, #12]
 18344 0024 7A88     		ldrh	r2, [r7, #2]
 18345 0026 1A60     		str	r2, [r3, #0]
 380:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18346              		.loc 1 380 0
 18347 0028 07F11407 		add	r7, r7, #20
 18348 002c BD46     		mov	sp, r7
 18349 002e 80BC     		pop	{r7}
 18350 0030 7047     		bx	lr
 18351              	.L41:
 18352 0032 00BF     		.align	2
 18353              	.L40:
 18354 0034 00740040 		.word	1073771520
 18355              		.cfi_endproc
 18356              	.LFE39:
 18358              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 18359              		.align	2
 18360              		.global	DAC_SetDualChannelData
 18361              		.thumb
 18362              		.thumb_func
 18364              	DAC_SetDualChannelData:
 18365              	.LFB40:
 381:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 382:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 383:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Set the specified data holding register value for dual channel
 384:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   DAC.
 385:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 386:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 387:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_8b_R: 8bit right data alignment selected
 388:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_L: 12bit left data alignment selected
 389:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_R: 12bit right data alignment selected
 390:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data 
 391:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   holding register.
 392:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data 
 393:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   holding register.
 394:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 395:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 396:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 397:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18366              		.loc 1 397 0
 18367              		.cfi_startproc
 18368              		@ args = 0, pretend = 0, frame = 16
 18369              		@ frame_needed = 1, uses_anonymous_args = 0
 18370              		@ link register save eliminated.
 18371 0000 80B4     		push	{r7}
 18372              	.LCFI32:
 18373              		.cfi_def_cfa_offset 4
 18374 0002 85B0     		sub	sp, sp, #20
 18375              	.LCFI33:
 18376              		.cfi_def_cfa_offset 24
 18377 0004 00AF     		add	r7, sp, #0
 18378              		.cfi_offset 7, -4
 18379              	.LCFI34:
 18380              		.cfi_def_cfa_register 7
 18381 0006 7860     		str	r0, [r7, #4]
 18382 0008 1346     		mov	r3, r2
 18383 000a 0A46     		mov	r2, r1	@ movhi
 18384 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 18385 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 398:../StdPeripheralDriver/src/stm32f10x_dac.c ****   uint32_t data = 0, tmp = 0;
 18386              		.loc 1 398 0
 18387 0010 4FF00003 		mov	r3, #0
 18388 0014 FB60     		str	r3, [r7, #12]
 18389 0016 4FF00003 		mov	r3, #0
 18390 001a BB60     		str	r3, [r7, #8]
 399:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 400:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 401:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 402:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 403:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 404:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 405:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Calculate and set dual DAC data holding register value */
 406:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 18391              		.loc 1 406 0
 18392 001c 7B68     		ldr	r3, [r7, #4]
 18393 001e 082B     		cmp	r3, #8
 18394 0020 07D1     		bne	.L43
 407:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 408:../StdPeripheralDriver/src/stm32f10x_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 18395              		.loc 1 408 0
 18396 0022 7B88     		ldrh	r3, [r7, #2]
 18397 0024 4FEA0322 		lsl	r2, r3, #8
 18398 0028 3B88     		ldrh	r3, [r7, #0]
 18399 002a 42EA0303 		orr	r3, r2, r3
 18400 002e FB60     		str	r3, [r7, #12]
 18401 0030 06E0     		b	.L44
 18402              	.L43:
 409:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 410:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 411:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 412:../StdPeripheralDriver/src/stm32f10x_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 18403              		.loc 1 412 0
 18404 0032 7B88     		ldrh	r3, [r7, #2]
 18405 0034 4FEA0342 		lsl	r2, r3, #16
 18406 0038 3B88     		ldrh	r3, [r7, #0]
 18407 003a 42EA0303 		orr	r3, r2, r3
 18408 003e FB60     		str	r3, [r7, #12]
 18409              	.L44:
 413:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 414:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 415:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp = (uint32_t)DAC_BASE;
 18410              		.loc 1 415 0
 18411 0040 074B     		ldr	r3, .L45
 18412 0042 BB60     		str	r3, [r7, #8]
 416:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 18413              		.loc 1 416 0
 18414 0044 7A68     		ldr	r2, [r7, #4]
 18415 0046 BB68     		ldr	r3, [r7, #8]
 18416 0048 D318     		adds	r3, r2, r3
 18417 004a 03F12003 		add	r3, r3, #32
 18418 004e BB60     		str	r3, [r7, #8]
 417:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 418:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Set the dual DAC selected data holding register */
 419:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *(__IO uint32_t *)tmp = data;
 18419              		.loc 1 419 0
 18420 0050 BB68     		ldr	r3, [r7, #8]
 18421 0052 FA68     		ldr	r2, [r7, #12]
 18422 0054 1A60     		str	r2, [r3, #0]
 420:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18423              		.loc 1 420 0
 18424 0056 07F11407 		add	r7, r7, #20
 18425 005a BD46     		mov	sp, r7
 18426 005c 80BC     		pop	{r7}
 18427 005e 7047     		bx	lr
 18428              	.L46:
 18429              		.align	2
 18430              	.L45:
 18431 0060 00740040 		.word	1073771520
 18432              		.cfi_endproc
 18433              	.LFE40:
 18435              		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 18436              		.align	2
 18437              		.global	DAC_GetDataOutputValue
 18438              		.thumb
 18439              		.thumb_func
 18441              	DAC_GetDataOutputValue:
 18442              	.LFB41:
 421:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 422:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 423:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 424:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 425:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 426:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 427:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 428:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval The selected DAC channel data output value.
 429:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 430:../StdPeripheralDriver/src/stm32f10x_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 431:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18443              		.loc 1 431 0
 18444              		.cfi_startproc
 18445              		@ args = 0, pretend = 0, frame = 16
 18446              		@ frame_needed = 1, uses_anonymous_args = 0
 18447              		@ link register save eliminated.
 18448 0000 80B4     		push	{r7}
 18449              	.LCFI35:
 18450              		.cfi_def_cfa_offset 4
 18451 0002 85B0     		sub	sp, sp, #20
 18452              	.LCFI36:
 18453              		.cfi_def_cfa_offset 24
 18454 0004 00AF     		add	r7, sp, #0
 18455              		.cfi_offset 7, -4
 18456              	.LCFI37:
 18457              		.cfi_def_cfa_register 7
 18458 0006 7860     		str	r0, [r7, #4]
 432:../StdPeripheralDriver/src/stm32f10x_dac.c ****   __IO uint32_t tmp = 0;
 18459              		.loc 1 432 0
 18460 0008 4FF00003 		mov	r3, #0
 18461 000c FB60     		str	r3, [r7, #12]
 433:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 434:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 435:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 436:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 437:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 18462              		.loc 1 437 0
 18463 000e 094B     		ldr	r3, .L48
 18464 0010 FB60     		str	r3, [r7, #12]
 438:../StdPeripheralDriver/src/stm32f10x_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 18465              		.loc 1 438 0
 18466 0012 7B68     		ldr	r3, [r7, #4]
 18467 0014 4FEA9302 		lsr	r2, r3, #2
 18468 0018 FB68     		ldr	r3, [r7, #12]
 18469 001a D318     		adds	r3, r2, r3
 18470 001c 03F12C03 		add	r3, r3, #44
 18471 0020 FB60     		str	r3, [r7, #12]
 439:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 440:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Returns the DAC channel data output register value */
 441:../StdPeripheralDriver/src/stm32f10x_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 18472              		.loc 1 441 0
 18473 0022 FB68     		ldr	r3, [r7, #12]
 18474 0024 1B68     		ldr	r3, [r3, #0]
 18475 0026 9BB2     		uxth	r3, r3
 442:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18476              		.loc 1 442 0
 18477 0028 1846     		mov	r0, r3
 18478 002a 07F11407 		add	r7, r7, #20
 18479 002e BD46     		mov	sp, r7
 18480 0030 80BC     		pop	{r7}
 18481 0032 7047     		bx	lr
 18482              	.L49:
 18483              		.align	2
 18484              	.L48:
 18485 0034 00740040 		.word	1073771520
 18486              		.cfi_endproc
 18487              	.LFE41:
 18489              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 18490              		.align	2
 18491              		.global	DAC_GetFlagStatus
 18492              		.thumb
 18493              		.thumb_func
 18495              	DAC_GetFlagStatus:
 18496              	.LFB42:
 443:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 444:../StdPeripheralDriver/src/stm32f10x_dac.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 445:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 446:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 447:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: thee selected DAC channel. 
 448:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 449:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 450:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 451:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 452:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be only of the following value:
 453:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_FLAG_DMAUDR: DMA underrun flag                                                 
 454:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 455:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 456:../StdPeripheralDriver/src/stm32f10x_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 457:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18497              		.loc 1 457 0
 18498              		.cfi_startproc
 18499              		@ args = 0, pretend = 0, frame = 16
 18500              		@ frame_needed = 1, uses_anonymous_args = 0
 18501              		@ link register save eliminated.
 18502 0000 80B4     		push	{r7}
 18503              	.LCFI38:
 18504              		.cfi_def_cfa_offset 4
 18505 0002 85B0     		sub	sp, sp, #20
 18506              	.LCFI39:
 18507              		.cfi_def_cfa_offset 24
 18508 0004 00AF     		add	r7, sp, #0
 18509              		.cfi_offset 7, -4
 18510              	.LCFI40:
 18511              		.cfi_def_cfa_register 7
 18512 0006 7860     		str	r0, [r7, #4]
 18513 0008 3960     		str	r1, [r7, #0]
 458:../StdPeripheralDriver/src/stm32f10x_dac.c ****   FlagStatus bitstatus = RESET;
 18514              		.loc 1 458 0
 18515 000a 4FF00003 		mov	r3, #0
 18516 000e FB73     		strb	r3, [r7, #15]
 459:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 460:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 461:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 462:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 463:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the status of the specified DAC flag */
 464:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 18517              		.loc 1 464 0
 18518 0010 0B4B     		ldr	r3, .L53
 18519 0012 5A6B     		ldr	r2, [r3, #52]
 18520 0014 7B68     		ldr	r3, [r7, #4]
 18521 0016 3968     		ldr	r1, [r7, #0]
 18522 0018 01FA03F3 		lsl	r3, r1, r3
 18523 001c 02EA0303 		and	r3, r2, r3
 18524 0020 002B     		cmp	r3, #0
 18525 0022 03D0     		beq	.L51
 465:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 466:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* DAC_FLAG is set */
 467:../StdPeripheralDriver/src/stm32f10x_dac.c ****     bitstatus = SET;
 18526              		.loc 1 467 0
 18527 0024 4FF00103 		mov	r3, #1
 18528 0028 FB73     		strb	r3, [r7, #15]
 18529 002a 02E0     		b	.L52
 18530              	.L51:
 468:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 469:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 470:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 471:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* DAC_FLAG is reset */
 472:../StdPeripheralDriver/src/stm32f10x_dac.c ****     bitstatus = RESET;
 18531              		.loc 1 472 0
 18532 002c 4FF00003 		mov	r3, #0
 18533 0030 FB73     		strb	r3, [r7, #15]
 18534              	.L52:
 473:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 474:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Return the DAC_FLAG status */
 475:../StdPeripheralDriver/src/stm32f10x_dac.c ****   return  bitstatus;
 18535              		.loc 1 475 0
 18536 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 476:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18537              		.loc 1 476 0
 18538 0034 1846     		mov	r0, r3
 18539 0036 07F11407 		add	r7, r7, #20
 18540 003a BD46     		mov	sp, r7
 18541 003c 80BC     		pop	{r7}
 18542 003e 7047     		bx	lr
 18543              	.L54:
 18544              		.align	2
 18545              	.L53:
 18546 0040 00740040 		.word	1073771520
 18547              		.cfi_endproc
 18548              	.LFE42:
 18550              		.section	.text.DAC_ClearFlag,"ax",%progbits
 18551              		.align	2
 18552              		.global	DAC_ClearFlag
 18553              		.thumb
 18554              		.thumb_func
 18556              	DAC_ClearFlag:
 18557              	.LFB43:
 477:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 478:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 479:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Clears the DAC channelx's pending flags.
 480:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 481:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 482:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 483:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 484:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 485:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be of the following value:
 486:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_FLAG_DMAUDR: DMA underrun flag                           
 487:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 488:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 489:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 490:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18558              		.loc 1 490 0
 18559              		.cfi_startproc
 18560              		@ args = 0, pretend = 0, frame = 8
 18561              		@ frame_needed = 1, uses_anonymous_args = 0
 18562              		@ link register save eliminated.
 18563 0000 80B4     		push	{r7}
 18564              	.LCFI41:
 18565              		.cfi_def_cfa_offset 4
 18566 0002 83B0     		sub	sp, sp, #12
 18567              	.LCFI42:
 18568              		.cfi_def_cfa_offset 16
 18569 0004 00AF     		add	r7, sp, #0
 18570              		.cfi_offset 7, -4
 18571              	.LCFI43:
 18572              		.cfi_def_cfa_register 7
 18573 0006 7860     		str	r0, [r7, #4]
 18574 0008 3960     		str	r1, [r7, #0]
 491:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 492:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 493:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 494:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 495:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Clear the selected DAC flags */
 496:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 18575              		.loc 1 496 0
 18576 000a 054B     		ldr	r3, .L56
 18577 000c 7A68     		ldr	r2, [r7, #4]
 18578 000e 3968     		ldr	r1, [r7, #0]
 18579 0010 01FA02F2 		lsl	r2, r1, r2
 18580 0014 5A63     		str	r2, [r3, #52]
 497:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18581              		.loc 1 497 0
 18582 0016 07F10C07 		add	r7, r7, #12
 18583 001a BD46     		mov	sp, r7
 18584 001c 80BC     		pop	{r7}
 18585 001e 7047     		bx	lr
 18586              	.L57:
 18587              		.align	2
 18588              	.L56:
 18589 0020 00740040 		.word	1073771520
 18590              		.cfi_endproc
 18591              	.LFE43:
 18593              		.section	.text.DAC_GetITStatus,"ax",%progbits
 18594              		.align	2
 18595              		.global	DAC_GetITStatus
 18596              		.thumb
 18597              		.thumb_func
 18599              	DAC_GetITStatus:
 18600              	.LFB44:
 498:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 499:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 500:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 501:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 502:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 503:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 504:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 505:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 506:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be the following values:
 507:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                       
 508:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 509:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 510:../StdPeripheralDriver/src/stm32f10x_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 511:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18601              		.loc 1 511 0
 18602              		.cfi_startproc
 18603              		@ args = 0, pretend = 0, frame = 16
 18604              		@ frame_needed = 1, uses_anonymous_args = 0
 18605              		@ link register save eliminated.
 18606 0000 80B4     		push	{r7}
 18607              	.LCFI44:
 18608              		.cfi_def_cfa_offset 4
 18609 0002 85B0     		sub	sp, sp, #20
 18610              	.LCFI45:
 18611              		.cfi_def_cfa_offset 24
 18612 0004 00AF     		add	r7, sp, #0
 18613              		.cfi_offset 7, -4
 18614              	.LCFI46:
 18615              		.cfi_def_cfa_register 7
 18616 0006 7860     		str	r0, [r7, #4]
 18617 0008 3960     		str	r1, [r7, #0]
 512:../StdPeripheralDriver/src/stm32f10x_dac.c ****   ITStatus bitstatus = RESET;
 18618              		.loc 1 512 0
 18619 000a 4FF00003 		mov	r3, #0
 18620 000e FB73     		strb	r3, [r7, #15]
 513:../StdPeripheralDriver/src/stm32f10x_dac.c ****   uint32_t enablestatus = 0;
 18621              		.loc 1 513 0
 18622 0010 4FF00003 		mov	r3, #0
 18623 0014 BB60     		str	r3, [r7, #8]
 514:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 515:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 516:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 517:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 518:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 519:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Get the DAC_IT enable bit status */
 520:../StdPeripheralDriver/src/stm32f10x_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 18624              		.loc 1 520 0
 18625 0016 124B     		ldr	r3, .L61
 18626 0018 1A68     		ldr	r2, [r3, #0]
 18627 001a 7B68     		ldr	r3, [r7, #4]
 18628 001c 3968     		ldr	r1, [r7, #0]
 18629 001e 01FA03F3 		lsl	r3, r1, r3
 18630 0022 02EA0303 		and	r3, r2, r3
 18631 0026 BB60     		str	r3, [r7, #8]
 521:../StdPeripheralDriver/src/stm32f10x_dac.c ****   
 522:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the status of the specified DAC interrupt */
 523:../StdPeripheralDriver/src/stm32f10x_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 18632              		.loc 1 523 0
 18633 0028 0D4B     		ldr	r3, .L61
 18634 002a 5A6B     		ldr	r2, [r3, #52]
 18635 002c 7B68     		ldr	r3, [r7, #4]
 18636 002e 3968     		ldr	r1, [r7, #0]
 18637 0030 01FA03F3 		lsl	r3, r1, r3
 18638 0034 02EA0303 		and	r3, r2, r3
 18639 0038 002B     		cmp	r3, #0
 18640 003a 06D0     		beq	.L59
 18641              		.loc 1 523 0 is_stmt 0 discriminator 1
 18642 003c BB68     		ldr	r3, [r7, #8]
 18643 003e 002B     		cmp	r3, #0
 18644 0040 03D0     		beq	.L59
 524:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 525:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* DAC_IT is set */
 526:../StdPeripheralDriver/src/stm32f10x_dac.c ****     bitstatus = SET;
 18645              		.loc 1 526 0 is_stmt 1
 18646 0042 4FF00103 		mov	r3, #1
 18647 0046 FB73     		strb	r3, [r7, #15]
 18648 0048 02E0     		b	.L60
 18649              	.L59:
 527:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 528:../StdPeripheralDriver/src/stm32f10x_dac.c ****   else
 529:../StdPeripheralDriver/src/stm32f10x_dac.c ****   {
 530:../StdPeripheralDriver/src/stm32f10x_dac.c ****     /* DAC_IT is reset */
 531:../StdPeripheralDriver/src/stm32f10x_dac.c ****     bitstatus = RESET;
 18650              		.loc 1 531 0
 18651 004a 4FF00003 		mov	r3, #0
 18652 004e FB73     		strb	r3, [r7, #15]
 18653              	.L60:
 532:../StdPeripheralDriver/src/stm32f10x_dac.c ****   }
 533:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Return the DAC_IT status */
 534:../StdPeripheralDriver/src/stm32f10x_dac.c ****   return  bitstatus;
 18654              		.loc 1 534 0
 18655 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 535:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18656              		.loc 1 535 0
 18657 0052 1846     		mov	r0, r3
 18658 0054 07F11407 		add	r7, r7, #20
 18659 0058 BD46     		mov	sp, r7
 18660 005a 80BC     		pop	{r7}
 18661 005c 7047     		bx	lr
 18662              	.L62:
 18663 005e 00BF     		.align	2
 18664              	.L61:
 18665 0060 00740040 		.word	1073771520
 18666              		.cfi_endproc
 18667              	.LFE44:
 18669              		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 18670              		.align	2
 18671              		.global	DAC_ClearITPendingBit
 18672              		.thumb
 18673              		.thumb_func
 18675              	DAC_ClearITPendingBit:
 18676              	.LFB45:
 536:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 537:../StdPeripheralDriver/src/stm32f10x_dac.c **** /**
 538:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @brief  Clears the DAC channelx's interrupt pending bits.
 539:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 540:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 541:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 542:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 543:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 544:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *   This parameter can be the following values:
 545:../StdPeripheralDriver/src/stm32f10x_dac.c ****   *     @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 546:../StdPeripheralDriver/src/stm32f10x_dac.c ****   * @retval None
 547:../StdPeripheralDriver/src/stm32f10x_dac.c ****   */
 548:../StdPeripheralDriver/src/stm32f10x_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 549:../StdPeripheralDriver/src/stm32f10x_dac.c **** {
 18677              		.loc 1 549 0
 18678              		.cfi_startproc
 18679              		@ args = 0, pretend = 0, frame = 8
 18680              		@ frame_needed = 1, uses_anonymous_args = 0
 18681              		@ link register save eliminated.
 18682 0000 80B4     		push	{r7}
 18683              	.LCFI47:
 18684              		.cfi_def_cfa_offset 4
 18685 0002 83B0     		sub	sp, sp, #12
 18686              	.LCFI48:
 18687              		.cfi_def_cfa_offset 16
 18688 0004 00AF     		add	r7, sp, #0
 18689              		.cfi_offset 7, -4
 18690              	.LCFI49:
 18691              		.cfi_def_cfa_register 7
 18692 0006 7860     		str	r0, [r7, #4]
 18693 0008 3960     		str	r1, [r7, #0]
 550:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Check the parameters */
 551:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 552:../StdPeripheralDriver/src/stm32f10x_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 553:../StdPeripheralDriver/src/stm32f10x_dac.c **** 
 554:../StdPeripheralDriver/src/stm32f10x_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 555:../StdPeripheralDriver/src/stm32f10x_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 18694              		.loc 1 555 0
 18695 000a 054B     		ldr	r3, .L64
 18696 000c 7A68     		ldr	r2, [r7, #4]
 18697 000e 3968     		ldr	r1, [r7, #0]
 18698 0010 01FA02F2 		lsl	r2, r1, r2
 18699 0014 5A63     		str	r2, [r3, #52]
 556:../StdPeripheralDriver/src/stm32f10x_dac.c **** }
 18700              		.loc 1 556 0
 18701 0016 07F10C07 		add	r7, r7, #12
 18702 001a BD46     		mov	sp, r7
 18703 001c 80BC     		pop	{r7}
 18704 001e 7047     		bx	lr
 18705              	.L65:
 18706              		.align	2
 18707              	.L64:
 18708 0020 00740040 		.word	1073771520
 18709              		.cfi_endproc
 18710              	.LFE45:
 18712              		.text
 18713              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_dac.c
     /tmp/ccu1qQ0t.s:17708  .text.DAC_DeInit:00000000 $t
     /tmp/ccu1qQ0t.s:17713  .text.DAC_DeInit:00000000 DAC_DeInit
     /tmp/ccu1qQ0t.s:17741  .text.DAC_Init:00000000 $t
     /tmp/ccu1qQ0t.s:17746  .text.DAC_Init:00000000 DAC_Init
     /tmp/ccu1qQ0t.s:17818  .text.DAC_Init:0000006c $d
     /tmp/ccu1qQ0t.s:17823  .text.DAC_StructInit:00000000 $t
     /tmp/ccu1qQ0t.s:17828  .text.DAC_StructInit:00000000 DAC_StructInit
     /tmp/ccu1qQ0t.s:17871  .text.DAC_Cmd:00000000 $t
     /tmp/ccu1qQ0t.s:17876  .text.DAC_Cmd:00000000 DAC_Cmd
     /tmp/ccu1qQ0t.s:17930  .text.DAC_Cmd:00000050 $d
     /tmp/ccu1qQ0t.s:17935  .text.DAC_ITConfig:00000000 $t
     /tmp/ccu1qQ0t.s:17940  .text.DAC_ITConfig:00000000 DAC_ITConfig
     /tmp/ccu1qQ0t.s:17995  .text.DAC_ITConfig:0000004c $d
     /tmp/ccu1qQ0t.s:18000  .text.DAC_DMACmd:00000000 $t
     /tmp/ccu1qQ0t.s:18005  .text.DAC_DMACmd:00000000 DAC_DMACmd
     /tmp/ccu1qQ0t.s:18059  .text.DAC_DMACmd:00000050 $d
     /tmp/ccu1qQ0t.s:18064  .text.DAC_SoftwareTriggerCmd:00000000 $t
     /tmp/ccu1qQ0t.s:18069  .text.DAC_SoftwareTriggerCmd:00000000 DAC_SoftwareTriggerCmd
     /tmp/ccu1qQ0t.s:18125  .text.DAC_SoftwareTriggerCmd:00000058 $d
     /tmp/ccu1qQ0t.s:18130  .text.DAC_DualSoftwareTriggerCmd:00000000 $t
     /tmp/ccu1qQ0t.s:18135  .text.DAC_DualSoftwareTriggerCmd:00000000 DAC_DualSoftwareTriggerCmd
     /tmp/ccu1qQ0t.s:18181  .text.DAC_DualSoftwareTriggerCmd:00000034 $d
     /tmp/ccu1qQ0t.s:18186  .text.DAC_WaveGenerationCmd:00000000 $t
     /tmp/ccu1qQ0t.s:18191  .text.DAC_WaveGenerationCmd:00000000 DAC_WaveGenerationCmd
     /tmp/ccu1qQ0t.s:18246  .text.DAC_WaveGenerationCmd:0000004c $d
     /tmp/ccu1qQ0t.s:18251  .text.DAC_SetChannel1Data:00000000 $t
     /tmp/ccu1qQ0t.s:18256  .text.DAC_SetChannel1Data:00000000 DAC_SetChannel1Data
     /tmp/ccu1qQ0t.s:18300  .text.DAC_SetChannel1Data:00000034 $d
     /tmp/ccu1qQ0t.s:18305  .text.DAC_SetChannel2Data:00000000 $t
     /tmp/ccu1qQ0t.s:18310  .text.DAC_SetChannel2Data:00000000 DAC_SetChannel2Data
     /tmp/ccu1qQ0t.s:18354  .text.DAC_SetChannel2Data:00000034 $d
     /tmp/ccu1qQ0t.s:18359  .text.DAC_SetDualChannelData:00000000 $t
     /tmp/ccu1qQ0t.s:18364  .text.DAC_SetDualChannelData:00000000 DAC_SetDualChannelData
     /tmp/ccu1qQ0t.s:18431  .text.DAC_SetDualChannelData:00000060 $d
     /tmp/ccu1qQ0t.s:18436  .text.DAC_GetDataOutputValue:00000000 $t
     /tmp/ccu1qQ0t.s:18441  .text.DAC_GetDataOutputValue:00000000 DAC_GetDataOutputValue
     /tmp/ccu1qQ0t.s:18485  .text.DAC_GetDataOutputValue:00000034 $d
     /tmp/ccu1qQ0t.s:18490  .text.DAC_GetFlagStatus:00000000 $t
     /tmp/ccu1qQ0t.s:18495  .text.DAC_GetFlagStatus:00000000 DAC_GetFlagStatus
     /tmp/ccu1qQ0t.s:18546  .text.DAC_GetFlagStatus:00000040 $d
     /tmp/ccu1qQ0t.s:18551  .text.DAC_ClearFlag:00000000 $t
     /tmp/ccu1qQ0t.s:18556  .text.DAC_ClearFlag:00000000 DAC_ClearFlag
     /tmp/ccu1qQ0t.s:18589  .text.DAC_ClearFlag:00000020 $d
     /tmp/ccu1qQ0t.s:18594  .text.DAC_GetITStatus:00000000 $t
     /tmp/ccu1qQ0t.s:18599  .text.DAC_GetITStatus:00000000 DAC_GetITStatus
     /tmp/ccu1qQ0t.s:18665  .text.DAC_GetITStatus:00000060 $d
     /tmp/ccu1qQ0t.s:18670  .text.DAC_ClearITPendingBit:00000000 $t
     /tmp/ccu1qQ0t.s:18675  .text.DAC_ClearITPendingBit:00000000 DAC_ClearITPendingBit
     /tmp/ccu1qQ0t.s:18708  .text.DAC_ClearITPendingBit:00000020 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
