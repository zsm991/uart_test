   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_dma.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_dma.c"
 17270              		.align	2
 17271              		.global	DMA_DeInit
 17272              		.thumb
 17273              		.thumb_func
 17275              	DMA_DeInit:
 17276              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @file    stm32f10x_dma.c
   4:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief   This file provides all the DMA firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_dma.c **** #include "stm32f10x_dma.h"
  24:../StdPeripheralDriver/src/stm32f10x_dma.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA 
  31:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief DMA driver modules
  32:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */ 
  34:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */ 
  38:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  39:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  40:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  41:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  42:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Defines
  43:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  44:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  45:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  46:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA1 Channelx interrupt pending bit masks */
  48:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  49:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  50:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  51:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  52:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  53:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel6_IT_Mask    ((uint32_t)(DMA_ISR_GIF6 | DMA_ISR_TCIF6 | DMA_ISR_HTIF6 | DMA_ISR
  54:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel7_IT_Mask    ((uint32_t)(DMA_ISR_GIF7 | DMA_ISR_TCIF7 | DMA_ISR_HTIF7 | DMA_ISR
  55:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  56:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA2 Channelx interrupt pending bit masks */
  57:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  58:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  59:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  60:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  61:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  62:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA2 FLAG mask */
  64:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define FLAG_Mask                ((uint32_t)0x10000000)
  65:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  66:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA registers Masks */
  67:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define CCR_CLEAR_Mask           ((uint32_t)0xFFFF800F)
  68:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  69:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  70:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  71:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  72:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Macros
  74:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  75:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  76:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  78:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  79:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  80:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Variables
  82:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  83:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  86:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  87:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_FunctionPrototypes
  90:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  91:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  94:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  95:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  96:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Functions
  98:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  99:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 100:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 101:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 102:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Deinitializes the DMAy Channelx registers to their default reset
 103:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         values.
 104:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and
 105:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 106:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 107:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 108:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx)
 109:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17277              		.loc 1 109 0
 17278              		.cfi_startproc
 17279              		@ args = 0, pretend = 0, frame = 8
 17280              		@ frame_needed = 1, uses_anonymous_args = 0
 17281              		@ link register save eliminated.
 17282 0000 80B4     		push	{r7}
 17283              	.LCFI0:
 17284              		.cfi_def_cfa_offset 4
 17285 0002 83B0     		sub	sp, sp, #12
 17286              	.LCFI1:
 17287              		.cfi_def_cfa_offset 16
 17288 0004 00AF     		add	r7, sp, #0
 17289              		.cfi_offset 7, -4
 17290              	.LCFI2:
 17291              		.cfi_def_cfa_register 7
 17292 0006 7860     		str	r0, [r7, #4]
 110:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 111:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 112:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 113:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Disable the selected DMAy Channelx */
 114:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 17293              		.loc 1 114 0
 17294 0008 7B68     		ldr	r3, [r7, #4]
 17295 000a 1A68     		ldr	r2, [r3, #0]
 17296 000c 4FF6FE73 		movw	r3, #65534
 17297 0010 02EA0303 		and	r3, r2, r3
 17298 0014 7A68     		ldr	r2, [r7, #4]
 17299 0016 1360     		str	r3, [r2, #0]
 115:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 116:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx control register */
 117:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR  = 0;
 17300              		.loc 1 117 0
 17301 0018 7B68     		ldr	r3, [r7, #4]
 17302 001a 4FF00002 		mov	r2, #0
 17303 001e 1A60     		str	r2, [r3, #0]
 118:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 119:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx remaining bytes register */
 120:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = 0;
 17304              		.loc 1 120 0
 17305 0020 7B68     		ldr	r3, [r7, #4]
 17306 0022 4FF00002 		mov	r2, #0
 17307 0026 5A60     		str	r2, [r3, #4]
 121:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 122:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx peripheral address register */
 123:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR  = 0;
 17308              		.loc 1 123 0
 17309 0028 7B68     		ldr	r3, [r7, #4]
 17310 002a 4FF00002 		mov	r2, #0
 17311 002e 9A60     		str	r2, [r3, #8]
 124:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 125:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx memory address register */
 126:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = 0;
 17312              		.loc 1 126 0
 17313 0030 7B68     		ldr	r3, [r7, #4]
 17314 0032 4FF00002 		mov	r2, #0
 17315 0036 DA60     		str	r2, [r3, #12]
 127:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 128:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (DMAy_Channelx == DMA1_Channel1)
 17316              		.loc 1 128 0
 17317 0038 7A68     		ldr	r2, [r7, #4]
 17318 003a 434B     		ldr	r3, .L14
 17319 003c 9A42     		cmp	r2, r3
 17320 003e 06D1     		bne	.L2
 129:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 130:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel1 */
 131:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel1_IT_Mask;
 17321              		.loc 1 131 0
 17322 0040 424B     		ldr	r3, .L14+4
 17323 0042 424A     		ldr	r2, .L14+4
 17324 0044 5268     		ldr	r2, [r2, #4]
 17325 0046 42F00F02 		orr	r2, r2, #15
 17326 004a 5A60     		str	r2, [r3, #4]
 17327 004c 77E0     		b	.L1
 17328              	.L2:
 132:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 133:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel2)
 17329              		.loc 1 133 0
 17330 004e 7A68     		ldr	r2, [r7, #4]
 17331 0050 3F4B     		ldr	r3, .L14+8
 17332 0052 9A42     		cmp	r2, r3
 17333 0054 06D1     		bne	.L4
 134:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 135:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel2 */
 136:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel2_IT_Mask;
 17334              		.loc 1 136 0
 17335 0056 3D4B     		ldr	r3, .L14+4
 17336 0058 3C4A     		ldr	r2, .L14+4
 17337 005a 5268     		ldr	r2, [r2, #4]
 17338 005c 42F0F002 		orr	r2, r2, #240
 17339 0060 5A60     		str	r2, [r3, #4]
 17340 0062 6CE0     		b	.L1
 17341              	.L4:
 137:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 138:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel3)
 17342              		.loc 1 138 0
 17343 0064 7A68     		ldr	r2, [r7, #4]
 17344 0066 3B4B     		ldr	r3, .L14+12
 17345 0068 9A42     		cmp	r2, r3
 17346 006a 06D1     		bne	.L5
 139:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 140:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel3 */
 141:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel3_IT_Mask;
 17347              		.loc 1 141 0
 17348 006c 374B     		ldr	r3, .L14+4
 17349 006e 374A     		ldr	r2, .L14+4
 17350 0070 5268     		ldr	r2, [r2, #4]
 17351 0072 42F47062 		orr	r2, r2, #3840
 17352 0076 5A60     		str	r2, [r3, #4]
 17353 0078 61E0     		b	.L1
 17354              	.L5:
 142:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 143:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel4)
 17355              		.loc 1 143 0
 17356 007a 7A68     		ldr	r2, [r7, #4]
 17357 007c 364B     		ldr	r3, .L14+16
 17358 007e 9A42     		cmp	r2, r3
 17359 0080 06D1     		bne	.L6
 144:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 145:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel4 */
 146:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel4_IT_Mask;
 17360              		.loc 1 146 0
 17361 0082 324B     		ldr	r3, .L14+4
 17362 0084 314A     		ldr	r2, .L14+4
 17363 0086 5268     		ldr	r2, [r2, #4]
 17364 0088 42F47042 		orr	r2, r2, #61440
 17365 008c 5A60     		str	r2, [r3, #4]
 17366 008e 56E0     		b	.L1
 17367              	.L6:
 147:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 148:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel5)
 17368              		.loc 1 148 0
 17369 0090 7A68     		ldr	r2, [r7, #4]
 17370 0092 324B     		ldr	r3, .L14+20
 17371 0094 9A42     		cmp	r2, r3
 17372 0096 06D1     		bne	.L7
 149:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 150:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel5 */
 151:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel5_IT_Mask;
 17373              		.loc 1 151 0
 17374 0098 2C4B     		ldr	r3, .L14+4
 17375 009a 2C4A     		ldr	r2, .L14+4
 17376 009c 5268     		ldr	r2, [r2, #4]
 17377 009e 42F47022 		orr	r2, r2, #983040
 17378 00a2 5A60     		str	r2, [r3, #4]
 17379 00a4 4BE0     		b	.L1
 17380              	.L7:
 152:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 153:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel6)
 17381              		.loc 1 153 0
 17382 00a6 7A68     		ldr	r2, [r7, #4]
 17383 00a8 2D4B     		ldr	r3, .L14+24
 17384 00aa 9A42     		cmp	r2, r3
 17385 00ac 06D1     		bne	.L8
 154:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 155:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel6 */
 156:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel6_IT_Mask;
 17386              		.loc 1 156 0
 17387 00ae 274B     		ldr	r3, .L14+4
 17388 00b0 264A     		ldr	r2, .L14+4
 17389 00b2 5268     		ldr	r2, [r2, #4]
 17390 00b4 42F47002 		orr	r2, r2, #15728640
 17391 00b8 5A60     		str	r2, [r3, #4]
 17392 00ba 40E0     		b	.L1
 17393              	.L8:
 157:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 158:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel7)
 17394              		.loc 1 158 0
 17395 00bc 7A68     		ldr	r2, [r7, #4]
 17396 00be 294B     		ldr	r3, .L14+28
 17397 00c0 9A42     		cmp	r2, r3
 17398 00c2 06D1     		bne	.L9
 159:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 160:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel7 */
 161:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel7_IT_Mask;
 17399              		.loc 1 161 0
 17400 00c4 214B     		ldr	r3, .L14+4
 17401 00c6 214A     		ldr	r2, .L14+4
 17402 00c8 5268     		ldr	r2, [r2, #4]
 17403 00ca 42F07062 		orr	r2, r2, #251658240
 17404 00ce 5A60     		str	r2, [r3, #4]
 17405 00d0 35E0     		b	.L1
 17406              	.L9:
 162:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 163:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel1)
 17407              		.loc 1 163 0
 17408 00d2 7A68     		ldr	r2, [r7, #4]
 17409 00d4 244B     		ldr	r3, .L14+32
 17410 00d6 9A42     		cmp	r2, r3
 17411 00d8 06D1     		bne	.L10
 164:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 165:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel1 */
 166:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel1_IT_Mask;
 17412              		.loc 1 166 0
 17413 00da 244B     		ldr	r3, .L14+36
 17414 00dc 234A     		ldr	r2, .L14+36
 17415 00de 5268     		ldr	r2, [r2, #4]
 17416 00e0 42F00F02 		orr	r2, r2, #15
 17417 00e4 5A60     		str	r2, [r3, #4]
 17418 00e6 2AE0     		b	.L1
 17419              	.L10:
 167:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 168:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel2)
 17420              		.loc 1 168 0
 17421 00e8 7A68     		ldr	r2, [r7, #4]
 17422 00ea 214B     		ldr	r3, .L14+40
 17423 00ec 9A42     		cmp	r2, r3
 17424 00ee 06D1     		bne	.L11
 169:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 170:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel2 */
 171:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel2_IT_Mask;
 17425              		.loc 1 171 0
 17426 00f0 1E4B     		ldr	r3, .L14+36
 17427 00f2 1E4A     		ldr	r2, .L14+36
 17428 00f4 5268     		ldr	r2, [r2, #4]
 17429 00f6 42F0F002 		orr	r2, r2, #240
 17430 00fa 5A60     		str	r2, [r3, #4]
 17431 00fc 1FE0     		b	.L1
 17432              	.L11:
 172:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 173:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel3)
 17433              		.loc 1 173 0
 17434 00fe 7A68     		ldr	r2, [r7, #4]
 17435 0100 1C4B     		ldr	r3, .L14+44
 17436 0102 9A42     		cmp	r2, r3
 17437 0104 06D1     		bne	.L12
 174:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 175:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel3 */
 176:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel3_IT_Mask;
 17438              		.loc 1 176 0
 17439 0106 194B     		ldr	r3, .L14+36
 17440 0108 184A     		ldr	r2, .L14+36
 17441 010a 5268     		ldr	r2, [r2, #4]
 17442 010c 42F47062 		orr	r2, r2, #3840
 17443 0110 5A60     		str	r2, [r3, #4]
 17444 0112 14E0     		b	.L1
 17445              	.L12:
 177:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 178:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel4)
 17446              		.loc 1 178 0
 17447 0114 7A68     		ldr	r2, [r7, #4]
 17448 0116 184B     		ldr	r3, .L14+48
 17449 0118 9A42     		cmp	r2, r3
 17450 011a 06D1     		bne	.L13
 179:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 180:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel4 */
 181:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel4_IT_Mask;
 17451              		.loc 1 181 0
 17452 011c 134B     		ldr	r3, .L14+36
 17453 011e 134A     		ldr	r2, .L14+36
 17454 0120 5268     		ldr	r2, [r2, #4]
 17455 0122 42F47042 		orr	r2, r2, #61440
 17456 0126 5A60     		str	r2, [r3, #4]
 17457 0128 09E0     		b	.L1
 17458              	.L13:
 182:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 183:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 184:../StdPeripheralDriver/src/stm32f10x_dma.c ****   { 
 185:../StdPeripheralDriver/src/stm32f10x_dma.c ****     if (DMAy_Channelx == DMA2_Channel5)
 17459              		.loc 1 185 0
 17460 012a 7A68     		ldr	r2, [r7, #4]
 17461 012c 134B     		ldr	r3, .L14+52
 17462 012e 9A42     		cmp	r2, r3
 17463 0130 05D1     		bne	.L1
 186:../StdPeripheralDriver/src/stm32f10x_dma.c ****     {
 187:../StdPeripheralDriver/src/stm32f10x_dma.c ****       /* Reset interrupt pending bits for DMA2 Channel5 */
 188:../StdPeripheralDriver/src/stm32f10x_dma.c ****       DMA2->IFCR |= DMA2_Channel5_IT_Mask;
 17464              		.loc 1 188 0
 17465 0132 0E4B     		ldr	r3, .L14+36
 17466 0134 0D4A     		ldr	r2, .L14+36
 17467 0136 5268     		ldr	r2, [r2, #4]
 17468 0138 42F47022 		orr	r2, r2, #983040
 17469 013c 5A60     		str	r2, [r3, #4]
 17470              	.L1:
 189:../StdPeripheralDriver/src/stm32f10x_dma.c ****     }
 190:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 191:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17471              		.loc 1 191 0
 17472 013e 07F10C07 		add	r7, r7, #12
 17473 0142 BD46     		mov	sp, r7
 17474 0144 80BC     		pop	{r7}
 17475 0146 7047     		bx	lr
 17476              	.L15:
 17477              		.align	2
 17478              	.L14:
 17479 0148 08000240 		.word	1073872904
 17480 014c 00000240 		.word	1073872896
 17481 0150 1C000240 		.word	1073872924
 17482 0154 30000240 		.word	1073872944
 17483 0158 44000240 		.word	1073872964
 17484 015c 58000240 		.word	1073872984
 17485 0160 6C000240 		.word	1073873004
 17486 0164 80000240 		.word	1073873024
 17487 0168 08040240 		.word	1073873928
 17488 016c 00040240 		.word	1073873920
 17489 0170 1C040240 		.word	1073873948
 17490 0174 30040240 		.word	1073873968
 17491 0178 44040240 		.word	1073873988
 17492 017c 58040240 		.word	1073874008
 17493              		.cfi_endproc
 17494              	.LFE29:
 17496              		.section	.text.DMA_Init,"ax",%progbits
 17497              		.align	2
 17498              		.global	DMA_Init
 17499              		.thumb
 17500              		.thumb_func
 17502              	DMA_Init:
 17503              	.LFB30:
 192:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 193:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 194:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Initializes the DMAy Channelx according to the specified
 195:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         parameters in the DMA_InitStruct.
 196:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 197:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 198:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that
 199:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         contains the configuration information for the specified DMA Channel.
 200:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 201:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 202:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
 203:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17504              		.loc 1 203 0
 17505              		.cfi_startproc
 17506              		@ args = 0, pretend = 0, frame = 16
 17507              		@ frame_needed = 1, uses_anonymous_args = 0
 17508              		@ link register save eliminated.
 17509 0000 80B4     		push	{r7}
 17510              	.LCFI3:
 17511              		.cfi_def_cfa_offset 4
 17512 0002 85B0     		sub	sp, sp, #20
 17513              	.LCFI4:
 17514              		.cfi_def_cfa_offset 24
 17515 0004 00AF     		add	r7, sp, #0
 17516              		.cfi_offset 7, -4
 17517              	.LCFI5:
 17518              		.cfi_def_cfa_register 7
 17519 0006 7860     		str	r0, [r7, #4]
 17520 0008 3960     		str	r1, [r7, #0]
 204:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 17521              		.loc 1 204 0
 17522 000a 4FF00003 		mov	r3, #0
 17523 000e FB60     		str	r3, [r7, #12]
 205:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 206:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 207:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 208:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_DIR(DMA_InitStruct->DMA_DIR));
 209:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 210:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 211:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));   
 212:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 213:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 214:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 215:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 216:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_M2M_STATE(DMA_InitStruct->DMA_M2M));
 217:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 218:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CCR Configuration -----------------*/
 219:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Get the DMAy_Channelx CCR value */
 220:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg = DMAy_Channelx->CCR;
 17524              		.loc 1 220 0
 17525 0010 7B68     		ldr	r3, [r7, #4]
 17526 0012 1B68     		ldr	r3, [r3, #0]
 17527 0014 FB60     		str	r3, [r7, #12]
 221:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Clear MEM2MEM, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 222:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg &= CCR_CLEAR_Mask;
 17528              		.loc 1 222 0
 17529 0016 FB68     		ldr	r3, [r7, #12]
 17530 0018 23F4FE43 		bic	r3, r3, #32512
 17531 001c 23F0F003 		bic	r3, r3, #240
 17532 0020 FB60     		str	r3, [r7, #12]
 223:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Configure DMAy Channelx: data transfer, data size, priority level and mode */
 224:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set DIR bit according to DMA_DIR value */
 225:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 226:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 227:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 228:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 229:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 230:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PL bits according to DMA_Priority value */
 231:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set the MEM2MEM bit according to DMA_M2M value */
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 17533              		.loc 1 232 0
 17534 0022 3B68     		ldr	r3, [r7, #0]
 17535 0024 9A68     		ldr	r2, [r3, #8]
 17536 0026 3B68     		ldr	r3, [r7, #0]
 17537 0028 1B6A     		ldr	r3, [r3, #32]
 17538 002a 1A43     		orrs	r2, r2, r3
 233:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 17539              		.loc 1 233 0
 17540 002c 3B68     		ldr	r3, [r7, #0]
 17541 002e 1B69     		ldr	r3, [r3, #16]
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 17542              		.loc 1 232 0
 17543 0030 1A43     		orrs	r2, r2, r3
 17544              		.loc 1 233 0
 17545 0032 3B68     		ldr	r3, [r7, #0]
 17546 0034 5B69     		ldr	r3, [r3, #20]
 17547 0036 1A43     		orrs	r2, r2, r3
 234:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 17548              		.loc 1 234 0
 17549 0038 3B68     		ldr	r3, [r7, #0]
 17550 003a 9B69     		ldr	r3, [r3, #24]
 233:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 17551              		.loc 1 233 0
 17552 003c 1A43     		orrs	r2, r2, r3
 17553              		.loc 1 234 0
 17554 003e 3B68     		ldr	r3, [r7, #0]
 17555 0040 DB69     		ldr	r3, [r3, #28]
 17556 0042 1A43     		orrs	r2, r2, r3
 235:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
 17557              		.loc 1 235 0
 17558 0044 3B68     		ldr	r3, [r7, #0]
 17559 0046 5B6A     		ldr	r3, [r3, #36]
 234:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 17560              		.loc 1 234 0
 17561 0048 1A43     		orrs	r2, r2, r3
 17562              		.loc 1 235 0
 17563 004a 3B68     		ldr	r3, [r7, #0]
 17564 004c 9B6A     		ldr	r3, [r3, #40]
 17565 004e 42EA0303 		orr	r3, r2, r3
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 17566              		.loc 1 232 0
 17567 0052 FA68     		ldr	r2, [r7, #12]
 17568 0054 42EA0303 		orr	r3, r2, r3
 17569 0058 FB60     		str	r3, [r7, #12]
 236:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 237:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CCR */
 238:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR = tmpreg;
 17570              		.loc 1 238 0
 17571 005a 7B68     		ldr	r3, [r7, #4]
 17572 005c FA68     		ldr	r2, [r7, #12]
 17573 005e 1A60     		str	r2, [r3, #0]
 239:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 240:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 241:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 242:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DMA_InitStruct->DMA_BufferSize;
 17574              		.loc 1 242 0
 17575 0060 3B68     		ldr	r3, [r7, #0]
 17576 0062 DA68     		ldr	r2, [r3, #12]
 17577 0064 7B68     		ldr	r3, [r7, #4]
 17578 0066 5A60     		str	r2, [r3, #4]
 243:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 244:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CPAR Configuration ----------------*/
 245:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CPAR */
 246:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 17579              		.loc 1 246 0
 17580 0068 3B68     		ldr	r3, [r7, #0]
 17581 006a 1A68     		ldr	r2, [r3, #0]
 17582 006c 7B68     		ldr	r3, [r7, #4]
 17583 006e 9A60     		str	r2, [r3, #8]
 247:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 248:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CMAR Configuration ----------------*/
 249:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CMAR */
 250:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = DMA_InitStruct->DMA_MemoryBaseAddr;
 17584              		.loc 1 250 0
 17585 0070 3B68     		ldr	r3, [r7, #0]
 17586 0072 5A68     		ldr	r2, [r3, #4]
 17587 0074 7B68     		ldr	r3, [r7, #4]
 17588 0076 DA60     		str	r2, [r3, #12]
 251:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17589              		.loc 1 251 0
 17590 0078 07F11407 		add	r7, r7, #20
 17591 007c BD46     		mov	sp, r7
 17592 007e 80BC     		pop	{r7}
 17593 0080 7047     		bx	lr
 17594              		.cfi_endproc
 17595              	.LFE30:
 17597 0082 00BF     		.section	.text.DMA_StructInit,"ax",%progbits
 17598              		.align	2
 17599              		.global	DMA_StructInit
 17600              		.thumb
 17601              		.thumb_func
 17603              	DMA_StructInit:
 17604              	.LFB31:
 252:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 253:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 254:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 255:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will
 256:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         be initialized.
 257:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 258:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 259:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 260:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17605              		.loc 1 260 0
 17606              		.cfi_startproc
 17607              		@ args = 0, pretend = 0, frame = 8
 17608              		@ frame_needed = 1, uses_anonymous_args = 0
 17609              		@ link register save eliminated.
 17610 0000 80B4     		push	{r7}
 17611              	.LCFI6:
 17612              		.cfi_def_cfa_offset 4
 17613 0002 83B0     		sub	sp, sp, #12
 17614              	.LCFI7:
 17615              		.cfi_def_cfa_offset 16
 17616 0004 00AF     		add	r7, sp, #0
 17617              		.cfi_offset 7, -4
 17618              	.LCFI8:
 17619              		.cfi_def_cfa_register 7
 17620 0006 7860     		str	r0, [r7, #4]
 261:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*-------------- Reset DMA init structure parameters values ------------------*/
 262:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 263:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 17621              		.loc 1 263 0
 17622 0008 7B68     		ldr	r3, [r7, #4]
 17623 000a 4FF00002 		mov	r2, #0
 17624 000e 1A60     		str	r2, [r3, #0]
 264:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryBaseAddr member */
 265:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryBaseAddr = 0;
 17625              		.loc 1 265 0
 17626 0010 7B68     		ldr	r3, [r7, #4]
 17627 0012 4FF00002 		mov	r2, #0
 17628 0016 5A60     		str	r2, [r3, #4]
 266:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_DIR member */
 267:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
 17629              		.loc 1 267 0
 17630 0018 7B68     		ldr	r3, [r7, #4]
 17631 001a 4FF00002 		mov	r2, #0
 17632 001e 9A60     		str	r2, [r3, #8]
 268:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_BufferSize member */
 269:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 17633              		.loc 1 269 0
 17634 0020 7B68     		ldr	r3, [r7, #4]
 17635 0022 4FF00002 		mov	r2, #0
 17636 0026 DA60     		str	r2, [r3, #12]
 270:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 271:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 17637              		.loc 1 271 0
 17638 0028 7B68     		ldr	r3, [r7, #4]
 17639 002a 4FF00002 		mov	r2, #0
 17640 002e 1A61     		str	r2, [r3, #16]
 272:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryInc member */
 273:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 17641              		.loc 1 273 0
 17642 0030 7B68     		ldr	r3, [r7, #4]
 17643 0032 4FF00002 		mov	r2, #0
 17644 0036 5A61     		str	r2, [r3, #20]
 274:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 275:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 17645              		.loc 1 275 0
 17646 0038 7B68     		ldr	r3, [r7, #4]
 17647 003a 4FF00002 		mov	r2, #0
 17648 003e 9A61     		str	r2, [r3, #24]
 276:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 277:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 17649              		.loc 1 277 0
 17650 0040 7B68     		ldr	r3, [r7, #4]
 17651 0042 4FF00002 		mov	r2, #0
 17652 0046 DA61     		str	r2, [r3, #28]
 278:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Mode member */
 279:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 17653              		.loc 1 279 0
 17654 0048 7B68     		ldr	r3, [r7, #4]
 17655 004a 4FF00002 		mov	r2, #0
 17656 004e 1A62     		str	r2, [r3, #32]
 280:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Priority member */
 281:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 17657              		.loc 1 281 0
 17658 0050 7B68     		ldr	r3, [r7, #4]
 17659 0052 4FF00002 		mov	r2, #0
 17660 0056 5A62     		str	r2, [r3, #36]
 282:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_M2M member */
 283:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
 17661              		.loc 1 283 0
 17662 0058 7B68     		ldr	r3, [r7, #4]
 17663 005a 4FF00002 		mov	r2, #0
 17664 005e 9A62     		str	r2, [r3, #40]
 284:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17665              		.loc 1 284 0
 17666 0060 07F10C07 		add	r7, r7, #12
 17667 0064 BD46     		mov	sp, r7
 17668 0066 80BC     		pop	{r7}
 17669 0068 7047     		bx	lr
 17670              		.cfi_endproc
 17671              	.LFE31:
 17673 006a 00BF     		.section	.text.DMA_Cmd,"ax",%progbits
 17674              		.align	2
 17675              		.global	DMA_Cmd
 17676              		.thumb
 17677              		.thumb_func
 17679              	DMA_Cmd:
 17680              	.LFB32:
 285:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 286:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 287:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx.
 288:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 289:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 290:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the DMAy Channelx. 
 291:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 292:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 293:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 294:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
 295:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17681              		.loc 1 295 0
 17682              		.cfi_startproc
 17683              		@ args = 0, pretend = 0, frame = 8
 17684              		@ frame_needed = 1, uses_anonymous_args = 0
 17685              		@ link register save eliminated.
 17686 0000 80B4     		push	{r7}
 17687              	.LCFI9:
 17688              		.cfi_def_cfa_offset 4
 17689 0002 83B0     		sub	sp, sp, #12
 17690              	.LCFI10:
 17691              		.cfi_def_cfa_offset 16
 17692 0004 00AF     		add	r7, sp, #0
 17693              		.cfi_offset 7, -4
 17694              	.LCFI11:
 17695              		.cfi_def_cfa_register 7
 17696 0006 7860     		str	r0, [r7, #4]
 17697 0008 0B46     		mov	r3, r1
 17698 000a FB70     		strb	r3, [r7, #3]
 296:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 297:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 298:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 299:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 300:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 17699              		.loc 1 300 0
 17700 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 17701 000e 002B     		cmp	r3, #0
 17702 0010 06D0     		beq	.L19
 301:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 302:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Enable the selected DMAy Channelx */
 303:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_CCR1_EN;
 17703              		.loc 1 303 0
 17704 0012 7B68     		ldr	r3, [r7, #4]
 17705 0014 1B68     		ldr	r3, [r3, #0]
 17706 0016 43F00102 		orr	r2, r3, #1
 17707 001a 7B68     		ldr	r3, [r7, #4]
 17708 001c 1A60     		str	r2, [r3, #0]
 17709 001e 07E0     		b	.L18
 17710              	.L19:
 304:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 305:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 306:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 307:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Disable the selected DMAy Channelx */
 308:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 17711              		.loc 1 308 0
 17712 0020 7B68     		ldr	r3, [r7, #4]
 17713 0022 1A68     		ldr	r2, [r3, #0]
 17714 0024 4FF6FE73 		movw	r3, #65534
 17715 0028 02EA0303 		and	r3, r2, r3
 17716 002c 7A68     		ldr	r2, [r7, #4]
 17717 002e 1360     		str	r3, [r2, #0]
 17718              	.L18:
 309:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 310:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17719              		.loc 1 310 0
 17720 0030 07F10C07 		add	r7, r7, #12
 17721 0034 BD46     		mov	sp, r7
 17722 0036 80BC     		pop	{r7}
 17723 0038 7047     		bx	lr
 17724              		.cfi_endproc
 17725              	.LFE32:
 17727 003a 00BF     		.section	.text.DMA_ITConfig,"ax",%progbits
 17728              		.align	2
 17729              		.global	DMA_ITConfig
 17730              		.thumb
 17731              		.thumb_func
 17733              	DMA_ITConfig:
 17734              	.LFB33:
 311:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 312:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 313:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx interrupts.
 314:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 315:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 316:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_IT: specifies the DMA interrupts sources to be enabled
 317:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   or disabled. 
 318:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination of the following values:
 319:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TC:  Transfer complete interrupt mask
 320:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_HT:  Half transfer interrupt mask
 321:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TE:  Transfer error interrupt mask
 322:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
 323:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 324:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 325:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 326:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
 327:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17735              		.loc 1 327 0
 17736              		.cfi_startproc
 17737              		@ args = 0, pretend = 0, frame = 16
 17738              		@ frame_needed = 1, uses_anonymous_args = 0
 17739              		@ link register save eliminated.
 17740 0000 80B4     		push	{r7}
 17741              	.LCFI12:
 17742              		.cfi_def_cfa_offset 4
 17743 0002 85B0     		sub	sp, sp, #20
 17744              	.LCFI13:
 17745              		.cfi_def_cfa_offset 24
 17746 0004 00AF     		add	r7, sp, #0
 17747              		.cfi_offset 7, -4
 17748              	.LCFI14:
 17749              		.cfi_def_cfa_register 7
 17750 0006 F860     		str	r0, [r7, #12]
 17751 0008 B960     		str	r1, [r7, #8]
 17752 000a 1346     		mov	r3, r2
 17753 000c FB71     		strb	r3, [r7, #7]
 328:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 329:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 330:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 331:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 332:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 17754              		.loc 1 332 0
 17755 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 17756 0010 002B     		cmp	r3, #0
 17757 0012 06D0     		beq	.L22
 333:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 334:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Enable the selected DMA interrupts */
 335:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_IT;
 17758              		.loc 1 335 0
 17759 0014 FB68     		ldr	r3, [r7, #12]
 17760 0016 1A68     		ldr	r2, [r3, #0]
 17761 0018 BB68     		ldr	r3, [r7, #8]
 17762 001a 1A43     		orrs	r2, r2, r3
 17763 001c FB68     		ldr	r3, [r7, #12]
 17764 001e 1A60     		str	r2, [r3, #0]
 17765 0020 07E0     		b	.L21
 17766              	.L22:
 336:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 337:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 338:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 339:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Disable the selected DMA interrupts */
 340:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= ~DMA_IT;
 17767              		.loc 1 340 0
 17768 0022 FB68     		ldr	r3, [r7, #12]
 17769 0024 1A68     		ldr	r2, [r3, #0]
 17770 0026 BB68     		ldr	r3, [r7, #8]
 17771 0028 6FEA0303 		mvn	r3, r3
 17772 002c 1A40     		ands	r2, r2, r3
 17773 002e FB68     		ldr	r3, [r7, #12]
 17774 0030 1A60     		str	r2, [r3, #0]
 17775              	.L21:
 341:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 342:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17776              		.loc 1 342 0
 17777 0032 07F11407 		add	r7, r7, #20
 17778 0036 BD46     		mov	sp, r7
 17779 0038 80BC     		pop	{r7}
 17780 003a 7047     		bx	lr
 17781              		.cfi_endproc
 17782              	.LFE33:
 17784              		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 17785              		.align	2
 17786              		.global	DMA_SetCurrDataCounter
 17787              		.thumb
 17788              		.thumb_func
 17790              	DMA_SetCurrDataCounter:
 17791              	.LFB34:
 343:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 344:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 345:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Sets the number of data units in the current DMAy Channelx transfer.
 346:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 347:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 348:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DataNumber: The number of data units in the current DMAy Channelx
 349:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         transfer.   
 350:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @note   This function can only be used when the DMAy_Channelx is disabled.                 
 351:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None.
 352:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 353:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_SetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx, uint16_t DataNumber)
 354:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17792              		.loc 1 354 0
 17793              		.cfi_startproc
 17794              		@ args = 0, pretend = 0, frame = 8
 17795              		@ frame_needed = 1, uses_anonymous_args = 0
 17796              		@ link register save eliminated.
 17797 0000 80B4     		push	{r7}
 17798              	.LCFI15:
 17799              		.cfi_def_cfa_offset 4
 17800 0002 83B0     		sub	sp, sp, #12
 17801              	.LCFI16:
 17802              		.cfi_def_cfa_offset 16
 17803 0004 00AF     		add	r7, sp, #0
 17804              		.cfi_offset 7, -4
 17805              	.LCFI17:
 17806              		.cfi_def_cfa_register 7
 17807 0006 7860     		str	r0, [r7, #4]
 17808 0008 0B46     		mov	r3, r1
 17809 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 355:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 356:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 357:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 358:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 359:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 360:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DataNumber;  
 17810              		.loc 1 360 0
 17811 000c 7A88     		ldrh	r2, [r7, #2]
 17812 000e 7B68     		ldr	r3, [r7, #4]
 17813 0010 5A60     		str	r2, [r3, #4]
 361:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17814              		.loc 1 361 0
 17815 0012 07F10C07 		add	r7, r7, #12
 17816 0016 BD46     		mov	sp, r7
 17817 0018 80BC     		pop	{r7}
 17818 001a 7047     		bx	lr
 17819              		.cfi_endproc
 17820              	.LFE34:
 17822              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 17823              		.align	2
 17824              		.global	DMA_GetCurrDataCounter
 17825              		.thumb
 17826              		.thumb_func
 17828              	DMA_GetCurrDataCounter:
 17829              	.LFB35:
 362:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 363:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 364:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Returns the number of remaining data units in the current
 365:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         DMAy Channelx transfer.
 366:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 367:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 368:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The number of remaining data units in the current DMAy Channelx
 369:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         transfer.
 370:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 371:../StdPeripheralDriver/src/stm32f10x_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx)
 372:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17830              		.loc 1 372 0
 17831              		.cfi_startproc
 17832              		@ args = 0, pretend = 0, frame = 8
 17833              		@ frame_needed = 1, uses_anonymous_args = 0
 17834              		@ link register save eliminated.
 17835 0000 80B4     		push	{r7}
 17836              	.LCFI18:
 17837              		.cfi_def_cfa_offset 4
 17838 0002 83B0     		sub	sp, sp, #12
 17839              	.LCFI19:
 17840              		.cfi_def_cfa_offset 16
 17841 0004 00AF     		add	r7, sp, #0
 17842              		.cfi_offset 7, -4
 17843              	.LCFI20:
 17844              		.cfi_def_cfa_register 7
 17845 0006 7860     		str	r0, [r7, #4]
 373:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 374:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 375:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the number of remaining data units for DMAy Channelx */
 376:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return ((uint16_t)(DMAy_Channelx->CNDTR));
 17846              		.loc 1 376 0
 17847 0008 7B68     		ldr	r3, [r7, #4]
 17848 000a 5B68     		ldr	r3, [r3, #4]
 17849 000c 9BB2     		uxth	r3, r3
 377:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17850              		.loc 1 377 0
 17851 000e 1846     		mov	r0, r3
 17852 0010 07F10C07 		add	r7, r7, #12
 17853 0014 BD46     		mov	sp, r7
 17854 0016 80BC     		pop	{r7}
 17855 0018 7047     		bx	lr
 17856              		.cfi_endproc
 17857              	.LFE35:
 17859 001a 00BF     		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 17860              		.align	2
 17861              		.global	DMA_GetFlagStatus
 17862              		.thumb
 17863              		.thumb_func
 17865              	DMA_GetFlagStatus:
 17866              	.LFB36:
 378:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 379:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 380:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx flag is set or not.
 381:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to check.
 382:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 383:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 384:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 385:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 386:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 387:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 388:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 389:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 390:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 391:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 392:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 393:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 394:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 395:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 396:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 397:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 398:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 399:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 400:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 401:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 402:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 403:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 404:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 405:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 406:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 407:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 408:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 409:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 410:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 411:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 412:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 413:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 414:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 415:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 416:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 417:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 418:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 419:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 420:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 421:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 422:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 423:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 424:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 425:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 426:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 427:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 428:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 429:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 430:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 431:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_FLAG (SET or RESET).
 432:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 433:../StdPeripheralDriver/src/stm32f10x_dma.c **** FlagStatus DMA_GetFlagStatus(uint32_t DMAy_FLAG)
 434:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17867              		.loc 1 434 0
 17868              		.cfi_startproc
 17869              		@ args = 0, pretend = 0, frame = 16
 17870              		@ frame_needed = 1, uses_anonymous_args = 0
 17871              		@ link register save eliminated.
 17872 0000 80B4     		push	{r7}
 17873              	.LCFI21:
 17874              		.cfi_def_cfa_offset 4
 17875 0002 85B0     		sub	sp, sp, #20
 17876              	.LCFI22:
 17877              		.cfi_def_cfa_offset 24
 17878 0004 00AF     		add	r7, sp, #0
 17879              		.cfi_offset 7, -4
 17880              	.LCFI23:
 17881              		.cfi_def_cfa_register 7
 17882 0006 7860     		str	r0, [r7, #4]
 435:../StdPeripheralDriver/src/stm32f10x_dma.c ****   FlagStatus bitstatus = RESET;
 17883              		.loc 1 435 0
 17884 0008 4FF00003 		mov	r3, #0
 17885 000c FB73     		strb	r3, [r7, #15]
 436:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 17886              		.loc 1 436 0
 17887 000e 4FF00003 		mov	r3, #0
 17888 0012 BB60     		str	r3, [r7, #8]
 437:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 438:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 439:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMAy_FLAG));
 440:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 441:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 442:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 17889              		.loc 1 442 0
 17890 0014 7B68     		ldr	r3, [r7, #4]
 17891 0016 03F08053 		and	r3, r3, #268435456
 17892 001a 002B     		cmp	r3, #0
 17893 001c 03D0     		beq	.L27
 443:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 444:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 445:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR ;
 17894              		.loc 1 445 0
 17895 001e 0D4B     		ldr	r3, .L31
 17896 0020 1B68     		ldr	r3, [r3, #0]
 17897 0022 BB60     		str	r3, [r7, #8]
 17898 0024 02E0     		b	.L28
 17899              	.L27:
 446:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 447:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 448:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 449:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 450:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR ;
 17900              		.loc 1 450 0
 17901 0026 0C4B     		ldr	r3, .L31+4
 17902 0028 1B68     		ldr	r3, [r3, #0]
 17903 002a BB60     		str	r3, [r7, #8]
 17904              	.L28:
 451:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 452:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 453:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy flag */
 454:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_FLAG) != (uint32_t)RESET)
 17905              		.loc 1 454 0
 17906 002c BA68     		ldr	r2, [r7, #8]
 17907 002e 7B68     		ldr	r3, [r7, #4]
 17908 0030 02EA0303 		and	r3, r2, r3
 17909 0034 002B     		cmp	r3, #0
 17910 0036 03D0     		beq	.L29
 455:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 456:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is set */
 457:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = SET;
 17911              		.loc 1 457 0
 17912 0038 4FF00103 		mov	r3, #1
 17913 003c FB73     		strb	r3, [r7, #15]
 17914 003e 02E0     		b	.L30
 17915              	.L29:
 458:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 459:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 460:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 461:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is reset */
 462:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 17916              		.loc 1 462 0
 17917 0040 4FF00003 		mov	r3, #0
 17918 0044 FB73     		strb	r3, [r7, #15]
 17919              	.L30:
 463:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 464:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 465:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the DMAy_FLAG status */
 466:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return  bitstatus;
 17920              		.loc 1 466 0
 17921 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 467:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17922              		.loc 1 467 0
 17923 0048 1846     		mov	r0, r3
 17924 004a 07F11407 		add	r7, r7, #20
 17925 004e BD46     		mov	sp, r7
 17926 0050 80BC     		pop	{r7}
 17927 0052 7047     		bx	lr
 17928              	.L32:
 17929              		.align	2
 17930              	.L31:
 17931 0054 00040240 		.word	1073873920
 17932 0058 00000240 		.word	1073872896
 17933              		.cfi_endproc
 17934              	.LFE36:
 17936              		.section	.text.DMA_ClearFlag,"ax",%progbits
 17937              		.align	2
 17938              		.global	DMA_ClearFlag
 17939              		.thumb
 17940              		.thumb_func
 17942              	DMA_ClearFlag:
 17943              	.LFB37:
 468:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 469:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 470:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's pending flags.
 471:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to clear.
 472:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 473:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 474:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 475:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 476:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 477:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 478:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 479:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 480:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 481:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 482:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 483:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 484:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 485:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 486:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 487:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 488:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 489:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 490:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 491:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 492:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 493:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 494:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 495:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 496:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 497:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 498:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 499:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 500:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 501:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 502:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 503:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 504:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 505:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 506:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 507:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 508:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 509:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 510:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 511:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 512:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 513:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 514:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 515:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 516:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 517:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 518:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 519:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 520:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 521:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 522:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 523:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ClearFlag(uint32_t DMAy_FLAG)
 524:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17944              		.loc 1 524 0
 17945              		.cfi_startproc
 17946              		@ args = 0, pretend = 0, frame = 8
 17947              		@ frame_needed = 1, uses_anonymous_args = 0
 17948              		@ link register save eliminated.
 17949 0000 80B4     		push	{r7}
 17950              	.LCFI24:
 17951              		.cfi_def_cfa_offset 4
 17952 0002 83B0     		sub	sp, sp, #12
 17953              	.LCFI25:
 17954              		.cfi_def_cfa_offset 16
 17955 0004 00AF     		add	r7, sp, #0
 17956              		.cfi_offset 7, -4
 17957              	.LCFI26:
 17958              		.cfi_def_cfa_register 7
 17959 0006 7860     		str	r0, [r7, #4]
 525:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 526:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMAy_FLAG));
 527:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 528:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 529:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 17960              		.loc 1 529 0
 17961 0008 7B68     		ldr	r3, [r7, #4]
 17962 000a 03F08053 		and	r3, r3, #268435456
 17963 000e 002B     		cmp	r3, #0
 17964 0010 03D0     		beq	.L34
 530:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 531:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 532:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_FLAG;
 17965              		.loc 1 532 0
 17966 0012 064B     		ldr	r3, .L36
 17967 0014 7A68     		ldr	r2, [r7, #4]
 17968 0016 5A60     		str	r2, [r3, #4]
 17969 0018 02E0     		b	.L33
 17970              	.L34:
 533:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 534:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 535:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 536:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 537:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_FLAG;
 17971              		.loc 1 537 0
 17972 001a 054B     		ldr	r3, .L36+4
 17973 001c 7A68     		ldr	r2, [r7, #4]
 17974 001e 5A60     		str	r2, [r3, #4]
 17975              	.L33:
 538:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 539:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 17976              		.loc 1 539 0
 17977 0020 07F10C07 		add	r7, r7, #12
 17978 0024 BD46     		mov	sp, r7
 17979 0026 80BC     		pop	{r7}
 17980 0028 7047     		bx	lr
 17981              	.L37:
 17982 002a 00BF     		.align	2
 17983              	.L36:
 17984 002c 00040240 		.word	1073873920
 17985 0030 00000240 		.word	1073872896
 17986              		.cfi_endproc
 17987              	.LFE37:
 17989              		.section	.text.DMA_GetITStatus,"ax",%progbits
 17990              		.align	2
 17991              		.global	DMA_GetITStatus
 17992              		.thumb
 17993              		.thumb_func
 17995              	DMA_GetITStatus:
 17996              	.LFB38:
 540:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 541:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 542:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx interrupt has occurred or not.
 543:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt source to check. 
 544:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 545:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 546:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 547:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 548:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 549:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 550:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 551:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 552:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 553:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 554:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 555:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 556:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 557:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 558:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 559:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 560:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 561:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 562:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 563:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 564:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 565:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 566:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 567:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 568:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 569:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 570:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 571:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 572:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 573:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 574:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 575:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 576:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 577:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 578:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 579:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 580:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 581:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 582:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 583:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 584:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 585:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 586:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 587:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 588:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 589:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 590:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 591:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 592:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 593:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_IT (SET or RESET).
 594:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 595:../StdPeripheralDriver/src/stm32f10x_dma.c **** ITStatus DMA_GetITStatus(uint32_t DMAy_IT)
 596:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 17997              		.loc 1 596 0
 17998              		.cfi_startproc
 17999              		@ args = 0, pretend = 0, frame = 16
 18000              		@ frame_needed = 1, uses_anonymous_args = 0
 18001              		@ link register save eliminated.
 18002 0000 80B4     		push	{r7}
 18003              	.LCFI27:
 18004              		.cfi_def_cfa_offset 4
 18005 0002 85B0     		sub	sp, sp, #20
 18006              	.LCFI28:
 18007              		.cfi_def_cfa_offset 24
 18008 0004 00AF     		add	r7, sp, #0
 18009              		.cfi_offset 7, -4
 18010              	.LCFI29:
 18011              		.cfi_def_cfa_register 7
 18012 0006 7860     		str	r0, [r7, #4]
 597:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ITStatus bitstatus = RESET;
 18013              		.loc 1 597 0
 18014 0008 4FF00003 		mov	r3, #0
 18015 000c FB73     		strb	r3, [r7, #15]
 598:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18016              		.loc 1 598 0
 18017 000e 4FF00003 		mov	r3, #0
 18018 0012 BB60     		str	r3, [r7, #8]
 599:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 600:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 601:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_IT(DMAy_IT));
 602:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 603:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMA */
 604:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 18019              		.loc 1 604 0
 18020 0014 7B68     		ldr	r3, [r7, #4]
 18021 0016 03F08053 		and	r3, r3, #268435456
 18022 001a 002B     		cmp	r3, #0
 18023 001c 03D0     		beq	.L39
 605:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 606:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 607:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR;
 18024              		.loc 1 607 0
 18025 001e 0D4B     		ldr	r3, .L43
 18026 0020 1B68     		ldr	r3, [r3, #0]
 18027 0022 BB60     		str	r3, [r7, #8]
 18028 0024 02E0     		b	.L40
 18029              	.L39:
 608:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 609:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 610:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 611:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 612:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR;
 18030              		.loc 1 612 0
 18031 0026 0C4B     		ldr	r3, .L43+4
 18032 0028 1B68     		ldr	r3, [r3, #0]
 18033 002a BB60     		str	r3, [r7, #8]
 18034              	.L40:
 613:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 614:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 615:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy interrupt */
 616:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_IT) != (uint32_t)RESET)
 18035              		.loc 1 616 0
 18036 002c BA68     		ldr	r2, [r7, #8]
 18037 002e 7B68     		ldr	r3, [r7, #4]
 18038 0030 02EA0303 		and	r3, r2, r3
 18039 0034 002B     		cmp	r3, #0
 18040 0036 03D0     		beq	.L41
 617:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 618:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_IT is set */
 619:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = SET;
 18041              		.loc 1 619 0
 18042 0038 4FF00103 		mov	r3, #1
 18043 003c FB73     		strb	r3, [r7, #15]
 18044 003e 02E0     		b	.L42
 18045              	.L41:
 620:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 621:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 622:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 623:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_IT is reset */
 624:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 18046              		.loc 1 624 0
 18047 0040 4FF00003 		mov	r3, #0
 18048 0044 FB73     		strb	r3, [r7, #15]
 18049              	.L42:
 625:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 626:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the DMA_IT status */
 627:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return  bitstatus;
 18050              		.loc 1 627 0
 18051 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 628:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18052              		.loc 1 628 0
 18053 0048 1846     		mov	r0, r3
 18054 004a 07F11407 		add	r7, r7, #20
 18055 004e BD46     		mov	sp, r7
 18056 0050 80BC     		pop	{r7}
 18057 0052 7047     		bx	lr
 18058              	.L44:
 18059              		.align	2
 18060              	.L43:
 18061 0054 00040240 		.word	1073873920
 18062 0058 00000240 		.word	1073872896
 18063              		.cfi_endproc
 18064              	.LFE38:
 18066              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 18067              		.align	2
 18068              		.global	DMA_ClearITPendingBit
 18069              		.thumb
 18070              		.thumb_func
 18072              	DMA_ClearITPendingBit:
 18073              	.LFB39:
 629:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 630:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 631:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's interrupt pending bits.
 632:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt pending bit to clear.
 633:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 634:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 635:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 636:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 637:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 638:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 639:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 640:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 641:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 642:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 643:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 644:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 645:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 646:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 647:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 648:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 649:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 650:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 651:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 652:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 653:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 654:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 655:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 656:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 657:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 658:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 659:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 660:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 661:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 662:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 663:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 664:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 665:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 666:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 667:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 668:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 669:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 670:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 671:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 672:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 673:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 674:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 675:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 676:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 677:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 678:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 679:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 680:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 681:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 682:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 683:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 684:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ClearITPendingBit(uint32_t DMAy_IT)
 685:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18074              		.loc 1 685 0
 18075              		.cfi_startproc
 18076              		@ args = 0, pretend = 0, frame = 8
 18077              		@ frame_needed = 1, uses_anonymous_args = 0
 18078              		@ link register save eliminated.
 18079 0000 80B4     		push	{r7}
 18080              	.LCFI30:
 18081              		.cfi_def_cfa_offset 4
 18082 0002 83B0     		sub	sp, sp, #12
 18083              	.LCFI31:
 18084              		.cfi_def_cfa_offset 16
 18085 0004 00AF     		add	r7, sp, #0
 18086              		.cfi_offset 7, -4
 18087              	.LCFI32:
 18088              		.cfi_def_cfa_register 7
 18089 0006 7860     		str	r0, [r7, #4]
 686:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 687:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMAy_IT));
 688:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 689:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 690:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 18090              		.loc 1 690 0
 18091 0008 7B68     		ldr	r3, [r7, #4]
 18092 000a 03F08053 		and	r3, r3, #268435456
 18093 000e 002B     		cmp	r3, #0
 18094 0010 03D0     		beq	.L46
 691:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 692:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 693:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_IT;
 18095              		.loc 1 693 0
 18096 0012 064B     		ldr	r3, .L48
 18097 0014 7A68     		ldr	r2, [r7, #4]
 18098 0016 5A60     		str	r2, [r3, #4]
 18099 0018 02E0     		b	.L45
 18100              	.L46:
 694:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 695:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 696:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 697:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 698:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_IT;
 18101              		.loc 1 698 0
 18102 001a 054B     		ldr	r3, .L48+4
 18103 001c 7A68     		ldr	r2, [r7, #4]
 18104 001e 5A60     		str	r2, [r3, #4]
 18105              	.L45:
 699:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 700:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18106              		.loc 1 700 0
 18107 0020 07F10C07 		add	r7, r7, #12
 18108 0024 BD46     		mov	sp, r7
 18109 0026 80BC     		pop	{r7}
 18110 0028 7047     		bx	lr
 18111              	.L49:
 18112 002a 00BF     		.align	2
 18113              	.L48:
 18114 002c 00040240 		.word	1073873920
 18115 0030 00000240 		.word	1073872896
 18116              		.cfi_endproc
 18117              	.LFE39:
 18119              		.text
 18120              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_dma.c
     /tmp/cc8RP9Eu.s:17270  .text.DMA_DeInit:00000000 $t
     /tmp/cc8RP9Eu.s:17275  .text.DMA_DeInit:00000000 DMA_DeInit
     /tmp/cc8RP9Eu.s:17479  .text.DMA_DeInit:00000148 $d
     /tmp/cc8RP9Eu.s:17497  .text.DMA_Init:00000000 $t
     /tmp/cc8RP9Eu.s:17502  .text.DMA_Init:00000000 DMA_Init
     /tmp/cc8RP9Eu.s:17598  .text.DMA_StructInit:00000000 $t
     /tmp/cc8RP9Eu.s:17603  .text.DMA_StructInit:00000000 DMA_StructInit
     /tmp/cc8RP9Eu.s:17674  .text.DMA_Cmd:00000000 $t
     /tmp/cc8RP9Eu.s:17679  .text.DMA_Cmd:00000000 DMA_Cmd
     /tmp/cc8RP9Eu.s:17728  .text.DMA_ITConfig:00000000 $t
     /tmp/cc8RP9Eu.s:17733  .text.DMA_ITConfig:00000000 DMA_ITConfig
     /tmp/cc8RP9Eu.s:17785  .text.DMA_SetCurrDataCounter:00000000 $t
     /tmp/cc8RP9Eu.s:17790  .text.DMA_SetCurrDataCounter:00000000 DMA_SetCurrDataCounter
     /tmp/cc8RP9Eu.s:17823  .text.DMA_GetCurrDataCounter:00000000 $t
     /tmp/cc8RP9Eu.s:17828  .text.DMA_GetCurrDataCounter:00000000 DMA_GetCurrDataCounter
     /tmp/cc8RP9Eu.s:17860  .text.DMA_GetFlagStatus:00000000 $t
     /tmp/cc8RP9Eu.s:17865  .text.DMA_GetFlagStatus:00000000 DMA_GetFlagStatus
     /tmp/cc8RP9Eu.s:17931  .text.DMA_GetFlagStatus:00000054 $d
     /tmp/cc8RP9Eu.s:17937  .text.DMA_ClearFlag:00000000 $t
     /tmp/cc8RP9Eu.s:17942  .text.DMA_ClearFlag:00000000 DMA_ClearFlag
     /tmp/cc8RP9Eu.s:17984  .text.DMA_ClearFlag:0000002c $d
     /tmp/cc8RP9Eu.s:17990  .text.DMA_GetITStatus:00000000 $t
     /tmp/cc8RP9Eu.s:17995  .text.DMA_GetITStatus:00000000 DMA_GetITStatus
     /tmp/cc8RP9Eu.s:18061  .text.DMA_GetITStatus:00000054 $d
     /tmp/cc8RP9Eu.s:18067  .text.DMA_ClearITPendingBit:00000000 $t
     /tmp/cc8RP9Eu.s:18072  .text.DMA_ClearITPendingBit:00000000 DMA_ClearITPendingBit
     /tmp/cc8RP9Eu.s:18114  .text.DMA_ClearITPendingBit:0000002c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
