   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_dma.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_dma.c"
 18011              		.align	2
 18012              		.global	DMA_DeInit
 18013              		.thumb
 18014              		.thumb_func
 18016              	DMA_DeInit:
 18017              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @file    stm32f10x_dma.c
   4:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief   This file provides all the DMA firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_dma.c **** #include "stm32f10x_dma.h"
  24:../StdPeripheralDriver/src/stm32f10x_dma.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA 
  31:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief DMA driver modules
  32:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */ 
  34:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */ 
  38:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  39:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  40:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  41:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  42:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Defines
  43:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  44:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  45:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  46:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA1 Channelx interrupt pending bit masks */
  48:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  49:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  50:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  51:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  52:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  53:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel6_IT_Mask    ((uint32_t)(DMA_ISR_GIF6 | DMA_ISR_TCIF6 | DMA_ISR_HTIF6 | DMA_ISR
  54:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel7_IT_Mask    ((uint32_t)(DMA_ISR_GIF7 | DMA_ISR_TCIF7 | DMA_ISR_HTIF7 | DMA_ISR
  55:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  56:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA2 Channelx interrupt pending bit masks */
  57:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  58:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  59:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  60:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  61:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  62:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA2 FLAG mask */
  64:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define FLAG_Mask                ((uint32_t)0x10000000)
  65:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  66:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA registers Masks */
  67:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define CCR_CLEAR_Mask           ((uint32_t)0xFFFF800F)
  68:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  69:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  70:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  71:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  72:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Macros
  74:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  75:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  76:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  78:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  79:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  80:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Variables
  82:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  83:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  86:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  87:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_FunctionPrototypes
  90:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  91:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  94:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  95:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  96:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Functions
  98:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  99:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 100:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 101:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 102:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Deinitializes the DMAy Channelx registers to their default reset
 103:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         values.
 104:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and
 105:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 106:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 107:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 108:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx)
 109:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18018              		.loc 1 109 0
 18019              		.cfi_startproc
 18020              		@ args = 0, pretend = 0, frame = 8
 18021              		@ frame_needed = 1, uses_anonymous_args = 0
 18022              		@ link register save eliminated.
 18023 0000 80B4     		push	{r7}
 18024              	.LCFI0:
 18025              		.cfi_def_cfa_offset 4
 18026 0002 83B0     		sub	sp, sp, #12
 18027              	.LCFI1:
 18028              		.cfi_def_cfa_offset 16
 18029 0004 00AF     		add	r7, sp, #0
 18030              		.cfi_offset 7, -4
 18031              	.LCFI2:
 18032              		.cfi_def_cfa_register 7
 18033 0006 7860     		str	r0, [r7, #4]
 110:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 111:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 112:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 113:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Disable the selected DMAy Channelx */
 114:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 18034              		.loc 1 114 0
 18035 0008 7B68     		ldr	r3, [r7, #4]
 18036 000a 1A68     		ldr	r2, [r3, #0]
 18037 000c 4FF6FE73 		movw	r3, #65534
 18038 0010 02EA0303 		and	r3, r2, r3
 18039 0014 7A68     		ldr	r2, [r7, #4]
 18040 0016 1360     		str	r3, [r2, #0]
 115:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 116:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx control register */
 117:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR  = 0;
 18041              		.loc 1 117 0
 18042 0018 7B68     		ldr	r3, [r7, #4]
 18043 001a 4FF00002 		mov	r2, #0
 18044 001e 1A60     		str	r2, [r3, #0]
 118:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 119:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx remaining bytes register */
 120:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = 0;
 18045              		.loc 1 120 0
 18046 0020 7B68     		ldr	r3, [r7, #4]
 18047 0022 4FF00002 		mov	r2, #0
 18048 0026 5A60     		str	r2, [r3, #4]
 121:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 122:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx peripheral address register */
 123:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR  = 0;
 18049              		.loc 1 123 0
 18050 0028 7B68     		ldr	r3, [r7, #4]
 18051 002a 4FF00002 		mov	r2, #0
 18052 002e 9A60     		str	r2, [r3, #8]
 124:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 125:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx memory address register */
 126:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = 0;
 18053              		.loc 1 126 0
 18054 0030 7B68     		ldr	r3, [r7, #4]
 18055 0032 4FF00002 		mov	r2, #0
 18056 0036 DA60     		str	r2, [r3, #12]
 127:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 128:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (DMAy_Channelx == DMA1_Channel1)
 18057              		.loc 1 128 0
 18058 0038 7A68     		ldr	r2, [r7, #4]
 18059 003a 434B     		ldr	r3, .L14
 18060 003c 9A42     		cmp	r2, r3
 18061 003e 06D1     		bne	.L2
 129:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 130:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel1 */
 131:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel1_IT_Mask;
 18062              		.loc 1 131 0
 18063 0040 424B     		ldr	r3, .L14+4
 18064 0042 424A     		ldr	r2, .L14+4
 18065 0044 5268     		ldr	r2, [r2, #4]
 18066 0046 42F00F02 		orr	r2, r2, #15
 18067 004a 5A60     		str	r2, [r3, #4]
 18068 004c 77E0     		b	.L1
 18069              	.L2:
 132:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 133:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel2)
 18070              		.loc 1 133 0
 18071 004e 7A68     		ldr	r2, [r7, #4]
 18072 0050 3F4B     		ldr	r3, .L14+8
 18073 0052 9A42     		cmp	r2, r3
 18074 0054 06D1     		bne	.L4
 134:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 135:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel2 */
 136:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel2_IT_Mask;
 18075              		.loc 1 136 0
 18076 0056 3D4B     		ldr	r3, .L14+4
 18077 0058 3C4A     		ldr	r2, .L14+4
 18078 005a 5268     		ldr	r2, [r2, #4]
 18079 005c 42F0F002 		orr	r2, r2, #240
 18080 0060 5A60     		str	r2, [r3, #4]
 18081 0062 6CE0     		b	.L1
 18082              	.L4:
 137:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 138:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel3)
 18083              		.loc 1 138 0
 18084 0064 7A68     		ldr	r2, [r7, #4]
 18085 0066 3B4B     		ldr	r3, .L14+12
 18086 0068 9A42     		cmp	r2, r3
 18087 006a 06D1     		bne	.L5
 139:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 140:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel3 */
 141:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel3_IT_Mask;
 18088              		.loc 1 141 0
 18089 006c 374B     		ldr	r3, .L14+4
 18090 006e 374A     		ldr	r2, .L14+4
 18091 0070 5268     		ldr	r2, [r2, #4]
 18092 0072 42F47062 		orr	r2, r2, #3840
 18093 0076 5A60     		str	r2, [r3, #4]
 18094 0078 61E0     		b	.L1
 18095              	.L5:
 142:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 143:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel4)
 18096              		.loc 1 143 0
 18097 007a 7A68     		ldr	r2, [r7, #4]
 18098 007c 364B     		ldr	r3, .L14+16
 18099 007e 9A42     		cmp	r2, r3
 18100 0080 06D1     		bne	.L6
 144:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 145:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel4 */
 146:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel4_IT_Mask;
 18101              		.loc 1 146 0
 18102 0082 324B     		ldr	r3, .L14+4
 18103 0084 314A     		ldr	r2, .L14+4
 18104 0086 5268     		ldr	r2, [r2, #4]
 18105 0088 42F47042 		orr	r2, r2, #61440
 18106 008c 5A60     		str	r2, [r3, #4]
 18107 008e 56E0     		b	.L1
 18108              	.L6:
 147:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 148:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel5)
 18109              		.loc 1 148 0
 18110 0090 7A68     		ldr	r2, [r7, #4]
 18111 0092 324B     		ldr	r3, .L14+20
 18112 0094 9A42     		cmp	r2, r3
 18113 0096 06D1     		bne	.L7
 149:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 150:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel5 */
 151:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel5_IT_Mask;
 18114              		.loc 1 151 0
 18115 0098 2C4B     		ldr	r3, .L14+4
 18116 009a 2C4A     		ldr	r2, .L14+4
 18117 009c 5268     		ldr	r2, [r2, #4]
 18118 009e 42F47022 		orr	r2, r2, #983040
 18119 00a2 5A60     		str	r2, [r3, #4]
 18120 00a4 4BE0     		b	.L1
 18121              	.L7:
 152:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 153:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel6)
 18122              		.loc 1 153 0
 18123 00a6 7A68     		ldr	r2, [r7, #4]
 18124 00a8 2D4B     		ldr	r3, .L14+24
 18125 00aa 9A42     		cmp	r2, r3
 18126 00ac 06D1     		bne	.L8
 154:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 155:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel6 */
 156:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel6_IT_Mask;
 18127              		.loc 1 156 0
 18128 00ae 274B     		ldr	r3, .L14+4
 18129 00b0 264A     		ldr	r2, .L14+4
 18130 00b2 5268     		ldr	r2, [r2, #4]
 18131 00b4 42F47002 		orr	r2, r2, #15728640
 18132 00b8 5A60     		str	r2, [r3, #4]
 18133 00ba 40E0     		b	.L1
 18134              	.L8:
 157:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 158:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel7)
 18135              		.loc 1 158 0
 18136 00bc 7A68     		ldr	r2, [r7, #4]
 18137 00be 294B     		ldr	r3, .L14+28
 18138 00c0 9A42     		cmp	r2, r3
 18139 00c2 06D1     		bne	.L9
 159:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 160:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel7 */
 161:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel7_IT_Mask;
 18140              		.loc 1 161 0
 18141 00c4 214B     		ldr	r3, .L14+4
 18142 00c6 214A     		ldr	r2, .L14+4
 18143 00c8 5268     		ldr	r2, [r2, #4]
 18144 00ca 42F07062 		orr	r2, r2, #251658240
 18145 00ce 5A60     		str	r2, [r3, #4]
 18146 00d0 35E0     		b	.L1
 18147              	.L9:
 162:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 163:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel1)
 18148              		.loc 1 163 0
 18149 00d2 7A68     		ldr	r2, [r7, #4]
 18150 00d4 244B     		ldr	r3, .L14+32
 18151 00d6 9A42     		cmp	r2, r3
 18152 00d8 06D1     		bne	.L10
 164:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 165:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel1 */
 166:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel1_IT_Mask;
 18153              		.loc 1 166 0
 18154 00da 244B     		ldr	r3, .L14+36
 18155 00dc 234A     		ldr	r2, .L14+36
 18156 00de 5268     		ldr	r2, [r2, #4]
 18157 00e0 42F00F02 		orr	r2, r2, #15
 18158 00e4 5A60     		str	r2, [r3, #4]
 18159 00e6 2AE0     		b	.L1
 18160              	.L10:
 167:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 168:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel2)
 18161              		.loc 1 168 0
 18162 00e8 7A68     		ldr	r2, [r7, #4]
 18163 00ea 214B     		ldr	r3, .L14+40
 18164 00ec 9A42     		cmp	r2, r3
 18165 00ee 06D1     		bne	.L11
 169:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 170:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel2 */
 171:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel2_IT_Mask;
 18166              		.loc 1 171 0
 18167 00f0 1E4B     		ldr	r3, .L14+36
 18168 00f2 1E4A     		ldr	r2, .L14+36
 18169 00f4 5268     		ldr	r2, [r2, #4]
 18170 00f6 42F0F002 		orr	r2, r2, #240
 18171 00fa 5A60     		str	r2, [r3, #4]
 18172 00fc 1FE0     		b	.L1
 18173              	.L11:
 172:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 173:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel3)
 18174              		.loc 1 173 0
 18175 00fe 7A68     		ldr	r2, [r7, #4]
 18176 0100 1C4B     		ldr	r3, .L14+44
 18177 0102 9A42     		cmp	r2, r3
 18178 0104 06D1     		bne	.L12
 174:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 175:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel3 */
 176:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel3_IT_Mask;
 18179              		.loc 1 176 0
 18180 0106 194B     		ldr	r3, .L14+36
 18181 0108 184A     		ldr	r2, .L14+36
 18182 010a 5268     		ldr	r2, [r2, #4]
 18183 010c 42F47062 		orr	r2, r2, #3840
 18184 0110 5A60     		str	r2, [r3, #4]
 18185 0112 14E0     		b	.L1
 18186              	.L12:
 177:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 178:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel4)
 18187              		.loc 1 178 0
 18188 0114 7A68     		ldr	r2, [r7, #4]
 18189 0116 184B     		ldr	r3, .L14+48
 18190 0118 9A42     		cmp	r2, r3
 18191 011a 06D1     		bne	.L13
 179:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 180:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel4 */
 181:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel4_IT_Mask;
 18192              		.loc 1 181 0
 18193 011c 134B     		ldr	r3, .L14+36
 18194 011e 134A     		ldr	r2, .L14+36
 18195 0120 5268     		ldr	r2, [r2, #4]
 18196 0122 42F47042 		orr	r2, r2, #61440
 18197 0126 5A60     		str	r2, [r3, #4]
 18198 0128 09E0     		b	.L1
 18199              	.L13:
 182:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 183:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 184:../StdPeripheralDriver/src/stm32f10x_dma.c ****   { 
 185:../StdPeripheralDriver/src/stm32f10x_dma.c ****     if (DMAy_Channelx == DMA2_Channel5)
 18200              		.loc 1 185 0
 18201 012a 7A68     		ldr	r2, [r7, #4]
 18202 012c 134B     		ldr	r3, .L14+52
 18203 012e 9A42     		cmp	r2, r3
 18204 0130 05D1     		bne	.L1
 186:../StdPeripheralDriver/src/stm32f10x_dma.c ****     {
 187:../StdPeripheralDriver/src/stm32f10x_dma.c ****       /* Reset interrupt pending bits for DMA2 Channel5 */
 188:../StdPeripheralDriver/src/stm32f10x_dma.c ****       DMA2->IFCR |= DMA2_Channel5_IT_Mask;
 18205              		.loc 1 188 0
 18206 0132 0E4B     		ldr	r3, .L14+36
 18207 0134 0D4A     		ldr	r2, .L14+36
 18208 0136 5268     		ldr	r2, [r2, #4]
 18209 0138 42F47022 		orr	r2, r2, #983040
 18210 013c 5A60     		str	r2, [r3, #4]
 18211              	.L1:
 189:../StdPeripheralDriver/src/stm32f10x_dma.c ****     }
 190:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 191:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18212              		.loc 1 191 0
 18213 013e 07F10C07 		add	r7, r7, #12
 18214 0142 BD46     		mov	sp, r7
 18215 0144 80BC     		pop	{r7}
 18216 0146 7047     		bx	lr
 18217              	.L15:
 18218              		.align	2
 18219              	.L14:
 18220 0148 08000240 		.word	1073872904
 18221 014c 00000240 		.word	1073872896
 18222 0150 1C000240 		.word	1073872924
 18223 0154 30000240 		.word	1073872944
 18224 0158 44000240 		.word	1073872964
 18225 015c 58000240 		.word	1073872984
 18226 0160 6C000240 		.word	1073873004
 18227 0164 80000240 		.word	1073873024
 18228 0168 08040240 		.word	1073873928
 18229 016c 00040240 		.word	1073873920
 18230 0170 1C040240 		.word	1073873948
 18231 0174 30040240 		.word	1073873968
 18232 0178 44040240 		.word	1073873988
 18233 017c 58040240 		.word	1073874008
 18234              		.cfi_endproc
 18235              	.LFE29:
 18237              		.section	.text.DMA_Init,"ax",%progbits
 18238              		.align	2
 18239              		.global	DMA_Init
 18240              		.thumb
 18241              		.thumb_func
 18243              	DMA_Init:
 18244              	.LFB30:
 192:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 193:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 194:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Initializes the DMAy Channelx according to the specified
 195:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         parameters in the DMA_InitStruct.
 196:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 197:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 198:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that
 199:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         contains the configuration information for the specified DMA Channel.
 200:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 201:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 202:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
 203:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18245              		.loc 1 203 0
 18246              		.cfi_startproc
 18247              		@ args = 0, pretend = 0, frame = 16
 18248              		@ frame_needed = 1, uses_anonymous_args = 0
 18249              		@ link register save eliminated.
 18250 0000 80B4     		push	{r7}
 18251              	.LCFI3:
 18252              		.cfi_def_cfa_offset 4
 18253 0002 85B0     		sub	sp, sp, #20
 18254              	.LCFI4:
 18255              		.cfi_def_cfa_offset 24
 18256 0004 00AF     		add	r7, sp, #0
 18257              		.cfi_offset 7, -4
 18258              	.LCFI5:
 18259              		.cfi_def_cfa_register 7
 18260 0006 7860     		str	r0, [r7, #4]
 18261 0008 3960     		str	r1, [r7, #0]
 204:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18262              		.loc 1 204 0
 18263 000a 4FF00003 		mov	r3, #0
 18264 000e FB60     		str	r3, [r7, #12]
 205:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 206:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 207:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 208:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_DIR(DMA_InitStruct->DMA_DIR));
 209:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 210:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 211:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));   
 212:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 213:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 214:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 215:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 216:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_M2M_STATE(DMA_InitStruct->DMA_M2M));
 217:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 218:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CCR Configuration -----------------*/
 219:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Get the DMAy_Channelx CCR value */
 220:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg = DMAy_Channelx->CCR;
 18265              		.loc 1 220 0
 18266 0010 7B68     		ldr	r3, [r7, #4]
 18267 0012 1B68     		ldr	r3, [r3, #0]
 18268 0014 FB60     		str	r3, [r7, #12]
 221:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Clear MEM2MEM, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 222:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg &= CCR_CLEAR_Mask;
 18269              		.loc 1 222 0
 18270 0016 FB68     		ldr	r3, [r7, #12]
 18271 0018 23F4FE43 		bic	r3, r3, #32512
 18272 001c 23F0F003 		bic	r3, r3, #240
 18273 0020 FB60     		str	r3, [r7, #12]
 223:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Configure DMAy Channelx: data transfer, data size, priority level and mode */
 224:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set DIR bit according to DMA_DIR value */
 225:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 226:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 227:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 228:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 229:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 230:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PL bits according to DMA_Priority value */
 231:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set the MEM2MEM bit according to DMA_M2M value */
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 18274              		.loc 1 232 0
 18275 0022 3B68     		ldr	r3, [r7, #0]
 18276 0024 9A68     		ldr	r2, [r3, #8]
 18277 0026 3B68     		ldr	r3, [r7, #0]
 18278 0028 1B6A     		ldr	r3, [r3, #32]
 18279 002a 1A43     		orrs	r2, r2, r3
 233:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 18280              		.loc 1 233 0
 18281 002c 3B68     		ldr	r3, [r7, #0]
 18282 002e 1B69     		ldr	r3, [r3, #16]
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 18283              		.loc 1 232 0
 18284 0030 1A43     		orrs	r2, r2, r3
 18285              		.loc 1 233 0
 18286 0032 3B68     		ldr	r3, [r7, #0]
 18287 0034 5B69     		ldr	r3, [r3, #20]
 18288 0036 1A43     		orrs	r2, r2, r3
 234:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 18289              		.loc 1 234 0
 18290 0038 3B68     		ldr	r3, [r7, #0]
 18291 003a 9B69     		ldr	r3, [r3, #24]
 233:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 18292              		.loc 1 233 0
 18293 003c 1A43     		orrs	r2, r2, r3
 18294              		.loc 1 234 0
 18295 003e 3B68     		ldr	r3, [r7, #0]
 18296 0040 DB69     		ldr	r3, [r3, #28]
 18297 0042 1A43     		orrs	r2, r2, r3
 235:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
 18298              		.loc 1 235 0
 18299 0044 3B68     		ldr	r3, [r7, #0]
 18300 0046 5B6A     		ldr	r3, [r3, #36]
 234:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 18301              		.loc 1 234 0
 18302 0048 1A43     		orrs	r2, r2, r3
 18303              		.loc 1 235 0
 18304 004a 3B68     		ldr	r3, [r7, #0]
 18305 004c 9B6A     		ldr	r3, [r3, #40]
 18306 004e 42EA0303 		orr	r3, r2, r3
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 18307              		.loc 1 232 0
 18308 0052 FA68     		ldr	r2, [r7, #12]
 18309 0054 42EA0303 		orr	r3, r2, r3
 18310 0058 FB60     		str	r3, [r7, #12]
 236:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 237:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CCR */
 238:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR = tmpreg;
 18311              		.loc 1 238 0
 18312 005a 7B68     		ldr	r3, [r7, #4]
 18313 005c FA68     		ldr	r2, [r7, #12]
 18314 005e 1A60     		str	r2, [r3, #0]
 239:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 240:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 241:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 242:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DMA_InitStruct->DMA_BufferSize;
 18315              		.loc 1 242 0
 18316 0060 3B68     		ldr	r3, [r7, #0]
 18317 0062 DA68     		ldr	r2, [r3, #12]
 18318 0064 7B68     		ldr	r3, [r7, #4]
 18319 0066 5A60     		str	r2, [r3, #4]
 243:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 244:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CPAR Configuration ----------------*/
 245:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CPAR */
 246:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 18320              		.loc 1 246 0
 18321 0068 3B68     		ldr	r3, [r7, #0]
 18322 006a 1A68     		ldr	r2, [r3, #0]
 18323 006c 7B68     		ldr	r3, [r7, #4]
 18324 006e 9A60     		str	r2, [r3, #8]
 247:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 248:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CMAR Configuration ----------------*/
 249:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CMAR */
 250:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = DMA_InitStruct->DMA_MemoryBaseAddr;
 18325              		.loc 1 250 0
 18326 0070 3B68     		ldr	r3, [r7, #0]
 18327 0072 5A68     		ldr	r2, [r3, #4]
 18328 0074 7B68     		ldr	r3, [r7, #4]
 18329 0076 DA60     		str	r2, [r3, #12]
 251:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18330              		.loc 1 251 0
 18331 0078 07F11407 		add	r7, r7, #20
 18332 007c BD46     		mov	sp, r7
 18333 007e 80BC     		pop	{r7}
 18334 0080 7047     		bx	lr
 18335              		.cfi_endproc
 18336              	.LFE30:
 18338 0082 00BF     		.section	.text.DMA_StructInit,"ax",%progbits
 18339              		.align	2
 18340              		.global	DMA_StructInit
 18341              		.thumb
 18342              		.thumb_func
 18344              	DMA_StructInit:
 18345              	.LFB31:
 252:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 253:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 254:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 255:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will
 256:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         be initialized.
 257:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 258:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 259:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 260:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18346              		.loc 1 260 0
 18347              		.cfi_startproc
 18348              		@ args = 0, pretend = 0, frame = 8
 18349              		@ frame_needed = 1, uses_anonymous_args = 0
 18350              		@ link register save eliminated.
 18351 0000 80B4     		push	{r7}
 18352              	.LCFI6:
 18353              		.cfi_def_cfa_offset 4
 18354 0002 83B0     		sub	sp, sp, #12
 18355              	.LCFI7:
 18356              		.cfi_def_cfa_offset 16
 18357 0004 00AF     		add	r7, sp, #0
 18358              		.cfi_offset 7, -4
 18359              	.LCFI8:
 18360              		.cfi_def_cfa_register 7
 18361 0006 7860     		str	r0, [r7, #4]
 261:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*-------------- Reset DMA init structure parameters values ------------------*/
 262:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 263:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 18362              		.loc 1 263 0
 18363 0008 7B68     		ldr	r3, [r7, #4]
 18364 000a 4FF00002 		mov	r2, #0
 18365 000e 1A60     		str	r2, [r3, #0]
 264:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryBaseAddr member */
 265:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryBaseAddr = 0;
 18366              		.loc 1 265 0
 18367 0010 7B68     		ldr	r3, [r7, #4]
 18368 0012 4FF00002 		mov	r2, #0
 18369 0016 5A60     		str	r2, [r3, #4]
 266:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_DIR member */
 267:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
 18370              		.loc 1 267 0
 18371 0018 7B68     		ldr	r3, [r7, #4]
 18372 001a 4FF00002 		mov	r2, #0
 18373 001e 9A60     		str	r2, [r3, #8]
 268:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_BufferSize member */
 269:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 18374              		.loc 1 269 0
 18375 0020 7B68     		ldr	r3, [r7, #4]
 18376 0022 4FF00002 		mov	r2, #0
 18377 0026 DA60     		str	r2, [r3, #12]
 270:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 271:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 18378              		.loc 1 271 0
 18379 0028 7B68     		ldr	r3, [r7, #4]
 18380 002a 4FF00002 		mov	r2, #0
 18381 002e 1A61     		str	r2, [r3, #16]
 272:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryInc member */
 273:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 18382              		.loc 1 273 0
 18383 0030 7B68     		ldr	r3, [r7, #4]
 18384 0032 4FF00002 		mov	r2, #0
 18385 0036 5A61     		str	r2, [r3, #20]
 274:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 275:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 18386              		.loc 1 275 0
 18387 0038 7B68     		ldr	r3, [r7, #4]
 18388 003a 4FF00002 		mov	r2, #0
 18389 003e 9A61     		str	r2, [r3, #24]
 276:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 277:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 18390              		.loc 1 277 0
 18391 0040 7B68     		ldr	r3, [r7, #4]
 18392 0042 4FF00002 		mov	r2, #0
 18393 0046 DA61     		str	r2, [r3, #28]
 278:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Mode member */
 279:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 18394              		.loc 1 279 0
 18395 0048 7B68     		ldr	r3, [r7, #4]
 18396 004a 4FF00002 		mov	r2, #0
 18397 004e 1A62     		str	r2, [r3, #32]
 280:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Priority member */
 281:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 18398              		.loc 1 281 0
 18399 0050 7B68     		ldr	r3, [r7, #4]
 18400 0052 4FF00002 		mov	r2, #0
 18401 0056 5A62     		str	r2, [r3, #36]
 282:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_M2M member */
 283:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
 18402              		.loc 1 283 0
 18403 0058 7B68     		ldr	r3, [r7, #4]
 18404 005a 4FF00002 		mov	r2, #0
 18405 005e 9A62     		str	r2, [r3, #40]
 284:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18406              		.loc 1 284 0
 18407 0060 07F10C07 		add	r7, r7, #12
 18408 0064 BD46     		mov	sp, r7
 18409 0066 80BC     		pop	{r7}
 18410 0068 7047     		bx	lr
 18411              		.cfi_endproc
 18412              	.LFE31:
 18414 006a 00BF     		.section	.text.DMA_Cmd,"ax",%progbits
 18415              		.align	2
 18416              		.global	DMA_Cmd
 18417              		.thumb
 18418              		.thumb_func
 18420              	DMA_Cmd:
 18421              	.LFB32:
 285:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 286:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 287:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx.
 288:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 289:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 290:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the DMAy Channelx. 
 291:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 292:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 293:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 294:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
 295:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18422              		.loc 1 295 0
 18423              		.cfi_startproc
 18424              		@ args = 0, pretend = 0, frame = 8
 18425              		@ frame_needed = 1, uses_anonymous_args = 0
 18426              		@ link register save eliminated.
 18427 0000 80B4     		push	{r7}
 18428              	.LCFI9:
 18429              		.cfi_def_cfa_offset 4
 18430 0002 83B0     		sub	sp, sp, #12
 18431              	.LCFI10:
 18432              		.cfi_def_cfa_offset 16
 18433 0004 00AF     		add	r7, sp, #0
 18434              		.cfi_offset 7, -4
 18435              	.LCFI11:
 18436              		.cfi_def_cfa_register 7
 18437 0006 7860     		str	r0, [r7, #4]
 18438 0008 0B46     		mov	r3, r1
 18439 000a FB70     		strb	r3, [r7, #3]
 296:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 297:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 298:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 299:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 300:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 18440              		.loc 1 300 0
 18441 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18442 000e 002B     		cmp	r3, #0
 18443 0010 06D0     		beq	.L19
 301:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 302:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Enable the selected DMAy Channelx */
 303:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_CCR1_EN;
 18444              		.loc 1 303 0
 18445 0012 7B68     		ldr	r3, [r7, #4]
 18446 0014 1B68     		ldr	r3, [r3, #0]
 18447 0016 43F00102 		orr	r2, r3, #1
 18448 001a 7B68     		ldr	r3, [r7, #4]
 18449 001c 1A60     		str	r2, [r3, #0]
 18450 001e 07E0     		b	.L18
 18451              	.L19:
 304:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 305:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 306:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 307:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Disable the selected DMAy Channelx */
 308:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 18452              		.loc 1 308 0
 18453 0020 7B68     		ldr	r3, [r7, #4]
 18454 0022 1A68     		ldr	r2, [r3, #0]
 18455 0024 4FF6FE73 		movw	r3, #65534
 18456 0028 02EA0303 		and	r3, r2, r3
 18457 002c 7A68     		ldr	r2, [r7, #4]
 18458 002e 1360     		str	r3, [r2, #0]
 18459              	.L18:
 309:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 310:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18460              		.loc 1 310 0
 18461 0030 07F10C07 		add	r7, r7, #12
 18462 0034 BD46     		mov	sp, r7
 18463 0036 80BC     		pop	{r7}
 18464 0038 7047     		bx	lr
 18465              		.cfi_endproc
 18466              	.LFE32:
 18468 003a 00BF     		.section	.text.DMA_ITConfig,"ax",%progbits
 18469              		.align	2
 18470              		.global	DMA_ITConfig
 18471              		.thumb
 18472              		.thumb_func
 18474              	DMA_ITConfig:
 18475              	.LFB33:
 311:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 312:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 313:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx interrupts.
 314:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 315:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 316:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_IT: specifies the DMA interrupts sources to be enabled
 317:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   or disabled. 
 318:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination of the following values:
 319:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TC:  Transfer complete interrupt mask
 320:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_HT:  Half transfer interrupt mask
 321:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TE:  Transfer error interrupt mask
 322:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
 323:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 324:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 325:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 326:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
 327:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18476              		.loc 1 327 0
 18477              		.cfi_startproc
 18478              		@ args = 0, pretend = 0, frame = 16
 18479              		@ frame_needed = 1, uses_anonymous_args = 0
 18480              		@ link register save eliminated.
 18481 0000 80B4     		push	{r7}
 18482              	.LCFI12:
 18483              		.cfi_def_cfa_offset 4
 18484 0002 85B0     		sub	sp, sp, #20
 18485              	.LCFI13:
 18486              		.cfi_def_cfa_offset 24
 18487 0004 00AF     		add	r7, sp, #0
 18488              		.cfi_offset 7, -4
 18489              	.LCFI14:
 18490              		.cfi_def_cfa_register 7
 18491 0006 F860     		str	r0, [r7, #12]
 18492 0008 B960     		str	r1, [r7, #8]
 18493 000a 1346     		mov	r3, r2
 18494 000c FB71     		strb	r3, [r7, #7]
 328:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 329:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 330:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 331:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 332:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 18495              		.loc 1 332 0
 18496 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18497 0010 002B     		cmp	r3, #0
 18498 0012 06D0     		beq	.L22
 333:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 334:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Enable the selected DMA interrupts */
 335:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_IT;
 18499              		.loc 1 335 0
 18500 0014 FB68     		ldr	r3, [r7, #12]
 18501 0016 1A68     		ldr	r2, [r3, #0]
 18502 0018 BB68     		ldr	r3, [r7, #8]
 18503 001a 1A43     		orrs	r2, r2, r3
 18504 001c FB68     		ldr	r3, [r7, #12]
 18505 001e 1A60     		str	r2, [r3, #0]
 18506 0020 07E0     		b	.L21
 18507              	.L22:
 336:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 337:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 338:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 339:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Disable the selected DMA interrupts */
 340:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= ~DMA_IT;
 18508              		.loc 1 340 0
 18509 0022 FB68     		ldr	r3, [r7, #12]
 18510 0024 1A68     		ldr	r2, [r3, #0]
 18511 0026 BB68     		ldr	r3, [r7, #8]
 18512 0028 6FEA0303 		mvn	r3, r3
 18513 002c 1A40     		ands	r2, r2, r3
 18514 002e FB68     		ldr	r3, [r7, #12]
 18515 0030 1A60     		str	r2, [r3, #0]
 18516              	.L21:
 341:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 342:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18517              		.loc 1 342 0
 18518 0032 07F11407 		add	r7, r7, #20
 18519 0036 BD46     		mov	sp, r7
 18520 0038 80BC     		pop	{r7}
 18521 003a 7047     		bx	lr
 18522              		.cfi_endproc
 18523              	.LFE33:
 18525              		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 18526              		.align	2
 18527              		.global	DMA_SetCurrDataCounter
 18528              		.thumb
 18529              		.thumb_func
 18531              	DMA_SetCurrDataCounter:
 18532              	.LFB34:
 343:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 344:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 345:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Sets the number of data units in the current DMAy Channelx transfer.
 346:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 347:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 348:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DataNumber: The number of data units in the current DMAy Channelx
 349:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         transfer.   
 350:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @note   This function can only be used when the DMAy_Channelx is disabled.                 
 351:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None.
 352:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 353:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_SetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx, uint16_t DataNumber)
 354:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18533              		.loc 1 354 0
 18534              		.cfi_startproc
 18535              		@ args = 0, pretend = 0, frame = 8
 18536              		@ frame_needed = 1, uses_anonymous_args = 0
 18537              		@ link register save eliminated.
 18538 0000 80B4     		push	{r7}
 18539              	.LCFI15:
 18540              		.cfi_def_cfa_offset 4
 18541 0002 83B0     		sub	sp, sp, #12
 18542              	.LCFI16:
 18543              		.cfi_def_cfa_offset 16
 18544 0004 00AF     		add	r7, sp, #0
 18545              		.cfi_offset 7, -4
 18546              	.LCFI17:
 18547              		.cfi_def_cfa_register 7
 18548 0006 7860     		str	r0, [r7, #4]
 18549 0008 0B46     		mov	r3, r1
 18550 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 355:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 356:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 357:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 358:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 359:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 360:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DataNumber;  
 18551              		.loc 1 360 0
 18552 000c 7A88     		ldrh	r2, [r7, #2]
 18553 000e 7B68     		ldr	r3, [r7, #4]
 18554 0010 5A60     		str	r2, [r3, #4]
 361:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18555              		.loc 1 361 0
 18556 0012 07F10C07 		add	r7, r7, #12
 18557 0016 BD46     		mov	sp, r7
 18558 0018 80BC     		pop	{r7}
 18559 001a 7047     		bx	lr
 18560              		.cfi_endproc
 18561              	.LFE34:
 18563              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 18564              		.align	2
 18565              		.global	DMA_GetCurrDataCounter
 18566              		.thumb
 18567              		.thumb_func
 18569              	DMA_GetCurrDataCounter:
 18570              	.LFB35:
 362:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 363:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 364:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Returns the number of remaining data units in the current
 365:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         DMAy Channelx transfer.
 366:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 367:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 368:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The number of remaining data units in the current DMAy Channelx
 369:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         transfer.
 370:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 371:../StdPeripheralDriver/src/stm32f10x_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx)
 372:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18571              		.loc 1 372 0
 18572              		.cfi_startproc
 18573              		@ args = 0, pretend = 0, frame = 8
 18574              		@ frame_needed = 1, uses_anonymous_args = 0
 18575              		@ link register save eliminated.
 18576 0000 80B4     		push	{r7}
 18577              	.LCFI18:
 18578              		.cfi_def_cfa_offset 4
 18579 0002 83B0     		sub	sp, sp, #12
 18580              	.LCFI19:
 18581              		.cfi_def_cfa_offset 16
 18582 0004 00AF     		add	r7, sp, #0
 18583              		.cfi_offset 7, -4
 18584              	.LCFI20:
 18585              		.cfi_def_cfa_register 7
 18586 0006 7860     		str	r0, [r7, #4]
 373:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 374:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 375:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the number of remaining data units for DMAy Channelx */
 376:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return ((uint16_t)(DMAy_Channelx->CNDTR));
 18587              		.loc 1 376 0
 18588 0008 7B68     		ldr	r3, [r7, #4]
 18589 000a 5B68     		ldr	r3, [r3, #4]
 18590 000c 9BB2     		uxth	r3, r3
 377:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18591              		.loc 1 377 0
 18592 000e 1846     		mov	r0, r3
 18593 0010 07F10C07 		add	r7, r7, #12
 18594 0014 BD46     		mov	sp, r7
 18595 0016 80BC     		pop	{r7}
 18596 0018 7047     		bx	lr
 18597              		.cfi_endproc
 18598              	.LFE35:
 18600 001a 00BF     		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 18601              		.align	2
 18602              		.global	DMA_GetFlagStatus
 18603              		.thumb
 18604              		.thumb_func
 18606              	DMA_GetFlagStatus:
 18607              	.LFB36:
 378:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 379:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 380:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx flag is set or not.
 381:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to check.
 382:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 383:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 384:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 385:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 386:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 387:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 388:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 389:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 390:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 391:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 392:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 393:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 394:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 395:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 396:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 397:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 398:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 399:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 400:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 401:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 402:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 403:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 404:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 405:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 406:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 407:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 408:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 409:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 410:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 411:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 412:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 413:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 414:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 415:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 416:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 417:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 418:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 419:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 420:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 421:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 422:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 423:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 424:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 425:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 426:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 427:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 428:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 429:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 430:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 431:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_FLAG (SET or RESET).
 432:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 433:../StdPeripheralDriver/src/stm32f10x_dma.c **** FlagStatus DMA_GetFlagStatus(uint32_t DMAy_FLAG)
 434:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18608              		.loc 1 434 0
 18609              		.cfi_startproc
 18610              		@ args = 0, pretend = 0, frame = 16
 18611              		@ frame_needed = 1, uses_anonymous_args = 0
 18612              		@ link register save eliminated.
 18613 0000 80B4     		push	{r7}
 18614              	.LCFI21:
 18615              		.cfi_def_cfa_offset 4
 18616 0002 85B0     		sub	sp, sp, #20
 18617              	.LCFI22:
 18618              		.cfi_def_cfa_offset 24
 18619 0004 00AF     		add	r7, sp, #0
 18620              		.cfi_offset 7, -4
 18621              	.LCFI23:
 18622              		.cfi_def_cfa_register 7
 18623 0006 7860     		str	r0, [r7, #4]
 435:../StdPeripheralDriver/src/stm32f10x_dma.c ****   FlagStatus bitstatus = RESET;
 18624              		.loc 1 435 0
 18625 0008 4FF00003 		mov	r3, #0
 18626 000c FB73     		strb	r3, [r7, #15]
 436:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18627              		.loc 1 436 0
 18628 000e 4FF00003 		mov	r3, #0
 18629 0012 BB60     		str	r3, [r7, #8]
 437:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 438:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 439:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMAy_FLAG));
 440:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 441:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 442:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 18630              		.loc 1 442 0
 18631 0014 7B68     		ldr	r3, [r7, #4]
 18632 0016 03F08053 		and	r3, r3, #268435456
 18633 001a 002B     		cmp	r3, #0
 18634 001c 03D0     		beq	.L27
 443:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 444:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 445:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR ;
 18635              		.loc 1 445 0
 18636 001e 0D4B     		ldr	r3, .L31
 18637 0020 1B68     		ldr	r3, [r3, #0]
 18638 0022 BB60     		str	r3, [r7, #8]
 18639 0024 02E0     		b	.L28
 18640              	.L27:
 446:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 447:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 448:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 449:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 450:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR ;
 18641              		.loc 1 450 0
 18642 0026 0C4B     		ldr	r3, .L31+4
 18643 0028 1B68     		ldr	r3, [r3, #0]
 18644 002a BB60     		str	r3, [r7, #8]
 18645              	.L28:
 451:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 452:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 453:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy flag */
 454:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_FLAG) != (uint32_t)RESET)
 18646              		.loc 1 454 0
 18647 002c BA68     		ldr	r2, [r7, #8]
 18648 002e 7B68     		ldr	r3, [r7, #4]
 18649 0030 02EA0303 		and	r3, r2, r3
 18650 0034 002B     		cmp	r3, #0
 18651 0036 03D0     		beq	.L29
 455:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 456:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is set */
 457:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = SET;
 18652              		.loc 1 457 0
 18653 0038 4FF00103 		mov	r3, #1
 18654 003c FB73     		strb	r3, [r7, #15]
 18655 003e 02E0     		b	.L30
 18656              	.L29:
 458:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 459:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 460:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 461:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is reset */
 462:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 18657              		.loc 1 462 0
 18658 0040 4FF00003 		mov	r3, #0
 18659 0044 FB73     		strb	r3, [r7, #15]
 18660              	.L30:
 463:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 464:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 465:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the DMAy_FLAG status */
 466:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return  bitstatus;
 18661              		.loc 1 466 0
 18662 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 467:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18663              		.loc 1 467 0
 18664 0048 1846     		mov	r0, r3
 18665 004a 07F11407 		add	r7, r7, #20
 18666 004e BD46     		mov	sp, r7
 18667 0050 80BC     		pop	{r7}
 18668 0052 7047     		bx	lr
 18669              	.L32:
 18670              		.align	2
 18671              	.L31:
 18672 0054 00040240 		.word	1073873920
 18673 0058 00000240 		.word	1073872896
 18674              		.cfi_endproc
 18675              	.LFE36:
 18677              		.section	.text.DMA_ClearFlag,"ax",%progbits
 18678              		.align	2
 18679              		.global	DMA_ClearFlag
 18680              		.thumb
 18681              		.thumb_func
 18683              	DMA_ClearFlag:
 18684              	.LFB37:
 468:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 469:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 470:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's pending flags.
 471:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to clear.
 472:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 473:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 474:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 475:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 476:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 477:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 478:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 479:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 480:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 481:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 482:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 483:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 484:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 485:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 486:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 487:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 488:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 489:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 490:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 491:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 492:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 493:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 494:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 495:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 496:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 497:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 498:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 499:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 500:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 501:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 502:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 503:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 504:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 505:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 506:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 507:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 508:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 509:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 510:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 511:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 512:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 513:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 514:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 515:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 516:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 517:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 518:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 519:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 520:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 521:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 522:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 523:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ClearFlag(uint32_t DMAy_FLAG)
 524:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18685              		.loc 1 524 0
 18686              		.cfi_startproc
 18687              		@ args = 0, pretend = 0, frame = 8
 18688              		@ frame_needed = 1, uses_anonymous_args = 0
 18689              		@ link register save eliminated.
 18690 0000 80B4     		push	{r7}
 18691              	.LCFI24:
 18692              		.cfi_def_cfa_offset 4
 18693 0002 83B0     		sub	sp, sp, #12
 18694              	.LCFI25:
 18695              		.cfi_def_cfa_offset 16
 18696 0004 00AF     		add	r7, sp, #0
 18697              		.cfi_offset 7, -4
 18698              	.LCFI26:
 18699              		.cfi_def_cfa_register 7
 18700 0006 7860     		str	r0, [r7, #4]
 525:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 526:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMAy_FLAG));
 527:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 528:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 529:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 18701              		.loc 1 529 0
 18702 0008 7B68     		ldr	r3, [r7, #4]
 18703 000a 03F08053 		and	r3, r3, #268435456
 18704 000e 002B     		cmp	r3, #0
 18705 0010 03D0     		beq	.L34
 530:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 531:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 532:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_FLAG;
 18706              		.loc 1 532 0
 18707 0012 064B     		ldr	r3, .L36
 18708 0014 7A68     		ldr	r2, [r7, #4]
 18709 0016 5A60     		str	r2, [r3, #4]
 18710 0018 02E0     		b	.L33
 18711              	.L34:
 533:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 534:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 535:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 536:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 537:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_FLAG;
 18712              		.loc 1 537 0
 18713 001a 054B     		ldr	r3, .L36+4
 18714 001c 7A68     		ldr	r2, [r7, #4]
 18715 001e 5A60     		str	r2, [r3, #4]
 18716              	.L33:
 538:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 539:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18717              		.loc 1 539 0
 18718 0020 07F10C07 		add	r7, r7, #12
 18719 0024 BD46     		mov	sp, r7
 18720 0026 80BC     		pop	{r7}
 18721 0028 7047     		bx	lr
 18722              	.L37:
 18723 002a 00BF     		.align	2
 18724              	.L36:
 18725 002c 00040240 		.word	1073873920
 18726 0030 00000240 		.word	1073872896
 18727              		.cfi_endproc
 18728              	.LFE37:
 18730              		.section	.text.DMA_GetITStatus,"ax",%progbits
 18731              		.align	2
 18732              		.global	DMA_GetITStatus
 18733              		.thumb
 18734              		.thumb_func
 18736              	DMA_GetITStatus:
 18737              	.LFB38:
 540:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 541:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 542:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx interrupt has occurred or not.
 543:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt source to check. 
 544:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 545:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 546:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 547:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 548:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 549:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 550:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 551:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 552:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 553:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 554:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 555:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 556:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 557:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 558:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 559:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 560:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 561:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 562:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 563:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 564:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 565:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 566:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 567:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 568:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 569:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 570:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 571:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 572:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 573:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 574:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 575:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 576:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 577:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 578:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 579:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 580:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 581:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 582:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 583:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 584:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 585:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 586:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 587:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 588:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 589:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 590:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 591:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 592:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 593:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_IT (SET or RESET).
 594:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 595:../StdPeripheralDriver/src/stm32f10x_dma.c **** ITStatus DMA_GetITStatus(uint32_t DMAy_IT)
 596:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18738              		.loc 1 596 0
 18739              		.cfi_startproc
 18740              		@ args = 0, pretend = 0, frame = 16
 18741              		@ frame_needed = 1, uses_anonymous_args = 0
 18742              		@ link register save eliminated.
 18743 0000 80B4     		push	{r7}
 18744              	.LCFI27:
 18745              		.cfi_def_cfa_offset 4
 18746 0002 85B0     		sub	sp, sp, #20
 18747              	.LCFI28:
 18748              		.cfi_def_cfa_offset 24
 18749 0004 00AF     		add	r7, sp, #0
 18750              		.cfi_offset 7, -4
 18751              	.LCFI29:
 18752              		.cfi_def_cfa_register 7
 18753 0006 7860     		str	r0, [r7, #4]
 597:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ITStatus bitstatus = RESET;
 18754              		.loc 1 597 0
 18755 0008 4FF00003 		mov	r3, #0
 18756 000c FB73     		strb	r3, [r7, #15]
 598:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18757              		.loc 1 598 0
 18758 000e 4FF00003 		mov	r3, #0
 18759 0012 BB60     		str	r3, [r7, #8]
 599:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 600:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 601:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_IT(DMAy_IT));
 602:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 603:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMA */
 604:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 18760              		.loc 1 604 0
 18761 0014 7B68     		ldr	r3, [r7, #4]
 18762 0016 03F08053 		and	r3, r3, #268435456
 18763 001a 002B     		cmp	r3, #0
 18764 001c 03D0     		beq	.L39
 605:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 606:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 607:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR;
 18765              		.loc 1 607 0
 18766 001e 0D4B     		ldr	r3, .L43
 18767 0020 1B68     		ldr	r3, [r3, #0]
 18768 0022 BB60     		str	r3, [r7, #8]
 18769 0024 02E0     		b	.L40
 18770              	.L39:
 608:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 609:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 610:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 611:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 612:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR;
 18771              		.loc 1 612 0
 18772 0026 0C4B     		ldr	r3, .L43+4
 18773 0028 1B68     		ldr	r3, [r3, #0]
 18774 002a BB60     		str	r3, [r7, #8]
 18775              	.L40:
 613:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 614:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 615:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy interrupt */
 616:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_IT) != (uint32_t)RESET)
 18776              		.loc 1 616 0
 18777 002c BA68     		ldr	r2, [r7, #8]
 18778 002e 7B68     		ldr	r3, [r7, #4]
 18779 0030 02EA0303 		and	r3, r2, r3
 18780 0034 002B     		cmp	r3, #0
 18781 0036 03D0     		beq	.L41
 617:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 618:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_IT is set */
 619:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = SET;
 18782              		.loc 1 619 0
 18783 0038 4FF00103 		mov	r3, #1
 18784 003c FB73     		strb	r3, [r7, #15]
 18785 003e 02E0     		b	.L42
 18786              	.L41:
 620:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 621:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 622:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 623:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_IT is reset */
 624:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 18787              		.loc 1 624 0
 18788 0040 4FF00003 		mov	r3, #0
 18789 0044 FB73     		strb	r3, [r7, #15]
 18790              	.L42:
 625:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 626:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the DMA_IT status */
 627:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return  bitstatus;
 18791              		.loc 1 627 0
 18792 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 628:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18793              		.loc 1 628 0
 18794 0048 1846     		mov	r0, r3
 18795 004a 07F11407 		add	r7, r7, #20
 18796 004e BD46     		mov	sp, r7
 18797 0050 80BC     		pop	{r7}
 18798 0052 7047     		bx	lr
 18799              	.L44:
 18800              		.align	2
 18801              	.L43:
 18802 0054 00040240 		.word	1073873920
 18803 0058 00000240 		.word	1073872896
 18804              		.cfi_endproc
 18805              	.LFE38:
 18807              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 18808              		.align	2
 18809              		.global	DMA_ClearITPendingBit
 18810              		.thumb
 18811              		.thumb_func
 18813              	DMA_ClearITPendingBit:
 18814              	.LFB39:
 629:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 630:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 631:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's interrupt pending bits.
 632:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt pending bit to clear.
 633:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 634:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 635:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 636:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 637:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 638:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 639:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 640:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 641:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 642:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 643:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 644:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 645:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 646:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 647:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 648:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 649:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 650:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 651:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 652:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 653:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 654:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 655:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 656:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 657:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 658:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 659:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 660:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 661:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 662:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 663:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 664:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 665:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 666:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 667:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 668:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 669:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 670:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 671:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 672:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 673:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 674:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 675:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 676:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 677:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 678:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 679:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 680:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 681:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 682:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 683:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 684:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ClearITPendingBit(uint32_t DMAy_IT)
 685:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18815              		.loc 1 685 0
 18816              		.cfi_startproc
 18817              		@ args = 0, pretend = 0, frame = 8
 18818              		@ frame_needed = 1, uses_anonymous_args = 0
 18819              		@ link register save eliminated.
 18820 0000 80B4     		push	{r7}
 18821              	.LCFI30:
 18822              		.cfi_def_cfa_offset 4
 18823 0002 83B0     		sub	sp, sp, #12
 18824              	.LCFI31:
 18825              		.cfi_def_cfa_offset 16
 18826 0004 00AF     		add	r7, sp, #0
 18827              		.cfi_offset 7, -4
 18828              	.LCFI32:
 18829              		.cfi_def_cfa_register 7
 18830 0006 7860     		str	r0, [r7, #4]
 686:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 687:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMAy_IT));
 688:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 689:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 690:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 18831              		.loc 1 690 0
 18832 0008 7B68     		ldr	r3, [r7, #4]
 18833 000a 03F08053 		and	r3, r3, #268435456
 18834 000e 002B     		cmp	r3, #0
 18835 0010 03D0     		beq	.L46
 691:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 692:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 693:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_IT;
 18836              		.loc 1 693 0
 18837 0012 064B     		ldr	r3, .L48
 18838 0014 7A68     		ldr	r2, [r7, #4]
 18839 0016 5A60     		str	r2, [r3, #4]
 18840 0018 02E0     		b	.L45
 18841              	.L46:
 694:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 695:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 696:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 697:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 698:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_IT;
 18842              		.loc 1 698 0
 18843 001a 054B     		ldr	r3, .L48+4
 18844 001c 7A68     		ldr	r2, [r7, #4]
 18845 001e 5A60     		str	r2, [r3, #4]
 18846              	.L45:
 699:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 700:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18847              		.loc 1 700 0
 18848 0020 07F10C07 		add	r7, r7, #12
 18849 0024 BD46     		mov	sp, r7
 18850 0026 80BC     		pop	{r7}
 18851 0028 7047     		bx	lr
 18852              	.L49:
 18853 002a 00BF     		.align	2
 18854              	.L48:
 18855 002c 00040240 		.word	1073873920
 18856 0030 00000240 		.word	1073872896
 18857              		.cfi_endproc
 18858              	.LFE39:
 18860              		.text
 18861              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_dma.c
     /tmp/ccdOscAN.s:18011  .text.DMA_DeInit:00000000 $t
     /tmp/ccdOscAN.s:18016  .text.DMA_DeInit:00000000 DMA_DeInit
     /tmp/ccdOscAN.s:18220  .text.DMA_DeInit:00000148 $d
     /tmp/ccdOscAN.s:18238  .text.DMA_Init:00000000 $t
     /tmp/ccdOscAN.s:18243  .text.DMA_Init:00000000 DMA_Init
     /tmp/ccdOscAN.s:18339  .text.DMA_StructInit:00000000 $t
     /tmp/ccdOscAN.s:18344  .text.DMA_StructInit:00000000 DMA_StructInit
     /tmp/ccdOscAN.s:18415  .text.DMA_Cmd:00000000 $t
     /tmp/ccdOscAN.s:18420  .text.DMA_Cmd:00000000 DMA_Cmd
     /tmp/ccdOscAN.s:18469  .text.DMA_ITConfig:00000000 $t
     /tmp/ccdOscAN.s:18474  .text.DMA_ITConfig:00000000 DMA_ITConfig
     /tmp/ccdOscAN.s:18526  .text.DMA_SetCurrDataCounter:00000000 $t
     /tmp/ccdOscAN.s:18531  .text.DMA_SetCurrDataCounter:00000000 DMA_SetCurrDataCounter
     /tmp/ccdOscAN.s:18564  .text.DMA_GetCurrDataCounter:00000000 $t
     /tmp/ccdOscAN.s:18569  .text.DMA_GetCurrDataCounter:00000000 DMA_GetCurrDataCounter
     /tmp/ccdOscAN.s:18601  .text.DMA_GetFlagStatus:00000000 $t
     /tmp/ccdOscAN.s:18606  .text.DMA_GetFlagStatus:00000000 DMA_GetFlagStatus
     /tmp/ccdOscAN.s:18672  .text.DMA_GetFlagStatus:00000054 $d
     /tmp/ccdOscAN.s:18678  .text.DMA_ClearFlag:00000000 $t
     /tmp/ccdOscAN.s:18683  .text.DMA_ClearFlag:00000000 DMA_ClearFlag
     /tmp/ccdOscAN.s:18725  .text.DMA_ClearFlag:0000002c $d
     /tmp/ccdOscAN.s:18731  .text.DMA_GetITStatus:00000000 $t
     /tmp/ccdOscAN.s:18736  .text.DMA_GetITStatus:00000000 DMA_GetITStatus
     /tmp/ccdOscAN.s:18802  .text.DMA_GetITStatus:00000054 $d
     /tmp/ccdOscAN.s:18808  .text.DMA_ClearITPendingBit:00000000 $t
     /tmp/ccdOscAN.s:18813  .text.DMA_ClearITPendingBit:00000000 DMA_ClearITPendingBit
     /tmp/ccdOscAN.s:18855  .text.DMA_ClearITPendingBit:0000002c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
