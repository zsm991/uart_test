   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_rtc.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_rtc.c"
 17528              		.align	2
 17529              		.global	RTC_ITConfig
 17530              		.thumb
 17531              		.thumb_func
 17533              	RTC_ITConfig:
 17534              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @file    stm32f10x_rtc.c
   4:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief   This file provides all the RTC firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_rtc.c **** #include "stm32f10x_rtc.h"
  24:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  25:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  27:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  28:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  29:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC 
  30:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief RTC driver modules
  31:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  32:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  33:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  34:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_TypesDefinitions
  35:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  36:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */ 
  37:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
  38:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @}
  39:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  40:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  41:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Defines
  42:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  43:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  44:../StdPeripheralDriver/src/stm32f10x_rtc.c **** #define RTC_LSB_MASK     ((uint32_t)0x0000FFFF)  /*!< RTC LSB Mask */
  45:../StdPeripheralDriver/src/stm32f10x_rtc.c **** #define PRLH_MSB_MASK    ((uint32_t)0x000F0000)  /*!< RTC Prescaler MSB Mask */
  46:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
  48:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @}
  49:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  50:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  51:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Macros
  52:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  53:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  54:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  55:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
  56:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @}
  57:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  58:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  59:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Variables
  60:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  61:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  62:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
  64:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @}
  65:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  66:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  67:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_FunctionPrototypes
  68:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  69:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  70:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  71:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
  72:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @}
  73:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  74:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  75:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Functions
  76:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @{
  77:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  78:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
  79:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
  80:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
  81:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to be enabled or disabled.
  82:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
  83:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
  84:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
  85:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
  86:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
  87:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.
  88:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
  89:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
  90:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)
  91:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17535              		.loc 1 91 0
 17536              		.cfi_startproc
 17537              		@ args = 0, pretend = 0, frame = 8
 17538              		@ frame_needed = 1, uses_anonymous_args = 0
 17539              		@ link register save eliminated.
 17540 0000 80B4     		push	{r7}
 17541              	.LCFI0:
 17542              		.cfi_def_cfa_offset 4
 17543 0002 83B0     		sub	sp, sp, #12
 17544              	.LCFI1:
 17545              		.cfi_def_cfa_offset 16
 17546 0004 00AF     		add	r7, sp, #0
 17547              		.cfi_offset 7, -4
 17548              	.LCFI2:
 17549              		.cfi_def_cfa_register 7
 17550 0006 0246     		mov	r2, r0
 17551 0008 0B46     		mov	r3, r1
 17552 000a FA80     		strh	r2, [r7, #6]	@ movhi
 17553 000c 7B71     		strb	r3, [r7, #5]
  92:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Check the parameters */
  93:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
  94:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  95:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   
  96:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
 17554              		.loc 1 96 0
 17555 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 17556 0010 002B     		cmp	r3, #0
 17557 0012 09D0     		beq	.L2
  97:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
  98:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     RTC->CRH |= RTC_IT;
 17558              		.loc 1 98 0
 17559 0014 0D4B     		ldr	r3, .L4
 17560 0016 0D4A     		ldr	r2, .L4
 17561 0018 1288     		ldrh	r2, [r2, #0]	@ movhi
 17562 001a 91B2     		uxth	r1, r2
 17563 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 17564 001e 41EA0202 		orr	r2, r1, r2
 17565 0022 92B2     		uxth	r2, r2
 17566 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 17567 0026 0BE0     		b	.L1
 17568              	.L2:
  99:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 100:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   else
 101:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 102:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     RTC->CRH &= (uint16_t)~RTC_IT;
 17569              		.loc 1 102 0
 17570 0028 084B     		ldr	r3, .L4
 17571 002a 084A     		ldr	r2, .L4
 17572 002c 1288     		ldrh	r2, [r2, #0]	@ movhi
 17573 002e 91B2     		uxth	r1, r2
 17574 0030 FA88     		ldrh	r2, [r7, #6]	@ movhi
 17575 0032 6FEA0202 		mvn	r2, r2
 17576 0036 92B2     		uxth	r2, r2
 17577 0038 01EA0202 		and	r2, r1, r2
 17578 003c 92B2     		uxth	r2, r2
 17579 003e 1A80     		strh	r2, [r3, #0]	@ movhi
 17580              	.L1:
 103:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 104:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17581              		.loc 1 104 0
 17582 0040 07F10C07 		add	r7, r7, #12
 17583 0044 BD46     		mov	sp, r7
 17584 0046 80BC     		pop	{r7}
 17585 0048 7047     		bx	lr
 17586              	.L5:
 17587 004a 00BF     		.align	2
 17588              	.L4:
 17589 004c 00280040 		.word	1073752064
 17590              		.cfi_endproc
 17591              	.LFE29:
 17593              		.section	.text.RTC_EnterConfigMode,"ax",%progbits
 17594              		.align	2
 17595              		.global	RTC_EnterConfigMode
 17596              		.thumb
 17597              		.thumb_func
 17599              	RTC_EnterConfigMode:
 17600              	.LFB30:
 105:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 106:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 107:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Enters the RTC configuration mode.
 108:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  None
 109:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 110:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 111:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_EnterConfigMode(void)
 112:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17601              		.loc 1 112 0
 17602              		.cfi_startproc
 17603              		@ args = 0, pretend = 0, frame = 0
 17604              		@ frame_needed = 1, uses_anonymous_args = 0
 17605              		@ link register save eliminated.
 17606 0000 80B4     		push	{r7}
 17607              	.LCFI3:
 17608              		.cfi_def_cfa_offset 4
 17609 0002 00AF     		add	r7, sp, #0
 17610              		.cfi_offset 7, -4
 17611              	.LCFI4:
 17612              		.cfi_def_cfa_register 7
 113:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set the CNF flag to enter in the Configuration Mode */
 114:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CRL |= RTC_CRL_CNF;
 17613              		.loc 1 114 0
 17614 0004 054B     		ldr	r3, .L7
 17615 0006 054A     		ldr	r2, .L7
 17616 0008 9288     		ldrh	r2, [r2, #4]	@ movhi
 17617 000a 92B2     		uxth	r2, r2
 17618 000c 42F01002 		orr	r2, r2, #16
 17619 0010 92B2     		uxth	r2, r2
 17620 0012 9A80     		strh	r2, [r3, #4]	@ movhi
 115:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17621              		.loc 1 115 0
 17622 0014 BD46     		mov	sp, r7
 17623 0016 80BC     		pop	{r7}
 17624 0018 7047     		bx	lr
 17625              	.L8:
 17626 001a 00BF     		.align	2
 17627              	.L7:
 17628 001c 00280040 		.word	1073752064
 17629              		.cfi_endproc
 17630              	.LFE30:
 17632              		.section	.text.RTC_ExitConfigMode,"ax",%progbits
 17633              		.align	2
 17634              		.global	RTC_ExitConfigMode
 17635              		.thumb
 17636              		.thumb_func
 17638              	RTC_ExitConfigMode:
 17639              	.LFB31:
 116:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 117:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 118:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Exits from the RTC configuration mode.
 119:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  None
 120:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 121:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 122:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_ExitConfigMode(void)
 123:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17640              		.loc 1 123 0
 17641              		.cfi_startproc
 17642              		@ args = 0, pretend = 0, frame = 0
 17643              		@ frame_needed = 1, uses_anonymous_args = 0
 17644              		@ link register save eliminated.
 17645 0000 80B4     		push	{r7}
 17646              	.LCFI5:
 17647              		.cfi_def_cfa_offset 4
 17648 0002 00AF     		add	r7, sp, #0
 17649              		.cfi_offset 7, -4
 17650              	.LCFI6:
 17651              		.cfi_def_cfa_register 7
 124:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Reset the CNF flag to exit from the Configuration Mode */
 125:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~((uint16_t)RTC_CRL_CNF); 
 17652              		.loc 1 125 0
 17653 0004 054B     		ldr	r3, .L10
 17654 0006 054A     		ldr	r2, .L10
 17655 0008 9288     		ldrh	r2, [r2, #4]	@ movhi
 17656 000a 92B2     		uxth	r2, r2
 17657 000c 22F01002 		bic	r2, r2, #16
 17658 0010 92B2     		uxth	r2, r2
 17659 0012 9A80     		strh	r2, [r3, #4]	@ movhi
 126:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17660              		.loc 1 126 0
 17661 0014 BD46     		mov	sp, r7
 17662 0016 80BC     		pop	{r7}
 17663 0018 7047     		bx	lr
 17664              	.L11:
 17665 001a 00BF     		.align	2
 17666              	.L10:
 17667 001c 00280040 		.word	1073752064
 17668              		.cfi_endproc
 17669              	.LFE31:
 17671              		.section	.text.RTC_GetCounter,"ax",%progbits
 17672              		.align	2
 17673              		.global	RTC_GetCounter
 17674              		.thumb
 17675              		.thumb_func
 17677              	RTC_GetCounter:
 17678              	.LFB32:
 127:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 128:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 129:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC counter value.
 130:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  None
 131:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval RTC counter value.
 132:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 133:../StdPeripheralDriver/src/stm32f10x_rtc.c **** uint32_t RTC_GetCounter(void)
 134:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17679              		.loc 1 134 0
 17680              		.cfi_startproc
 17681              		@ args = 0, pretend = 0, frame = 8
 17682              		@ frame_needed = 1, uses_anonymous_args = 0
 17683              		@ link register save eliminated.
 17684 0000 80B4     		push	{r7}
 17685              	.LCFI7:
 17686              		.cfi_def_cfa_offset 4
 17687 0002 83B0     		sub	sp, sp, #12
 17688              	.LCFI8:
 17689              		.cfi_def_cfa_offset 16
 17690 0004 00AF     		add	r7, sp, #0
 17691              		.cfi_offset 7, -4
 17692              	.LCFI9:
 17693              		.cfi_def_cfa_register 7
 135:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   uint16_t tmp = 0;
 17694              		.loc 1 135 0
 17695 0006 4FF00003 		mov	r3, #0
 17696 000a FB80     		strh	r3, [r7, #6]	@ movhi
 136:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   tmp = RTC->CNTL;
 17697              		.loc 1 136 0
 17698 000c 084B     		ldr	r3, .L13
 17699 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 17700 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 137:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   return (((uint32_t)RTC->CNTH << 16 ) | tmp) ;
 17701              		.loc 1 137 0
 17702 0012 074B     		ldr	r3, .L13
 17703 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 17704 0016 9BB2     		uxth	r3, r3
 17705 0018 4FEA0342 		lsl	r2, r3, #16
 17706 001c FB88     		ldrh	r3, [r7, #6]
 17707 001e 42EA0303 		orr	r3, r2, r3
 138:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17708              		.loc 1 138 0
 17709 0022 1846     		mov	r0, r3
 17710 0024 07F10C07 		add	r7, r7, #12
 17711 0028 BD46     		mov	sp, r7
 17712 002a 80BC     		pop	{r7}
 17713 002c 7047     		bx	lr
 17714              	.L14:
 17715 002e 00BF     		.align	2
 17716              	.L13:
 17717 0030 00280040 		.word	1073752064
 17718              		.cfi_endproc
 17719              	.LFE32:
 17721              		.section	.text.RTC_SetCounter,"ax",%progbits
 17722              		.align	2
 17723              		.global	RTC_SetCounter
 17724              		.thumb
 17725              		.thumb_func
 17727              	RTC_SetCounter:
 17728              	.LFB33:
 139:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 140:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 141:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC counter value.
 142:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  CounterValue: RTC counter new value.
 143:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 144:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 145:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_SetCounter(uint32_t CounterValue)
 146:../StdPeripheralDriver/src/stm32f10x_rtc.c **** { 
 17729              		.loc 1 146 0
 17730              		.cfi_startproc
 17731              		@ args = 0, pretend = 0, frame = 8
 17732              		@ frame_needed = 1, uses_anonymous_args = 0
 17733 0000 80B5     		push	{r7, lr}
 17734              	.LCFI10:
 17735              		.cfi_def_cfa_offset 8
 17736 0002 82B0     		sub	sp, sp, #8
 17737              	.LCFI11:
 17738              		.cfi_def_cfa_offset 16
 17739 0004 00AF     		add	r7, sp, #0
 17740              		.cfi_offset 14, -4
 17741              		.cfi_offset 7, -8
 17742              	.LCFI12:
 17743              		.cfi_def_cfa_register 7
 17744 0006 7860     		str	r0, [r7, #4]
 147:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 17745              		.loc 1 147 0
 17746 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 148:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER MSB word */
 149:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 17747              		.loc 1 149 0
 17748 000c 074B     		ldr	r3, .L16
 17749 000e 7A68     		ldr	r2, [r7, #4]
 17750 0010 4FEA1242 		lsr	r2, r2, #16
 17751 0014 92B2     		uxth	r2, r2
 17752 0016 1A83     		strh	r2, [r3, #24]	@ movhi
 150:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER LSB word */
 151:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CNTL = (CounterValue & RTC_LSB_MASK);
 17753              		.loc 1 151 0
 17754 0018 044B     		ldr	r3, .L16
 17755 001a 7A68     		ldr	r2, [r7, #4]
 17756 001c 92B2     		uxth	r2, r2
 17757 001e 9A83     		strh	r2, [r3, #28]	@ movhi
 152:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 17758              		.loc 1 152 0
 17759 0020 FFF7FEFF 		bl	RTC_ExitConfigMode
 153:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17760              		.loc 1 153 0
 17761 0024 07F10807 		add	r7, r7, #8
 17762 0028 BD46     		mov	sp, r7
 17763 002a 80BD     		pop	{r7, pc}
 17764              	.L17:
 17765              		.align	2
 17766              	.L16:
 17767 002c 00280040 		.word	1073752064
 17768              		.cfi_endproc
 17769              	.LFE33:
 17771              		.section	.text.RTC_SetPrescaler,"ax",%progbits
 17772              		.align	2
 17773              		.global	RTC_SetPrescaler
 17774              		.thumb
 17775              		.thumb_func
 17777              	RTC_SetPrescaler:
 17778              	.LFB34:
 154:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 155:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 156:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC prescaler value.
 157:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  PrescalerValue: RTC prescaler new value.
 158:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 159:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 160:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_SetPrescaler(uint32_t PrescalerValue)
 161:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17779              		.loc 1 161 0
 17780              		.cfi_startproc
 17781              		@ args = 0, pretend = 0, frame = 8
 17782              		@ frame_needed = 1, uses_anonymous_args = 0
 17783 0000 80B5     		push	{r7, lr}
 17784              	.LCFI13:
 17785              		.cfi_def_cfa_offset 8
 17786 0002 82B0     		sub	sp, sp, #8
 17787              	.LCFI14:
 17788              		.cfi_def_cfa_offset 16
 17789 0004 00AF     		add	r7, sp, #0
 17790              		.cfi_offset 14, -4
 17791              		.cfi_offset 7, -8
 17792              	.LCFI15:
 17793              		.cfi_def_cfa_register 7
 17794 0006 7860     		str	r0, [r7, #4]
 162:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 163:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_PRESCALER(PrescalerValue));
 164:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   
 165:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 17795              		.loc 1 165 0
 17796 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 166:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER MSB word */
 167:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 17797              		.loc 1 167 0
 17798 000c 084B     		ldr	r3, .L19
 17799 000e 7A68     		ldr	r2, [r7, #4]
 17800 0010 02F47022 		and	r2, r2, #983040
 17801 0014 4FEA1242 		lsr	r2, r2, #16
 17802 0018 92B2     		uxth	r2, r2
 17803 001a 1A81     		strh	r2, [r3, #8]	@ movhi
 168:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER LSB word */
 169:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->PRLL = (PrescalerValue & RTC_LSB_MASK);
 17804              		.loc 1 169 0
 17805 001c 044B     		ldr	r3, .L19
 17806 001e 7A68     		ldr	r2, [r7, #4]
 17807 0020 92B2     		uxth	r2, r2
 17808 0022 9A81     		strh	r2, [r3, #12]	@ movhi
 170:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 17809              		.loc 1 170 0
 17810 0024 FFF7FEFF 		bl	RTC_ExitConfigMode
 171:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17811              		.loc 1 171 0
 17812 0028 07F10807 		add	r7, r7, #8
 17813 002c BD46     		mov	sp, r7
 17814 002e 80BD     		pop	{r7, pc}
 17815              	.L20:
 17816              		.align	2
 17817              	.L19:
 17818 0030 00280040 		.word	1073752064
 17819              		.cfi_endproc
 17820              	.LFE34:
 17822              		.section	.text.RTC_SetAlarm,"ax",%progbits
 17823              		.align	2
 17824              		.global	RTC_SetAlarm
 17825              		.thumb
 17826              		.thumb_func
 17828              	RTC_SetAlarm:
 17829              	.LFB35:
 172:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 173:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 174:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC alarm value.
 175:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  AlarmValue: RTC alarm new value.
 176:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 177:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 178:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_SetAlarm(uint32_t AlarmValue)
 179:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {  
 17830              		.loc 1 179 0
 17831              		.cfi_startproc
 17832              		@ args = 0, pretend = 0, frame = 8
 17833              		@ frame_needed = 1, uses_anonymous_args = 0
 17834 0000 80B5     		push	{r7, lr}
 17835              	.LCFI16:
 17836              		.cfi_def_cfa_offset 8
 17837 0002 82B0     		sub	sp, sp, #8
 17838              	.LCFI17:
 17839              		.cfi_def_cfa_offset 16
 17840 0004 00AF     		add	r7, sp, #0
 17841              		.cfi_offset 14, -4
 17842              		.cfi_offset 7, -8
 17843              	.LCFI18:
 17844              		.cfi_def_cfa_register 7
 17845 0006 7860     		str	r0, [r7, #4]
 180:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 17846              		.loc 1 180 0
 17847 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 181:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set the ALARM MSB word */
 182:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 17848              		.loc 1 182 0
 17849 000c 074B     		ldr	r3, .L22
 17850 000e 7A68     		ldr	r2, [r7, #4]
 17851 0010 4FEA1242 		lsr	r2, r2, #16
 17852 0014 92B2     		uxth	r2, r2
 17853 0016 1A84     		strh	r2, [r3, #32]	@ movhi
 183:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Set the ALARM LSB word */
 184:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->ALRL = (AlarmValue & RTC_LSB_MASK);
 17854              		.loc 1 184 0
 17855 0018 044B     		ldr	r3, .L22
 17856 001a 7A68     		ldr	r2, [r7, #4]
 17857 001c 92B2     		uxth	r2, r2
 17858 001e 9A84     		strh	r2, [r3, #36]	@ movhi
 185:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 17859              		.loc 1 185 0
 17860 0020 FFF7FEFF 		bl	RTC_ExitConfigMode
 186:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17861              		.loc 1 186 0
 17862 0024 07F10807 		add	r7, r7, #8
 17863 0028 BD46     		mov	sp, r7
 17864 002a 80BD     		pop	{r7, pc}
 17865              	.L23:
 17866              		.align	2
 17867              	.L22:
 17868 002c 00280040 		.word	1073752064
 17869              		.cfi_endproc
 17870              	.LFE35:
 17872              		.section	.text.RTC_GetDivider,"ax",%progbits
 17873              		.align	2
 17874              		.global	RTC_GetDivider
 17875              		.thumb
 17876              		.thumb_func
 17878              	RTC_GetDivider:
 17879              	.LFB36:
 187:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 188:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 189:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC divider value.
 190:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  None
 191:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval RTC Divider value.
 192:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 193:../StdPeripheralDriver/src/stm32f10x_rtc.c **** uint32_t RTC_GetDivider(void)
 194:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17880              		.loc 1 194 0
 17881              		.cfi_startproc
 17882              		@ args = 0, pretend = 0, frame = 8
 17883              		@ frame_needed = 1, uses_anonymous_args = 0
 17884              		@ link register save eliminated.
 17885 0000 80B4     		push	{r7}
 17886              	.LCFI19:
 17887              		.cfi_def_cfa_offset 4
 17888 0002 83B0     		sub	sp, sp, #12
 17889              	.LCFI20:
 17890              		.cfi_def_cfa_offset 16
 17891 0004 00AF     		add	r7, sp, #0
 17892              		.cfi_offset 7, -4
 17893              	.LCFI21:
 17894              		.cfi_def_cfa_register 7
 195:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   uint32_t tmp = 0x00;
 17895              		.loc 1 195 0
 17896 0006 4FF00003 		mov	r3, #0
 17897 000a 7B60     		str	r3, [r7, #4]
 196:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 17898              		.loc 1 196 0
 17899 000c 0A4B     		ldr	r3, .L25
 17900 000e 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 17901 0010 9BB2     		uxth	r3, r3
 17902 0012 03F00F03 		and	r3, r3, #15
 17903 0016 4FEA0343 		lsl	r3, r3, #16
 17904 001a 7B60     		str	r3, [r7, #4]
 197:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   tmp |= RTC->DIVL;
 17905              		.loc 1 197 0
 17906 001c 064B     		ldr	r3, .L25
 17907 001e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 17908 0020 9BB2     		uxth	r3, r3
 17909 0022 7A68     		ldr	r2, [r7, #4]
 17910 0024 42EA0303 		orr	r3, r2, r3
 17911 0028 7B60     		str	r3, [r7, #4]
 198:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   return tmp;
 17912              		.loc 1 198 0
 17913 002a 7B68     		ldr	r3, [r7, #4]
 199:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17914              		.loc 1 199 0
 17915 002c 1846     		mov	r0, r3
 17916 002e 07F10C07 		add	r7, r7, #12
 17917 0032 BD46     		mov	sp, r7
 17918 0034 80BC     		pop	{r7}
 17919 0036 7047     		bx	lr
 17920              	.L26:
 17921              		.align	2
 17922              	.L25:
 17923 0038 00280040 		.word	1073752064
 17924              		.cfi_endproc
 17925              	.LFE36:
 17927              		.section	.text.RTC_WaitForLastTask,"ax",%progbits
 17928              		.align	2
 17929              		.global	RTC_WaitForLastTask
 17930              		.thumb
 17931              		.thumb_func
 17933              	RTC_WaitForLastTask:
 17934              	.LFB37:
 200:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 201:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 202:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Waits until last write operation on RTC registers has finished.
 203:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any write to RTC registers.
 204:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  None
 205:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 206:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 207:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_WaitForLastTask(void)
 208:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17935              		.loc 1 208 0
 17936              		.cfi_startproc
 17937              		@ args = 0, pretend = 0, frame = 0
 17938              		@ frame_needed = 1, uses_anonymous_args = 0
 17939              		@ link register save eliminated.
 17940 0000 80B4     		push	{r7}
 17941              	.LCFI22:
 17942              		.cfi_def_cfa_offset 4
 17943 0002 00AF     		add	r7, sp, #0
 17944              		.cfi_offset 7, -4
 17945              	.LCFI23:
 17946              		.cfi_def_cfa_register 7
 209:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Loop until RTOFF flag is set */
 210:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RTOFF) == (uint16_t)RESET)
 17947              		.loc 1 210 0
 17948 0004 00BF     		nop
 17949              	.L28:
 17950              		.loc 1 210 0 is_stmt 0 discriminator 1
 17951 0006 054B     		ldr	r3, .L29
 17952 0008 9B88     		ldrh	r3, [r3, #4]	@ movhi
 17953 000a 9BB2     		uxth	r3, r3
 17954 000c 03F02003 		and	r3, r3, #32
 17955 0010 002B     		cmp	r3, #0
 17956 0012 F8D0     		beq	.L28
 211:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 212:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 213:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 17957              		.loc 1 213 0 is_stmt 1
 17958 0014 BD46     		mov	sp, r7
 17959 0016 80BC     		pop	{r7}
 17960 0018 7047     		bx	lr
 17961              	.L30:
 17962 001a 00BF     		.align	2
 17963              	.L29:
 17964 001c 00280040 		.word	1073752064
 17965              		.cfi_endproc
 17966              	.LFE37:
 17968              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 17969              		.align	2
 17970              		.global	RTC_WaitForSynchro
 17971              		.thumb
 17972              		.thumb_func
 17974              	RTC_WaitForSynchro:
 17975              	.LFB38:
 214:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 215:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 216:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
 217:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   are synchronized with RTC APB clock.
 218:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
 219:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   or an APB clock stop.
 220:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  None
 221:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 222:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 223:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_WaitForSynchro(void)
 224:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 17976              		.loc 1 224 0
 17977              		.cfi_startproc
 17978              		@ args = 0, pretend = 0, frame = 0
 17979              		@ frame_needed = 1, uses_anonymous_args = 0
 17980              		@ link register save eliminated.
 17981 0000 80B4     		push	{r7}
 17982              	.LCFI24:
 17983              		.cfi_def_cfa_offset 4
 17984 0002 00AF     		add	r7, sp, #0
 17985              		.cfi_offset 7, -4
 17986              	.LCFI25:
 17987              		.cfi_def_cfa_register 7
 225:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Clear RSF flag */
 226:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG_RSF;
 17988              		.loc 1 226 0
 17989 0004 094B     		ldr	r3, .L33
 17990 0006 094A     		ldr	r2, .L33
 17991 0008 9288     		ldrh	r2, [r2, #4]	@ movhi
 17992 000a 92B2     		uxth	r2, r2
 17993 000c 22F00802 		bic	r2, r2, #8
 17994 0010 92B2     		uxth	r2, r2
 17995 0012 9A80     		strh	r2, [r3, #4]	@ movhi
 227:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Loop until RSF flag is set */
 228:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RSF) == (uint16_t)RESET)
 17996              		.loc 1 228 0
 17997 0014 00BF     		nop
 17998              	.L32:
 17999              		.loc 1 228 0 is_stmt 0 discriminator 1
 18000 0016 054B     		ldr	r3, .L33
 18001 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18002 001a 9BB2     		uxth	r3, r3
 18003 001c 03F00803 		and	r3, r3, #8
 18004 0020 002B     		cmp	r3, #0
 18005 0022 F8D0     		beq	.L32
 229:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 230:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 231:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 18006              		.loc 1 231 0 is_stmt 1
 18007 0024 BD46     		mov	sp, r7
 18008 0026 80BC     		pop	{r7}
 18009 0028 7047     		bx	lr
 18010              	.L34:
 18011 002a 00BF     		.align	2
 18012              	.L33:
 18013 002c 00280040 		.word	1073752064
 18014              		.cfi_endproc
 18015              	.LFE38:
 18017              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 18018              		.align	2
 18019              		.global	RTC_GetFlagStatus
 18020              		.thumb
 18021              		.thumb_func
 18023              	RTC_GetFlagStatus:
 18024              	.LFB39:
 232:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 233:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 234:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
 235:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
 236:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   This parameter can be one the following values:
 237:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RTOFF: RTC Operation OFF flag
 238:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag
 239:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 240:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 241:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 242:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
 243:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 244:../StdPeripheralDriver/src/stm32f10x_rtc.c **** FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)
 245:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 18025              		.loc 1 245 0
 18026              		.cfi_startproc
 18027              		@ args = 0, pretend = 0, frame = 16
 18028              		@ frame_needed = 1, uses_anonymous_args = 0
 18029              		@ link register save eliminated.
 18030 0000 80B4     		push	{r7}
 18031              	.LCFI26:
 18032              		.cfi_def_cfa_offset 4
 18033 0002 85B0     		sub	sp, sp, #20
 18034              	.LCFI27:
 18035              		.cfi_def_cfa_offset 24
 18036 0004 00AF     		add	r7, sp, #0
 18037              		.cfi_offset 7, -4
 18038              	.LCFI28:
 18039              		.cfi_def_cfa_register 7
 18040 0006 0346     		mov	r3, r0
 18041 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 246:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   FlagStatus bitstatus = RESET;
 18042              		.loc 1 246 0
 18043 000a 4FF00003 		mov	r3, #0
 18044 000e FB73     		strb	r3, [r7, #15]
 247:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   
 248:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 249:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG)); 
 250:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   
 251:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   if ((RTC->CRL & RTC_FLAG) != (uint16_t)RESET)
 18045              		.loc 1 251 0
 18046 0010 0B4B     		ldr	r3, .L38
 18047 0012 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18048 0014 9AB2     		uxth	r2, r3
 18049 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 18050 0018 02EA0303 		and	r3, r2, r3
 18051 001c 9BB2     		uxth	r3, r3
 18052 001e 002B     		cmp	r3, #0
 18053 0020 03D0     		beq	.L36
 252:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 253:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 18054              		.loc 1 253 0
 18055 0022 4FF00103 		mov	r3, #1
 18056 0026 FB73     		strb	r3, [r7, #15]
 18057 0028 02E0     		b	.L37
 18058              	.L36:
 254:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 255:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   else
 256:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 257:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 18059              		.loc 1 257 0
 18060 002a 4FF00003 		mov	r3, #0
 18061 002e FB73     		strb	r3, [r7, #15]
 18062              	.L37:
 258:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 259:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   return bitstatus;
 18063              		.loc 1 259 0
 18064 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 260:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 18065              		.loc 1 260 0
 18066 0032 1846     		mov	r0, r3
 18067 0034 07F11407 		add	r7, r7, #20
 18068 0038 BD46     		mov	sp, r7
 18069 003a 80BC     		pop	{r7}
 18070 003c 7047     		bx	lr
 18071              	.L39:
 18072 003e 00BF     		.align	2
 18073              	.L38:
 18074 0040 00280040 		.word	1073752064
 18075              		.cfi_endproc
 18076              	.LFE39:
 18078              		.section	.text.RTC_ClearFlag,"ax",%progbits
 18079              		.align	2
 18080              		.global	RTC_ClearFlag
 18081              		.thumb
 18082              		.thumb_func
 18084              	RTC_ClearFlag:
 18085              	.LFB40:
 261:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 262:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 263:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's pending flags.
 264:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to clear.
 265:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 266:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag. This flag is cleared only after
 267:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *                        an APB reset or an APB Clock stop.
 268:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 269:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 270:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 271:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 272:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 273:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_ClearFlag(uint16_t RTC_FLAG)
 274:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 18086              		.loc 1 274 0
 18087              		.cfi_startproc
 18088              		@ args = 0, pretend = 0, frame = 8
 18089              		@ frame_needed = 1, uses_anonymous_args = 0
 18090              		@ link register save eliminated.
 18091 0000 80B4     		push	{r7}
 18092              	.LCFI29:
 18093              		.cfi_def_cfa_offset 4
 18094 0002 83B0     		sub	sp, sp, #12
 18095              	.LCFI30:
 18096              		.cfi_def_cfa_offset 16
 18097 0004 00AF     		add	r7, sp, #0
 18098              		.cfi_offset 7, -4
 18099              	.LCFI31:
 18100              		.cfi_def_cfa_register 7
 18101 0006 0346     		mov	r3, r0
 18102 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 275:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 276:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG)); 
 277:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     
 278:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC flag */
 279:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG;
 18103              		.loc 1 279 0
 18104 000a 084B     		ldr	r3, .L41
 18105 000c 074A     		ldr	r2, .L41
 18106 000e 9288     		ldrh	r2, [r2, #4]	@ movhi
 18107 0010 91B2     		uxth	r1, r2
 18108 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 18109 0014 6FEA0202 		mvn	r2, r2
 18110 0018 92B2     		uxth	r2, r2
 18111 001a 01EA0202 		and	r2, r1, r2
 18112 001e 92B2     		uxth	r2, r2
 18113 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 280:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 18114              		.loc 1 280 0
 18115 0022 07F10C07 		add	r7, r7, #12
 18116 0026 BD46     		mov	sp, r7
 18117 0028 80BC     		pop	{r7}
 18118 002a 7047     		bx	lr
 18119              	.L42:
 18120              		.align	2
 18121              	.L41:
 18122 002c 00280040 		.word	1073752064
 18123              		.cfi_endproc
 18124              	.LFE40:
 18126              		.section	.text.RTC_GetITStatus,"ax",%progbits
 18127              		.align	2
 18128              		.global	RTC_GetITStatus
 18129              		.thumb
 18130              		.thumb_func
 18132              	RTC_GetITStatus:
 18133              	.LFB41:
 281:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 282:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 283:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
 284:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to check.
 285:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   This parameter can be one of the following values:
 286:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 287:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 288:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 289:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval The new state of the RTC_IT (SET or RESET).
 290:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 291:../StdPeripheralDriver/src/stm32f10x_rtc.c **** ITStatus RTC_GetITStatus(uint16_t RTC_IT)
 292:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 18134              		.loc 1 292 0
 18135              		.cfi_startproc
 18136              		@ args = 0, pretend = 0, frame = 16
 18137              		@ frame_needed = 1, uses_anonymous_args = 0
 18138              		@ link register save eliminated.
 18139 0000 80B4     		push	{r7}
 18140              	.LCFI32:
 18141              		.cfi_def_cfa_offset 4
 18142 0002 85B0     		sub	sp, sp, #20
 18143              	.LCFI33:
 18144              		.cfi_def_cfa_offset 24
 18145 0004 00AF     		add	r7, sp, #0
 18146              		.cfi_offset 7, -4
 18147              	.LCFI34:
 18148              		.cfi_def_cfa_register 7
 18149 0006 0346     		mov	r3, r0
 18150 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 293:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   ITStatus bitstatus = RESET;
 18151              		.loc 1 293 0
 18152 000a 4FF00003 		mov	r3, #0
 18153 000e FB73     		strb	r3, [r7, #15]
 294:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 295:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT)); 
 296:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   
 297:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 18154              		.loc 1 297 0
 18155 0010 114B     		ldr	r3, .L46
 18156 0012 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18157 0014 9BB2     		uxth	r3, r3
 18158 0016 DAB2     		uxtb	r2, r3
 18159 0018 FB88     		ldrh	r3, [r7, #6]	@ movhi
 18160 001a DBB2     		uxtb	r3, r3
 18161 001c 02EA0303 		and	r3, r2, r3
 18162 0020 FB73     		strb	r3, [r7, #15]
 298:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   if (((RTC->CRH & RTC_IT) != (uint16_t)RESET) && (bitstatus != (uint16_t)RESET))
 18163              		.loc 1 298 0
 18164 0022 0D4B     		ldr	r3, .L46
 18165 0024 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18166 0026 9AB2     		uxth	r2, r3
 18167 0028 FB88     		ldrh	r3, [r7, #6]	@ movhi
 18168 002a 02EA0303 		and	r3, r2, r3
 18169 002e 9BB2     		uxth	r3, r3
 18170 0030 002B     		cmp	r3, #0
 18171 0032 06D0     		beq	.L44
 18172              		.loc 1 298 0 is_stmt 0 discriminator 1
 18173 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 18174 0036 002B     		cmp	r3, #0
 18175 0038 03D0     		beq	.L44
 299:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 300:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 18176              		.loc 1 300 0 is_stmt 1
 18177 003a 4FF00103 		mov	r3, #1
 18178 003e FB73     		strb	r3, [r7, #15]
 18179 0040 02E0     		b	.L45
 18180              	.L44:
 301:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 302:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   else
 303:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   {
 304:../StdPeripheralDriver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 18181              		.loc 1 304 0
 18182 0042 4FF00003 		mov	r3, #0
 18183 0046 FB73     		strb	r3, [r7, #15]
 18184              	.L45:
 305:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   }
 306:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   return bitstatus;
 18185              		.loc 1 306 0
 18186 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 307:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 18187              		.loc 1 307 0
 18188 004a 1846     		mov	r0, r3
 18189 004c 07F11407 		add	r7, r7, #20
 18190 0050 BD46     		mov	sp, r7
 18191 0052 80BC     		pop	{r7}
 18192 0054 7047     		bx	lr
 18193              	.L47:
 18194 0056 00BF     		.align	2
 18195              	.L46:
 18196 0058 00280040 		.word	1073752064
 18197              		.cfi_endproc
 18198              	.LFE41:
 18200              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 18201              		.align	2
 18202              		.global	RTC_ClearITPendingBit
 18203              		.thumb
 18204              		.thumb_func
 18206              	RTC_ClearITPendingBit:
 18207              	.LFB42:
 308:../StdPeripheralDriver/src/stm32f10x_rtc.c **** 
 309:../StdPeripheralDriver/src/stm32f10x_rtc.c **** /**
 310:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
 311:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the interrupt pending bit to clear.
 312:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 313:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 314:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 315:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 316:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   * @retval None
 317:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   */
 318:../StdPeripheralDriver/src/stm32f10x_rtc.c **** void RTC_ClearITPendingBit(uint16_t RTC_IT)
 319:../StdPeripheralDriver/src/stm32f10x_rtc.c **** {
 18208              		.loc 1 319 0
 18209              		.cfi_startproc
 18210              		@ args = 0, pretend = 0, frame = 8
 18211              		@ frame_needed = 1, uses_anonymous_args = 0
 18212              		@ link register save eliminated.
 18213 0000 80B4     		push	{r7}
 18214              	.LCFI35:
 18215              		.cfi_def_cfa_offset 4
 18216 0002 83B0     		sub	sp, sp, #12
 18217              	.LCFI36:
 18218              		.cfi_def_cfa_offset 16
 18219 0004 00AF     		add	r7, sp, #0
 18220              		.cfi_offset 7, -4
 18221              	.LCFI37:
 18222              		.cfi_def_cfa_register 7
 18223 0006 0346     		mov	r3, r0
 18224 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 320:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 321:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 322:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   
 323:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC pending bit */
 324:../StdPeripheralDriver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_IT;
 18225              		.loc 1 324 0
 18226 000a 084B     		ldr	r3, .L49
 18227 000c 074A     		ldr	r2, .L49
 18228 000e 9288     		ldrh	r2, [r2, #4]	@ movhi
 18229 0010 91B2     		uxth	r1, r2
 18230 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 18231 0014 6FEA0202 		mvn	r2, r2
 18232 0018 92B2     		uxth	r2, r2
 18233 001a 01EA0202 		and	r2, r1, r2
 18234 001e 92B2     		uxth	r2, r2
 18235 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 325:../StdPeripheralDriver/src/stm32f10x_rtc.c **** }
 18236              		.loc 1 325 0
 18237 0022 07F10C07 		add	r7, r7, #12
 18238 0026 BD46     		mov	sp, r7
 18239 0028 80BC     		pop	{r7}
 18240 002a 7047     		bx	lr
 18241              	.L50:
 18242              		.align	2
 18243              	.L49:
 18244 002c 00280040 		.word	1073752064
 18245              		.cfi_endproc
 18246              	.LFE42:
 18248              		.text
 18249              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rtc.c
     /tmp/ccIIr1yH.s:17528  .text.RTC_ITConfig:00000000 $t
     /tmp/ccIIr1yH.s:17533  .text.RTC_ITConfig:00000000 RTC_ITConfig
     /tmp/ccIIr1yH.s:17589  .text.RTC_ITConfig:0000004c $d
     /tmp/ccIIr1yH.s:17594  .text.RTC_EnterConfigMode:00000000 $t
     /tmp/ccIIr1yH.s:17599  .text.RTC_EnterConfigMode:00000000 RTC_EnterConfigMode
     /tmp/ccIIr1yH.s:17628  .text.RTC_EnterConfigMode:0000001c $d
     /tmp/ccIIr1yH.s:17633  .text.RTC_ExitConfigMode:00000000 $t
     /tmp/ccIIr1yH.s:17638  .text.RTC_ExitConfigMode:00000000 RTC_ExitConfigMode
     /tmp/ccIIr1yH.s:17667  .text.RTC_ExitConfigMode:0000001c $d
     /tmp/ccIIr1yH.s:17672  .text.RTC_GetCounter:00000000 $t
     /tmp/ccIIr1yH.s:17677  .text.RTC_GetCounter:00000000 RTC_GetCounter
     /tmp/ccIIr1yH.s:17717  .text.RTC_GetCounter:00000030 $d
     /tmp/ccIIr1yH.s:17722  .text.RTC_SetCounter:00000000 $t
     /tmp/ccIIr1yH.s:17727  .text.RTC_SetCounter:00000000 RTC_SetCounter
     /tmp/ccIIr1yH.s:17767  .text.RTC_SetCounter:0000002c $d
     /tmp/ccIIr1yH.s:17772  .text.RTC_SetPrescaler:00000000 $t
     /tmp/ccIIr1yH.s:17777  .text.RTC_SetPrescaler:00000000 RTC_SetPrescaler
     /tmp/ccIIr1yH.s:17818  .text.RTC_SetPrescaler:00000030 $d
     /tmp/ccIIr1yH.s:17823  .text.RTC_SetAlarm:00000000 $t
     /tmp/ccIIr1yH.s:17828  .text.RTC_SetAlarm:00000000 RTC_SetAlarm
     /tmp/ccIIr1yH.s:17868  .text.RTC_SetAlarm:0000002c $d
     /tmp/ccIIr1yH.s:17873  .text.RTC_GetDivider:00000000 $t
     /tmp/ccIIr1yH.s:17878  .text.RTC_GetDivider:00000000 RTC_GetDivider
     /tmp/ccIIr1yH.s:17923  .text.RTC_GetDivider:00000038 $d
     /tmp/ccIIr1yH.s:17928  .text.RTC_WaitForLastTask:00000000 $t
     /tmp/ccIIr1yH.s:17933  .text.RTC_WaitForLastTask:00000000 RTC_WaitForLastTask
     /tmp/ccIIr1yH.s:17964  .text.RTC_WaitForLastTask:0000001c $d
     /tmp/ccIIr1yH.s:17969  .text.RTC_WaitForSynchro:00000000 $t
     /tmp/ccIIr1yH.s:17974  .text.RTC_WaitForSynchro:00000000 RTC_WaitForSynchro
     /tmp/ccIIr1yH.s:18013  .text.RTC_WaitForSynchro:0000002c $d
     /tmp/ccIIr1yH.s:18018  .text.RTC_GetFlagStatus:00000000 $t
     /tmp/ccIIr1yH.s:18023  .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
     /tmp/ccIIr1yH.s:18074  .text.RTC_GetFlagStatus:00000040 $d
     /tmp/ccIIr1yH.s:18079  .text.RTC_ClearFlag:00000000 $t
     /tmp/ccIIr1yH.s:18084  .text.RTC_ClearFlag:00000000 RTC_ClearFlag
     /tmp/ccIIr1yH.s:18122  .text.RTC_ClearFlag:0000002c $d
     /tmp/ccIIr1yH.s:18127  .text.RTC_GetITStatus:00000000 $t
     /tmp/ccIIr1yH.s:18132  .text.RTC_GetITStatus:00000000 RTC_GetITStatus
     /tmp/ccIIr1yH.s:18196  .text.RTC_GetITStatus:00000058 $d
     /tmp/ccIIr1yH.s:18201  .text.RTC_ClearITPendingBit:00000000 $t
     /tmp/ccIIr1yH.s:18206  .text.RTC_ClearITPendingBit:00000000 RTC_ClearITPendingBit
     /tmp/ccIIr1yH.s:18244  .text.RTC_ClearITPendingBit:0000002c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
