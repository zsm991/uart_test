   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_wwdg.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_wwdg.c"
 16785              		.align	2
 16786              		.global	WWDG_DeInit
 16787              		.thumb
 16788              		.thumb_func
 16790              	WWDG_DeInit:
 16791              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @file    stm32f10x_wwdg.c
   4:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief   This file provides all the WWDG firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #include "stm32f10x_wwdg.h"
  24:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG 
  31:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief WWDG driver modules
  32:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  34:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  38:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  41:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  42:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Defines
  44:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  45:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  46:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  48:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  49:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  50:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* Alias word address of EWI bit */
  51:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  52:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define EWI_BitNumber     0x09
  53:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
  54:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  55:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
  56:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  57:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* CR register bit mask */
  58:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CR_WDGA_Set       ((uint32_t)0x00000080)
  59:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  60:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* CFR register bit mask */
  61:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_WDGTB_Mask    ((uint32_t)0xFFFFFE7F)
  62:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_W_Mask        ((uint32_t)0xFFFFFF80)
  63:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define BIT_Mask          ((uint8_t)0x7F)
  64:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  65:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  66:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  67:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  68:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  69:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Macros
  70:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  71:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  72:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  74:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  75:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  76:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Variables
  78:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  79:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  80:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  82:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  83:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_FunctionPrototypes
  86:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  87:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  90:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  91:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Functions
  94:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  95:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  96:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  98:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
  99:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 100:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 101:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 102:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_DeInit(void)
 103:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 16792              		.loc 1 103 0
 16793              		.cfi_startproc
 16794              		@ args = 0, pretend = 0, frame = 0
 16795              		@ frame_needed = 1, uses_anonymous_args = 0
 16796 0000 80B5     		push	{r7, lr}
 16797              	.LCFI0:
 16798              		.cfi_def_cfa_offset 8
 16799 0002 00AF     		add	r7, sp, #0
 16800              		.cfi_offset 14, -4
 16801              		.cfi_offset 7, -8
 16802              	.LCFI1:
 16803              		.cfi_def_cfa_register 7
 104:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
 16804              		.loc 1 104 0
 16805 0004 4FF40060 		mov	r0, #2048
 16806 0008 4FF00101 		mov	r1, #1
 16807 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 105:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
 16808              		.loc 1 105 0
 16809 0010 4FF40060 		mov	r0, #2048
 16810 0014 4FF00001 		mov	r1, #0
 16811 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 106:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 16812              		.loc 1 106 0
 16813 001c 80BD     		pop	{r7, pc}
 16814              		.cfi_endproc
 16815              	.LFE29:
 16817 001e 00BF     		.section	.text.WWDG_SetPrescaler,"ax",%progbits
 16818              		.align	2
 16819              		.global	WWDG_SetPrescaler
 16820              		.thumb
 16821              		.thumb_func
 16823              	WWDG_SetPrescaler:
 16824              	.LFB30:
 107:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 108:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 109:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 110:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 111:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter can be one of the following values:
 112:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 113:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 114:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 115:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 116:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 117:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 118:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 119:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 16825              		.loc 1 119 0
 16826              		.cfi_startproc
 16827              		@ args = 0, pretend = 0, frame = 16
 16828              		@ frame_needed = 1, uses_anonymous_args = 0
 16829              		@ link register save eliminated.
 16830 0000 80B4     		push	{r7}
 16831              	.LCFI2:
 16832              		.cfi_def_cfa_offset 4
 16833 0002 85B0     		sub	sp, sp, #20
 16834              	.LCFI3:
 16835              		.cfi_def_cfa_offset 24
 16836 0004 00AF     		add	r7, sp, #0
 16837              		.cfi_offset 7, -4
 16838              	.LCFI4:
 16839              		.cfi_def_cfa_register 7
 16840 0006 7860     		str	r0, [r7, #4]
 120:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   uint32_t tmpreg = 0;
 16841              		.loc 1 120 0
 16842 0008 4FF00003 		mov	r3, #0
 16843 000c FB60     		str	r3, [r7, #12]
 121:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 122:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 123:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 124:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_Mask;
 16844              		.loc 1 124 0
 16845 000e 094B     		ldr	r3, .L3
 16846 0010 5B68     		ldr	r3, [r3, #4]
 16847 0012 23F4C073 		bic	r3, r3, #384
 16848 0016 FB60     		str	r3, [r7, #12]
 125:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 126:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg |= WWDG_Prescaler;
 16849              		.loc 1 126 0
 16850 0018 FA68     		ldr	r2, [r7, #12]
 16851 001a 7B68     		ldr	r3, [r7, #4]
 16852 001c 42EA0303 		orr	r3, r2, r3
 16853 0020 FB60     		str	r3, [r7, #12]
 127:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Store the new value */
 128:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CFR = tmpreg;
 16854              		.loc 1 128 0
 16855 0022 044B     		ldr	r3, .L3
 16856 0024 FA68     		ldr	r2, [r7, #12]
 16857 0026 5A60     		str	r2, [r3, #4]
 129:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 16858              		.loc 1 129 0
 16859 0028 07F11407 		add	r7, r7, #20
 16860 002c BD46     		mov	sp, r7
 16861 002e 80BC     		pop	{r7}
 16862 0030 7047     		bx	lr
 16863              	.L4:
 16864 0032 00BF     		.align	2
 16865              	.L3:
 16866 0034 002C0040 		.word	1073753088
 16867              		.cfi_endproc
 16868              	.LFE30:
 16870              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
 16871              		.align	2
 16872              		.global	WWDG_SetWindowValue
 16873              		.thumb
 16874              		.thumb_func
 16876              	WWDG_SetWindowValue:
 16877              	.LFB31:
 130:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 131:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 132:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG window value.
 133:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 134:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter value must be lower than 0x80.
 135:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 136:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 137:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 138:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 16878              		.loc 1 138 0
 16879              		.cfi_startproc
 16880              		@ args = 0, pretend = 0, frame = 16
 16881              		@ frame_needed = 1, uses_anonymous_args = 0
 16882              		@ link register save eliminated.
 16883 0000 80B4     		push	{r7}
 16884              	.LCFI5:
 16885              		.cfi_def_cfa_offset 4
 16886 0002 85B0     		sub	sp, sp, #20
 16887              	.LCFI6:
 16888              		.cfi_def_cfa_offset 24
 16889 0004 00AF     		add	r7, sp, #0
 16890              		.cfi_offset 7, -4
 16891              	.LCFI7:
 16892              		.cfi_def_cfa_register 7
 16893 0006 0346     		mov	r3, r0
 16894 0008 FB71     		strb	r3, [r7, #7]
 139:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   __IO uint32_t tmpreg = 0;
 16895              		.loc 1 139 0
 16896 000a 4FF00003 		mov	r3, #0
 16897 000e FB60     		str	r3, [r7, #12]
 140:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 141:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 142:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 143:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Clear W[6:0] bits */
 144:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 145:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_Mask;
 16898              		.loc 1 145 0
 16899 0010 094B     		ldr	r3, .L6
 16900 0012 5B68     		ldr	r3, [r3, #4]
 16901 0014 23F07F03 		bic	r3, r3, #127
 16902 0018 FB60     		str	r3, [r7, #12]
 146:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 147:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 148:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_Mask;
 16903              		.loc 1 148 0
 16904 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 16905 001c 03F07F02 		and	r2, r3, #127
 16906 0020 FB68     		ldr	r3, [r7, #12]
 16907 0022 42EA0303 		orr	r3, r2, r3
 16908 0026 FB60     		str	r3, [r7, #12]
 149:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 150:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Store the new value */
 151:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CFR = tmpreg;
 16909              		.loc 1 151 0
 16910 0028 034B     		ldr	r3, .L6
 16911 002a FA68     		ldr	r2, [r7, #12]
 16912 002c 5A60     		str	r2, [r3, #4]
 152:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 16913              		.loc 1 152 0
 16914 002e 07F11407 		add	r7, r7, #20
 16915 0032 BD46     		mov	sp, r7
 16916 0034 80BC     		pop	{r7}
 16917 0036 7047     		bx	lr
 16918              	.L7:
 16919              		.align	2
 16920              	.L6:
 16921 0038 002C0040 		.word	1073753088
 16922              		.cfi_endproc
 16923              	.LFE31:
 16925              		.section	.text.WWDG_EnableIT,"ax",%progbits
 16926              		.align	2
 16927              		.global	WWDG_EnableIT
 16928              		.thumb
 16929              		.thumb_func
 16931              	WWDG_EnableIT:
 16932              	.LFB32:
 153:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 154:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 155:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 156:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 157:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 158:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 159:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_EnableIT(void)
 160:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 16933              		.loc 1 160 0
 16934              		.cfi_startproc
 16935              		@ args = 0, pretend = 0, frame = 0
 16936              		@ frame_needed = 1, uses_anonymous_args = 0
 16937              		@ link register save eliminated.
 16938 0000 80B4     		push	{r7}
 16939              	.LCFI8:
 16940              		.cfi_def_cfa_offset 4
 16941 0002 00AF     		add	r7, sp, #0
 16942              		.cfi_offset 7, -4
 16943              	.LCFI9:
 16944              		.cfi_def_cfa_register 7
 161:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 16945              		.loc 1 161 0
 16946 0004 034B     		ldr	r3, .L9
 16947 0006 4FF00102 		mov	r2, #1
 16948 000a 1A60     		str	r2, [r3, #0]
 162:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 16949              		.loc 1 162 0
 16950 000c BD46     		mov	sp, r7
 16951 000e 80BC     		pop	{r7}
 16952 0010 7047     		bx	lr
 16953              	.L10:
 16954 0012 00BF     		.align	2
 16955              	.L9:
 16956 0014 A4800542 		.word	1107656868
 16957              		.cfi_endproc
 16958              	.LFE32:
 16960              		.section	.text.WWDG_SetCounter,"ax",%progbits
 16961              		.align	2
 16962              		.global	WWDG_SetCounter
 16963              		.thumb
 16964              		.thumb_func
 16966              	WWDG_SetCounter:
 16967              	.LFB33:
 163:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 164:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 165:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG counter value.
 166:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 167:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 168:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 169:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 170:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 171:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 16968              		.loc 1 171 0
 16969              		.cfi_startproc
 16970              		@ args = 0, pretend = 0, frame = 8
 16971              		@ frame_needed = 1, uses_anonymous_args = 0
 16972              		@ link register save eliminated.
 16973 0000 80B4     		push	{r7}
 16974              	.LCFI10:
 16975              		.cfi_def_cfa_offset 4
 16976 0002 83B0     		sub	sp, sp, #12
 16977              	.LCFI11:
 16978              		.cfi_def_cfa_offset 16
 16979 0004 00AF     		add	r7, sp, #0
 16980              		.cfi_offset 7, -4
 16981              	.LCFI12:
 16982              		.cfi_def_cfa_register 7
 16983 0006 0346     		mov	r3, r0
 16984 0008 FB71     		strb	r3, [r7, #7]
 172:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 173:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 174:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 175:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 176:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CR = Counter & BIT_Mask;
 16985              		.loc 1 176 0
 16986 000a 054B     		ldr	r3, .L12
 16987 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 16988 000e 02F07F02 		and	r2, r2, #127
 16989 0012 1A60     		str	r2, [r3, #0]
 177:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 16990              		.loc 1 177 0
 16991 0014 07F10C07 		add	r7, r7, #12
 16992 0018 BD46     		mov	sp, r7
 16993 001a 80BC     		pop	{r7}
 16994 001c 7047     		bx	lr
 16995              	.L13:
 16996 001e 00BF     		.align	2
 16997              	.L12:
 16998 0020 002C0040 		.word	1073753088
 16999              		.cfi_endproc
 17000              	.LFE33:
 17002              		.section	.text.WWDG_Enable,"ax",%progbits
 17003              		.align	2
 17004              		.global	WWDG_Enable
 17005              		.thumb
 17006              		.thumb_func
 17008              	WWDG_Enable:
 17009              	.LFB34:
 178:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 179:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 180:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 181:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 182:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 183:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 184:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 185:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 186:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17010              		.loc 1 186 0
 17011              		.cfi_startproc
 17012              		@ args = 0, pretend = 0, frame = 8
 17013              		@ frame_needed = 1, uses_anonymous_args = 0
 17014              		@ link register save eliminated.
 17015 0000 80B4     		push	{r7}
 17016              	.LCFI13:
 17017              		.cfi_def_cfa_offset 4
 17018 0002 83B0     		sub	sp, sp, #12
 17019              	.LCFI14:
 17020              		.cfi_def_cfa_offset 16
 17021 0004 00AF     		add	r7, sp, #0
 17022              		.cfi_offset 7, -4
 17023              	.LCFI15:
 17024              		.cfi_def_cfa_register 7
 17025 0006 0346     		mov	r3, r0
 17026 0008 FB71     		strb	r3, [r7, #7]
 187:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 188:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 189:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CR = CR_WDGA_Set | Counter;
 17027              		.loc 1 189 0
 17028 000a 054B     		ldr	r3, .L15
 17029 000c FA79     		ldrb	r2, [r7, #7]
 17030 000e 62F07F02 		orn	r2, r2, #127
 17031 0012 D2B2     		uxtb	r2, r2
 17032 0014 1A60     		str	r2, [r3, #0]
 190:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17033              		.loc 1 190 0
 17034 0016 07F10C07 		add	r7, r7, #12
 17035 001a BD46     		mov	sp, r7
 17036 001c 80BC     		pop	{r7}
 17037 001e 7047     		bx	lr
 17038              	.L16:
 17039              		.align	2
 17040              	.L15:
 17041 0020 002C0040 		.word	1073753088
 17042              		.cfi_endproc
 17043              	.LFE34:
 17045              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 17046              		.align	2
 17047              		.global	WWDG_GetFlagStatus
 17048              		.thumb
 17049              		.thumb_func
 17051              	WWDG_GetFlagStatus:
 17052              	.LFB35:
 191:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 192:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 193:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 194:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 195:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 196:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 197:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 198:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17053              		.loc 1 198 0
 17054              		.cfi_startproc
 17055              		@ args = 0, pretend = 0, frame = 0
 17056              		@ frame_needed = 1, uses_anonymous_args = 0
 17057              		@ link register save eliminated.
 17058 0000 80B4     		push	{r7}
 17059              	.LCFI16:
 17060              		.cfi_def_cfa_offset 4
 17061 0002 00AF     		add	r7, sp, #0
 17062              		.cfi_offset 7, -4
 17063              	.LCFI17:
 17064              		.cfi_def_cfa_register 7
 199:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   return (FlagStatus)(WWDG->SR);
 17065              		.loc 1 199 0
 17066 0004 034B     		ldr	r3, .L18
 17067 0006 9B68     		ldr	r3, [r3, #8]
 17068 0008 DBB2     		uxtb	r3, r3
 200:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17069              		.loc 1 200 0
 17070 000a 1846     		mov	r0, r3
 17071 000c BD46     		mov	sp, r7
 17072 000e 80BC     		pop	{r7}
 17073 0010 7047     		bx	lr
 17074              	.L19:
 17075 0012 00BF     		.align	2
 17076              	.L18:
 17077 0014 002C0040 		.word	1073753088
 17078              		.cfi_endproc
 17079              	.LFE35:
 17081              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 17082              		.align	2
 17083              		.global	WWDG_ClearFlag
 17084              		.thumb
 17085              		.thumb_func
 17087              	WWDG_ClearFlag:
 17088              	.LFB36:
 201:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 202:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 203:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 204:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 205:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 206:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 207:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_ClearFlag(void)
 208:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17089              		.loc 1 208 0
 17090              		.cfi_startproc
 17091              		@ args = 0, pretend = 0, frame = 0
 17092              		@ frame_needed = 1, uses_anonymous_args = 0
 17093              		@ link register save eliminated.
 17094 0000 80B4     		push	{r7}
 17095              	.LCFI18:
 17096              		.cfi_def_cfa_offset 4
 17097 0002 00AF     		add	r7, sp, #0
 17098              		.cfi_offset 7, -4
 17099              	.LCFI19:
 17100              		.cfi_def_cfa_register 7
 209:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 17101              		.loc 1 209 0
 17102 0004 034B     		ldr	r3, .L21
 17103 0006 4FF00002 		mov	r2, #0
 17104 000a 9A60     		str	r2, [r3, #8]
 210:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17105              		.loc 1 210 0
 17106 000c BD46     		mov	sp, r7
 17107 000e 80BC     		pop	{r7}
 17108 0010 7047     		bx	lr
 17109              	.L22:
 17110 0012 00BF     		.align	2
 17111              	.L21:
 17112 0014 002C0040 		.word	1073753088
 17113              		.cfi_endproc
 17114              	.LFE36:
 17116              		.text
 17117              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_wwdg.c
     /tmp/ccGQpvYp.s:16785  .text.WWDG_DeInit:00000000 $t
     /tmp/ccGQpvYp.s:16790  .text.WWDG_DeInit:00000000 WWDG_DeInit
     /tmp/ccGQpvYp.s:16818  .text.WWDG_SetPrescaler:00000000 $t
     /tmp/ccGQpvYp.s:16823  .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
     /tmp/ccGQpvYp.s:16866  .text.WWDG_SetPrescaler:00000034 $d
     /tmp/ccGQpvYp.s:16871  .text.WWDG_SetWindowValue:00000000 $t
     /tmp/ccGQpvYp.s:16876  .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
     /tmp/ccGQpvYp.s:16921  .text.WWDG_SetWindowValue:00000038 $d
     /tmp/ccGQpvYp.s:16926  .text.WWDG_EnableIT:00000000 $t
     /tmp/ccGQpvYp.s:16931  .text.WWDG_EnableIT:00000000 WWDG_EnableIT
     /tmp/ccGQpvYp.s:16956  .text.WWDG_EnableIT:00000014 $d
     /tmp/ccGQpvYp.s:16961  .text.WWDG_SetCounter:00000000 $t
     /tmp/ccGQpvYp.s:16966  .text.WWDG_SetCounter:00000000 WWDG_SetCounter
     /tmp/ccGQpvYp.s:16998  .text.WWDG_SetCounter:00000020 $d
     /tmp/ccGQpvYp.s:17003  .text.WWDG_Enable:00000000 $t
     /tmp/ccGQpvYp.s:17008  .text.WWDG_Enable:00000000 WWDG_Enable
     /tmp/ccGQpvYp.s:17041  .text.WWDG_Enable:00000020 $d
     /tmp/ccGQpvYp.s:17046  .text.WWDG_GetFlagStatus:00000000 $t
     /tmp/ccGQpvYp.s:17051  .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
     /tmp/ccGQpvYp.s:17077  .text.WWDG_GetFlagStatus:00000014 $d
     /tmp/ccGQpvYp.s:17082  .text.WWDG_ClearFlag:00000000 $t
     /tmp/ccGQpvYp.s:17087  .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
     /tmp/ccGQpvYp.s:17112  .text.WWDG_ClearFlag:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
