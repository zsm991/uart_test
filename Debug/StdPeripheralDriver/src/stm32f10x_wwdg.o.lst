   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_wwdg.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_wwdg.c"
 17526              		.align	2
 17527              		.global	WWDG_DeInit
 17528              		.thumb
 17529              		.thumb_func
 17531              	WWDG_DeInit:
 17532              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @file    stm32f10x_wwdg.c
   4:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief   This file provides all the WWDG firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #include "stm32f10x_wwdg.h"
  24:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG 
  31:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief WWDG driver modules
  32:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  34:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  38:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  41:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  42:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Defines
  44:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  45:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  46:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  48:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  49:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  50:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* Alias word address of EWI bit */
  51:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  52:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define EWI_BitNumber     0x09
  53:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
  54:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  55:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
  56:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  57:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* CR register bit mask */
  58:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CR_WDGA_Set       ((uint32_t)0x00000080)
  59:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  60:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /* CFR register bit mask */
  61:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_WDGTB_Mask    ((uint32_t)0xFFFFFE7F)
  62:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define CFR_W_Mask        ((uint32_t)0xFFFFFF80)
  63:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** #define BIT_Mask          ((uint8_t)0x7F)
  64:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  65:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  66:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  67:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  68:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  69:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Macros
  70:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  71:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  72:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  74:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  75:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  76:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Variables
  78:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  79:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  80:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  82:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  83:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_FunctionPrototypes
  86:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  87:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  90:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @}
  91:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Functions
  94:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @{
  95:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
  96:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
  98:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
  99:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 100:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 101:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 102:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_DeInit(void)
 103:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17533              		.loc 1 103 0
 17534              		.cfi_startproc
 17535              		@ args = 0, pretend = 0, frame = 0
 17536              		@ frame_needed = 1, uses_anonymous_args = 0
 17537 0000 80B5     		push	{r7, lr}
 17538              	.LCFI0:
 17539              		.cfi_def_cfa_offset 8
 17540 0002 00AF     		add	r7, sp, #0
 17541              		.cfi_offset 14, -4
 17542              		.cfi_offset 7, -8
 17543              	.LCFI1:
 17544              		.cfi_def_cfa_register 7
 104:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
 17545              		.loc 1 104 0
 17546 0004 4FF40060 		mov	r0, #2048
 17547 0008 4FF00101 		mov	r1, #1
 17548 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 105:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
 17549              		.loc 1 105 0
 17550 0010 4FF40060 		mov	r0, #2048
 17551 0014 4FF00001 		mov	r1, #0
 17552 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 106:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17553              		.loc 1 106 0
 17554 001c 80BD     		pop	{r7, pc}
 17555              		.cfi_endproc
 17556              	.LFE29:
 17558 001e 00BF     		.section	.text.WWDG_SetPrescaler,"ax",%progbits
 17559              		.align	2
 17560              		.global	WWDG_SetPrescaler
 17561              		.thumb
 17562              		.thumb_func
 17564              	WWDG_SetPrescaler:
 17565              	.LFB30:
 107:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 108:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 109:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 110:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 111:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter can be one of the following values:
 112:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 113:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 114:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 115:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 116:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 117:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 118:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 119:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17566              		.loc 1 119 0
 17567              		.cfi_startproc
 17568              		@ args = 0, pretend = 0, frame = 16
 17569              		@ frame_needed = 1, uses_anonymous_args = 0
 17570              		@ link register save eliminated.
 17571 0000 80B4     		push	{r7}
 17572              	.LCFI2:
 17573              		.cfi_def_cfa_offset 4
 17574 0002 85B0     		sub	sp, sp, #20
 17575              	.LCFI3:
 17576              		.cfi_def_cfa_offset 24
 17577 0004 00AF     		add	r7, sp, #0
 17578              		.cfi_offset 7, -4
 17579              	.LCFI4:
 17580              		.cfi_def_cfa_register 7
 17581 0006 7860     		str	r0, [r7, #4]
 120:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   uint32_t tmpreg = 0;
 17582              		.loc 1 120 0
 17583 0008 4FF00003 		mov	r3, #0
 17584 000c FB60     		str	r3, [r7, #12]
 121:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 122:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 123:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 124:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_Mask;
 17585              		.loc 1 124 0
 17586 000e 094B     		ldr	r3, .L3
 17587 0010 5B68     		ldr	r3, [r3, #4]
 17588 0012 23F4C073 		bic	r3, r3, #384
 17589 0016 FB60     		str	r3, [r7, #12]
 125:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 126:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg |= WWDG_Prescaler;
 17590              		.loc 1 126 0
 17591 0018 FA68     		ldr	r2, [r7, #12]
 17592 001a 7B68     		ldr	r3, [r7, #4]
 17593 001c 42EA0303 		orr	r3, r2, r3
 17594 0020 FB60     		str	r3, [r7, #12]
 127:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Store the new value */
 128:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CFR = tmpreg;
 17595              		.loc 1 128 0
 17596 0022 044B     		ldr	r3, .L3
 17597 0024 FA68     		ldr	r2, [r7, #12]
 17598 0026 5A60     		str	r2, [r3, #4]
 129:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17599              		.loc 1 129 0
 17600 0028 07F11407 		add	r7, r7, #20
 17601 002c BD46     		mov	sp, r7
 17602 002e 80BC     		pop	{r7}
 17603 0030 7047     		bx	lr
 17604              	.L4:
 17605 0032 00BF     		.align	2
 17606              	.L3:
 17607 0034 002C0040 		.word	1073753088
 17608              		.cfi_endproc
 17609              	.LFE30:
 17611              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
 17612              		.align	2
 17613              		.global	WWDG_SetWindowValue
 17614              		.thumb
 17615              		.thumb_func
 17617              	WWDG_SetWindowValue:
 17618              	.LFB31:
 130:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 131:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 132:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG window value.
 133:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 134:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter value must be lower than 0x80.
 135:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 136:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 137:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 138:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17619              		.loc 1 138 0
 17620              		.cfi_startproc
 17621              		@ args = 0, pretend = 0, frame = 16
 17622              		@ frame_needed = 1, uses_anonymous_args = 0
 17623              		@ link register save eliminated.
 17624 0000 80B4     		push	{r7}
 17625              	.LCFI5:
 17626              		.cfi_def_cfa_offset 4
 17627 0002 85B0     		sub	sp, sp, #20
 17628              	.LCFI6:
 17629              		.cfi_def_cfa_offset 24
 17630 0004 00AF     		add	r7, sp, #0
 17631              		.cfi_offset 7, -4
 17632              	.LCFI7:
 17633              		.cfi_def_cfa_register 7
 17634 0006 0346     		mov	r3, r0
 17635 0008 FB71     		strb	r3, [r7, #7]
 139:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   __IO uint32_t tmpreg = 0;
 17636              		.loc 1 139 0
 17637 000a 4FF00003 		mov	r3, #0
 17638 000e FB60     		str	r3, [r7, #12]
 140:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 141:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 142:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 143:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Clear W[6:0] bits */
 144:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 145:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_Mask;
 17639              		.loc 1 145 0
 17640 0010 094B     		ldr	r3, .L6
 17641 0012 5B68     		ldr	r3, [r3, #4]
 17642 0014 23F07F03 		bic	r3, r3, #127
 17643 0018 FB60     		str	r3, [r7, #12]
 146:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 147:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 148:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_Mask;
 17644              		.loc 1 148 0
 17645 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 17646 001c 03F07F02 		and	r2, r3, #127
 17647 0020 FB68     		ldr	r3, [r7, #12]
 17648 0022 42EA0303 		orr	r3, r2, r3
 17649 0026 FB60     		str	r3, [r7, #12]
 149:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 150:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Store the new value */
 151:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CFR = tmpreg;
 17650              		.loc 1 151 0
 17651 0028 034B     		ldr	r3, .L6
 17652 002a FA68     		ldr	r2, [r7, #12]
 17653 002c 5A60     		str	r2, [r3, #4]
 152:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17654              		.loc 1 152 0
 17655 002e 07F11407 		add	r7, r7, #20
 17656 0032 BD46     		mov	sp, r7
 17657 0034 80BC     		pop	{r7}
 17658 0036 7047     		bx	lr
 17659              	.L7:
 17660              		.align	2
 17661              	.L6:
 17662 0038 002C0040 		.word	1073753088
 17663              		.cfi_endproc
 17664              	.LFE31:
 17666              		.section	.text.WWDG_EnableIT,"ax",%progbits
 17667              		.align	2
 17668              		.global	WWDG_EnableIT
 17669              		.thumb
 17670              		.thumb_func
 17672              	WWDG_EnableIT:
 17673              	.LFB32:
 153:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 154:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 155:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 156:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 157:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 158:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 159:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_EnableIT(void)
 160:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17674              		.loc 1 160 0
 17675              		.cfi_startproc
 17676              		@ args = 0, pretend = 0, frame = 0
 17677              		@ frame_needed = 1, uses_anonymous_args = 0
 17678              		@ link register save eliminated.
 17679 0000 80B4     		push	{r7}
 17680              	.LCFI8:
 17681              		.cfi_def_cfa_offset 4
 17682 0002 00AF     		add	r7, sp, #0
 17683              		.cfi_offset 7, -4
 17684              	.LCFI9:
 17685              		.cfi_def_cfa_register 7
 161:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 17686              		.loc 1 161 0
 17687 0004 034B     		ldr	r3, .L9
 17688 0006 4FF00102 		mov	r2, #1
 17689 000a 1A60     		str	r2, [r3, #0]
 162:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17690              		.loc 1 162 0
 17691 000c BD46     		mov	sp, r7
 17692 000e 80BC     		pop	{r7}
 17693 0010 7047     		bx	lr
 17694              	.L10:
 17695 0012 00BF     		.align	2
 17696              	.L9:
 17697 0014 A4800542 		.word	1107656868
 17698              		.cfi_endproc
 17699              	.LFE32:
 17701              		.section	.text.WWDG_SetCounter,"ax",%progbits
 17702              		.align	2
 17703              		.global	WWDG_SetCounter
 17704              		.thumb
 17705              		.thumb_func
 17707              	WWDG_SetCounter:
 17708              	.LFB33:
 163:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 164:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 165:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG counter value.
 166:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 167:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 168:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 169:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 170:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 171:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17709              		.loc 1 171 0
 17710              		.cfi_startproc
 17711              		@ args = 0, pretend = 0, frame = 8
 17712              		@ frame_needed = 1, uses_anonymous_args = 0
 17713              		@ link register save eliminated.
 17714 0000 80B4     		push	{r7}
 17715              	.LCFI10:
 17716              		.cfi_def_cfa_offset 4
 17717 0002 83B0     		sub	sp, sp, #12
 17718              	.LCFI11:
 17719              		.cfi_def_cfa_offset 16
 17720 0004 00AF     		add	r7, sp, #0
 17721              		.cfi_offset 7, -4
 17722              	.LCFI12:
 17723              		.cfi_def_cfa_register 7
 17724 0006 0346     		mov	r3, r0
 17725 0008 FB71     		strb	r3, [r7, #7]
 172:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 173:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 174:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 175:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 176:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CR = Counter & BIT_Mask;
 17726              		.loc 1 176 0
 17727 000a 054B     		ldr	r3, .L12
 17728 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 17729 000e 02F07F02 		and	r2, r2, #127
 17730 0012 1A60     		str	r2, [r3, #0]
 177:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17731              		.loc 1 177 0
 17732 0014 07F10C07 		add	r7, r7, #12
 17733 0018 BD46     		mov	sp, r7
 17734 001a 80BC     		pop	{r7}
 17735 001c 7047     		bx	lr
 17736              	.L13:
 17737 001e 00BF     		.align	2
 17738              	.L12:
 17739 0020 002C0040 		.word	1073753088
 17740              		.cfi_endproc
 17741              	.LFE33:
 17743              		.section	.text.WWDG_Enable,"ax",%progbits
 17744              		.align	2
 17745              		.global	WWDG_Enable
 17746              		.thumb
 17747              		.thumb_func
 17749              	WWDG_Enable:
 17750              	.LFB34:
 178:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 179:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 180:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 181:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 182:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 183:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 184:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 185:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 186:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17751              		.loc 1 186 0
 17752              		.cfi_startproc
 17753              		@ args = 0, pretend = 0, frame = 8
 17754              		@ frame_needed = 1, uses_anonymous_args = 0
 17755              		@ link register save eliminated.
 17756 0000 80B4     		push	{r7}
 17757              	.LCFI13:
 17758              		.cfi_def_cfa_offset 4
 17759 0002 83B0     		sub	sp, sp, #12
 17760              	.LCFI14:
 17761              		.cfi_def_cfa_offset 16
 17762 0004 00AF     		add	r7, sp, #0
 17763              		.cfi_offset 7, -4
 17764              	.LCFI15:
 17765              		.cfi_def_cfa_register 7
 17766 0006 0346     		mov	r3, r0
 17767 0008 FB71     		strb	r3, [r7, #7]
 187:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 188:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 189:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->CR = CR_WDGA_Set | Counter;
 17768              		.loc 1 189 0
 17769 000a 054B     		ldr	r3, .L15
 17770 000c FA79     		ldrb	r2, [r7, #7]
 17771 000e 62F07F02 		orn	r2, r2, #127
 17772 0012 D2B2     		uxtb	r2, r2
 17773 0014 1A60     		str	r2, [r3, #0]
 190:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17774              		.loc 1 190 0
 17775 0016 07F10C07 		add	r7, r7, #12
 17776 001a BD46     		mov	sp, r7
 17777 001c 80BC     		pop	{r7}
 17778 001e 7047     		bx	lr
 17779              	.L16:
 17780              		.align	2
 17781              	.L15:
 17782 0020 002C0040 		.word	1073753088
 17783              		.cfi_endproc
 17784              	.LFE34:
 17786              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 17787              		.align	2
 17788              		.global	WWDG_GetFlagStatus
 17789              		.thumb
 17790              		.thumb_func
 17792              	WWDG_GetFlagStatus:
 17793              	.LFB35:
 191:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 192:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 193:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 194:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 195:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 196:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 197:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 198:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17794              		.loc 1 198 0
 17795              		.cfi_startproc
 17796              		@ args = 0, pretend = 0, frame = 0
 17797              		@ frame_needed = 1, uses_anonymous_args = 0
 17798              		@ link register save eliminated.
 17799 0000 80B4     		push	{r7}
 17800              	.LCFI16:
 17801              		.cfi_def_cfa_offset 4
 17802 0002 00AF     		add	r7, sp, #0
 17803              		.cfi_offset 7, -4
 17804              	.LCFI17:
 17805              		.cfi_def_cfa_register 7
 199:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   return (FlagStatus)(WWDG->SR);
 17806              		.loc 1 199 0
 17807 0004 034B     		ldr	r3, .L18
 17808 0006 9B68     		ldr	r3, [r3, #8]
 17809 0008 DBB2     		uxtb	r3, r3
 200:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17810              		.loc 1 200 0
 17811 000a 1846     		mov	r0, r3
 17812 000c BD46     		mov	sp, r7
 17813 000e 80BC     		pop	{r7}
 17814 0010 7047     		bx	lr
 17815              	.L19:
 17816 0012 00BF     		.align	2
 17817              	.L18:
 17818 0014 002C0040 		.word	1073753088
 17819              		.cfi_endproc
 17820              	.LFE35:
 17822              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 17823              		.align	2
 17824              		.global	WWDG_ClearFlag
 17825              		.thumb
 17826              		.thumb_func
 17828              	WWDG_ClearFlag:
 17829              	.LFB36:
 201:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** 
 202:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** /**
 203:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 204:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @param  None
 205:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   * @retval None
 206:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   */
 207:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** void WWDG_ClearFlag(void)
 208:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** {
 17830              		.loc 1 208 0
 17831              		.cfi_startproc
 17832              		@ args = 0, pretend = 0, frame = 0
 17833              		@ frame_needed = 1, uses_anonymous_args = 0
 17834              		@ link register save eliminated.
 17835 0000 80B4     		push	{r7}
 17836              	.LCFI18:
 17837              		.cfi_def_cfa_offset 4
 17838 0002 00AF     		add	r7, sp, #0
 17839              		.cfi_offset 7, -4
 17840              	.LCFI19:
 17841              		.cfi_def_cfa_register 7
 209:../StdPeripheralDriver/src/stm32f10x_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 17842              		.loc 1 209 0
 17843 0004 034B     		ldr	r3, .L21
 17844 0006 4FF00002 		mov	r2, #0
 17845 000a 9A60     		str	r2, [r3, #8]
 210:../StdPeripheralDriver/src/stm32f10x_wwdg.c **** }
 17846              		.loc 1 210 0
 17847 000c BD46     		mov	sp, r7
 17848 000e 80BC     		pop	{r7}
 17849 0010 7047     		bx	lr
 17850              	.L22:
 17851 0012 00BF     		.align	2
 17852              	.L21:
 17853 0014 002C0040 		.word	1073753088
 17854              		.cfi_endproc
 17855              	.LFE36:
 17857              		.text
 17858              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_wwdg.c
     /tmp/ccOx1kVd.s:17526  .text.WWDG_DeInit:00000000 $t
     /tmp/ccOx1kVd.s:17531  .text.WWDG_DeInit:00000000 WWDG_DeInit
     /tmp/ccOx1kVd.s:17559  .text.WWDG_SetPrescaler:00000000 $t
     /tmp/ccOx1kVd.s:17564  .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
     /tmp/ccOx1kVd.s:17607  .text.WWDG_SetPrescaler:00000034 $d
     /tmp/ccOx1kVd.s:17612  .text.WWDG_SetWindowValue:00000000 $t
     /tmp/ccOx1kVd.s:17617  .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
     /tmp/ccOx1kVd.s:17662  .text.WWDG_SetWindowValue:00000038 $d
     /tmp/ccOx1kVd.s:17667  .text.WWDG_EnableIT:00000000 $t
     /tmp/ccOx1kVd.s:17672  .text.WWDG_EnableIT:00000000 WWDG_EnableIT
     /tmp/ccOx1kVd.s:17697  .text.WWDG_EnableIT:00000014 $d
     /tmp/ccOx1kVd.s:17702  .text.WWDG_SetCounter:00000000 $t
     /tmp/ccOx1kVd.s:17707  .text.WWDG_SetCounter:00000000 WWDG_SetCounter
     /tmp/ccOx1kVd.s:17739  .text.WWDG_SetCounter:00000020 $d
     /tmp/ccOx1kVd.s:17744  .text.WWDG_Enable:00000000 $t
     /tmp/ccOx1kVd.s:17749  .text.WWDG_Enable:00000000 WWDG_Enable
     /tmp/ccOx1kVd.s:17782  .text.WWDG_Enable:00000020 $d
     /tmp/ccOx1kVd.s:17787  .text.WWDG_GetFlagStatus:00000000 $t
     /tmp/ccOx1kVd.s:17792  .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
     /tmp/ccOx1kVd.s:17818  .text.WWDG_GetFlagStatus:00000014 $d
     /tmp/ccOx1kVd.s:17823  .text.WWDG_ClearFlag:00000000 $t
     /tmp/ccOx1kVd.s:17828  .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
     /tmp/ccOx1kVd.s:17853  .text.WWDG_ClearFlag:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
